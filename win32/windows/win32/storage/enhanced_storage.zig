//! NOTE: this file is autogenerated, DO NOT MODIFY
//--------------------------------------------------------------------------------
// Section: Constants (1384)
//--------------------------------------------------------------------------------
pub const GUID_DEVINTERFACE_ENHANCED_STORAGE_SILO = Guid.initString("3897f6a4-fd35-4bc8-a0b7-5dbba36adafa");
pub const WPD_CATEGORY_ENHANCED_STORAGE = Guid.initString("91248166-b832-4ad4-baa4-7ca0b6b2798c");
pub const ENHANCED_STORAGE_COMMAND_SILO_IS_AUTHENTICATION_SILO = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 6 };
pub const ENHANCED_STORAGE_COMMAND_SILO_GET_AUTHENTICATION_STATE = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 7 };
pub const ENHANCED_STORAGE_COMMAND_SILO_ENUMERATE_SILOS = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 11 };
pub const ENHANCED_STORAGE_COMMAND_CERT_HOST_CERTIFICATE_AUTHENTICATION = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 101 };
pub const ENHANCED_STORAGE_COMMAND_CERT_DEVICE_CERTIFICATE_AUTHENTICATION = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 102 };
pub const ENHANCED_STORAGE_COMMAND_CERT_ADMIN_CERTIFICATE_AUTHENTICATION = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 103 };
pub const ENHANCED_STORAGE_COMMAND_CERT_INITIALIZE_TO_MANUFACTURER_STATE = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 104 };
pub const ENHANCED_STORAGE_COMMAND_CERT_GET_CERTIFICATE_COUNT = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 105 };
pub const ENHANCED_STORAGE_COMMAND_CERT_GET_CERTIFICATE = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 106 };
pub const ENHANCED_STORAGE_COMMAND_CERT_SET_CERTIFICATE = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 107 };
pub const ENHANCED_STORAGE_COMMAND_CERT_CREATE_CERTIFICATE_REQUEST = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 108 };
pub const ENHANCED_STORAGE_COMMAND_CERT_UNAUTHENTICATION = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 110 };
pub const ENHANCED_STORAGE_COMMAND_CERT_GET_SILO_CAPABILITY = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 111 };
pub const ENHANCED_STORAGE_COMMAND_CERT_GET_SILO_CAPABILITIES = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 112 };
pub const ENHANCED_STORAGE_COMMAND_CERT_GET_ACT_FRIENDLY_NAME = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 113 };
pub const ENHANCED_STORAGE_COMMAND_CERT_GET_SILO_GUID = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 114 };
pub const ENHANCED_STORAGE_COMMAND_PASSWORD_AUTHORIZE_ACT_ACCESS = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 203 };
pub const ENHANCED_STORAGE_COMMAND_PASSWORD_UNAUTHORIZE_ACT_ACCESS = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 204 };
pub const ENHANCED_STORAGE_COMMAND_PASSWORD_QUERY_INFORMATION = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 205 };
pub const ENHANCED_STORAGE_COMMAND_PASSWORD_CONFIG_ADMINISTRATOR = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 206 };
pub const ENHANCED_STORAGE_COMMAND_PASSWORD_CREATE_USER = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 207 };
pub const ENHANCED_STORAGE_COMMAND_PASSWORD_DELETE_USER = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 208 };
pub const ENHANCED_STORAGE_COMMAND_PASSWORD_CHANGE_PASSWORD = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 209 };
pub const ENHANCED_STORAGE_COMMAND_PASSWORD_INITIALIZE_USER_PASSWORD = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 210 };
pub const ENHANCED_STORAGE_COMMAND_PASSWORD_START_INITIALIZE_TO_MANUFACTURER_STATE = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 211 };
pub const ENHANCED_STORAGE_PROPERTY_AUTHENTICATION_STATE = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 1006 };
pub const ENHANCED_STORAGE_AUTHN_STATE_UNKNOWN = @as(u32, 0);
pub const ENHANCED_STORAGE_AUTHN_STATE_NO_AUTHENTICATION_REQUIRED = @as(u32, 1);
pub const ENHANCED_STORAGE_AUTHN_STATE_NOT_AUTHENTICATED = @as(u32, 2);
pub const ENHANCED_STORAGE_AUTHN_STATE_AUTHENTICATED = @as(u32, 3);
pub const ENHANCED_STORAGE_AUTHN_STATE_AUTHENTICATION_DENIED = @as(u32, 2147483649);
pub const ENHANCED_STORAGE_AUTHN_STATE_DEVICE_ERROR = @as(u32, 2147483650);
pub const ENHANCED_STORAGE_PROPERTY_IS_AUTHENTICATION_SILO = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 1009 };
pub const ENHANCED_STORAGE_PROPERTY_TEMPORARY_UNAUTHENTICATION = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 1010 };
pub const ENHANCED_STORAGE_PROPERTY_MAX_AUTH_FAILURES = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 2001 };
pub const ENHANCED_STORAGE_PROPERTY_PASSWORD = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 2004 };
pub const ENHANCED_STORAGE_PROPERTY_OLD_PASSWORD = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 2005 };
pub const ENHANCED_STORAGE_PROPERTY_PASSWORD_INDICATOR = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 2006 };
pub const ENHANCED_STORAGE_PROPERTY_NEW_PASSWORD_INDICATOR = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 2007 };
pub const ENHANCED_STORAGE_PROPERTY_NEW_PASSWORD = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 2008 };
pub const ENHANCED_STORAGE_PROPERTY_USER_HINT = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 2009 };
pub const ENHANCED_STORAGE_PROPERTY_USER_NAME = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 2010 };
pub const ENHANCED_STORAGE_PROPERTY_ADMIN_HINT = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 2011 };
pub const ENHANCED_STORAGE_PROPERTY_SILO_NAME = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 2012 };
pub const ENHANCED_STORAGE_PROPERTY_SILO_FRIENDLYNAME_SPECIFIED = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 2013 };
pub const ENHANCED_STORAGE_PROPERTY_PASSWORD_SILO_INFO = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 2014 };
pub const ENHANCED_STORAGE_PROPERTY_SECURITY_IDENTIFIER = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 2015 };
pub const ENHANCED_STORAGE_PROPERTY_QUERY_SILO_TYPE = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 2016 };
pub const ENHANCED_STORAGE_PROPERTY_QUERY_SILO_RESULTS = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 2017 };
pub const ENHANCED_STORAGE_PROPERTY_MAX_CERTIFICATE_COUNT = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 3001 };
pub const ENHANCED_STORAGE_PROPERTY_STORED_CERTIFICATE_COUNT = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 3002 };
pub const ENHANCED_STORAGE_PROPERTY_CERTIFICATE_INDEX = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 3003 };
pub const ENHANCED_STORAGE_PROPERTY_CERTIFICATE_TYPE = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 3004 };
pub const CERT_TYPE_EMPTY = @as(u32, 0);
pub const CERT_TYPE_ASCm = @as(u32, 1);
pub const CERT_TYPE_PCp = @as(u32, 2);
pub const CERT_TYPE_ASCh = @as(u32, 3);
pub const CERT_TYPE_HCh = @as(u32, 4);
pub const CERT_TYPE_SIGNER = @as(u32, 6);
pub const ENHANCED_STORAGE_PROPERTY_VALIDATION_POLICY = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 3005 };
pub const CERT_VALIDATION_POLICY_RESERVED = @as(u32, 0);
pub const CERT_VALIDATION_POLICY_NONE = @as(u32, 1);
pub const CERT_VALIDATION_POLICY_BASIC = @as(u32, 2);
pub const CERT_VALIDATION_POLICY_EXTENDED = @as(u32, 3);
pub const ENHANCED_STORAGE_PROPERTY_NEXT_CERTIFICATE_INDEX = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 3006 };
pub const ENHANCED_STORAGE_PROPERTY_NEXT_CERTIFICATE_OF_TYPE_INDEX = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 3007 };
pub const ENHANCED_STORAGE_PROPERTY_CERTIFICATE_LENGTH = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 3008 };
pub const ENHANCED_STORAGE_PROPERTY_CERTIFICATE = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 3009 };
pub const ENHANCED_STORAGE_PROPERTY_CERTIFICATE_REQUEST = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 3010 };
pub const ENHANCED_STORAGE_PROPERTY_CERTIFICATE_CAPABILITY_TYPE = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 3011 };
pub const ENHANCED_STORAGE_PROPERTY_CERTIFICATE_SILO_CAPABILITY = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 3012 };
pub const ENHANCED_STORAGE_PROPERTY_CERTIFICATE_SILO_CAPABILITIES = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 3013 };
pub const CERT_CAPABILITY_HASH_ALG = @as(u32, 1);
pub const CERT_CAPABILITY_ASYMMETRIC_KEY_CRYPTOGRAPHY = @as(u32, 2);
pub const CERT_CAPABILITY_SIGNATURE_ALG = @as(u32, 3);
pub const CERT_CAPABILITY_CERTIFICATE_SUPPORT = @as(u32, 4);
pub const CERT_CAPABILITY_OPTIONAL_FEATURES = @as(u32, 5);
pub const CERT_MAX_CAPABILITY = @as(u32, 255);
pub const CERT_RSA_1024_OID = "1.2.840.113549.1.1.1,1024";
pub const CERT_RSA_2048_OID = "1.2.840.113549.1.1.1,2048";
pub const CERT_RSA_3072_OID = "1.2.840.113549.1.1.1,3072";
pub const CERT_RSASSA_PSS_SHA1_OID = "1.2.840.113549.1.1.10,1.3.14.3.2.26";
pub const CERT_RSASSA_PSS_SHA256_OID = "1.2.840.113549.1.1.10,2.16.840.1.101.3.4.2.1";
pub const CERT_RSASSA_PSS_SHA384_OID = "1.2.840.113549.1.1.10,2.16.840.1.101.3.4.2.2";
pub const CERT_RSASSA_PSS_SHA512_OID = "1.2.840.113549.1.1.10,2.16.840.1.101.3.4.2.3";
pub const ENHANCED_STORAGE_PROPERTY_CERTIFICATE_ACT_FRIENDLY_NAME = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 3014 };
pub const ENHANCED_STORAGE_PROPERTY_CERTIFICATE_SILO_GUID = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 3015 };
pub const ENHANCED_STORAGE_PROPERTY_SIGNER_CERTIFICATE_INDEX = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 3016 };
pub const ENHANCED_STORAGE_CAPABILITY_HASH_ALGS = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 4001 };
pub const ENHANCED_STORAGE_CAPABILITY_ASYMMETRIC_KEY_CRYPTOGRAPHY = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 4002 };
pub const ENHANCED_STORAGE_CAPABILITY_SIGNING_ALGS = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 4003 };
pub const ENHANCED_STORAGE_CAPABILITY_RENDER_USER_DATA_UNUSABLE = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 4004 };
pub const ENHANCED_STORAGE_CAPABILITY_CERTIFICATE_EXTENSION_PARSING = PROPERTYKEY { .fmtid = Guid.initIntString("2435088742, 47154, 19156, 186, 164, 124, 160, 182, 178, 121, 140"), .pid = 4005 };
pub const PKEY_Address_Country = PROPERTYKEY { .fmtid = Guid.initIntString("3229303193, 57823, 17555, 177, 225, 222, 89, 70, 251, 88, 248"), .pid = 100 };
pub const PKEY_Address_CountryCode = PROPERTYKEY { .fmtid = Guid.initIntString("3229303193, 57823, 17555, 177, 225, 222, 89, 70, 251, 88, 248"), .pid = 101 };
pub const PKEY_Address_Region = PROPERTYKEY { .fmtid = Guid.initIntString("3229303193, 57823, 17555, 177, 225, 222, 89, 70, 251, 88, 248"), .pid = 102 };
pub const PKEY_Address_RegionCode = PROPERTYKEY { .fmtid = Guid.initIntString("3229303193, 57823, 17555, 177, 225, 222, 89, 70, 251, 88, 248"), .pid = 103 };
pub const PKEY_Address_Town = PROPERTYKEY { .fmtid = Guid.initIntString("3229303193, 57823, 17555, 177, 225, 222, 89, 70, 251, 88, 248"), .pid = 104 };
pub const PKEY_Audio_ChannelCount = PROPERTYKEY { .fmtid = Guid.initIntString("1682179216, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 7 };
pub const AUDIO_CHANNELCOUNT_MONO = @as(u32, 1);
pub const AUDIO_CHANNELCOUNT_STEREO = @as(u32, 2);
pub const PKEY_Audio_Compression = PROPERTYKEY { .fmtid = Guid.initIntString("1682179216, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 10 };
pub const PKEY_Audio_EncodingBitrate = PROPERTYKEY { .fmtid = Guid.initIntString("1682179216, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 4 };
pub const PKEY_Audio_Format = PROPERTYKEY { .fmtid = Guid.initIntString("1682179216, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 2 };
pub const PKEY_Audio_IsVariableBitRate = PROPERTYKEY { .fmtid = Guid.initIntString("3867291630, 35863, 19810, 130, 60, 142, 156, 252, 189, 29, 92"), .pid = 100 };
pub const PKEY_Audio_PeakValue = PROPERTYKEY { .fmtid = Guid.initIntString("628745680, 4374, 16516, 189, 154, 155, 79, 124, 180, 223, 94"), .pid = 100 };
pub const PKEY_Audio_SampleRate = PROPERTYKEY { .fmtid = Guid.initIntString("1682179216, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 5 };
pub const PKEY_Audio_SampleSize = PROPERTYKEY { .fmtid = Guid.initIntString("1682179216, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 6 };
pub const PKEY_Audio_StreamName = PROPERTYKEY { .fmtid = Guid.initIntString("1682179216, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 9 };
pub const PKEY_Audio_StreamNumber = PROPERTYKEY { .fmtid = Guid.initIntString("1682179216, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 8 };
pub const PKEY_Calendar_Duration = PROPERTYKEY { .fmtid = Guid.initIntString("691839834, 2474, 19922, 177, 128, 31, 226, 69, 114, 138, 82"), .pid = 100 };
pub const PKEY_Calendar_IsOnline = PROPERTYKEY { .fmtid = Guid.initIntString("3220083017, 58338, 18855, 168, 98, 192, 89, 136, 20, 92, 236"), .pid = 100 };
pub const PKEY_Calendar_IsRecurring = PROPERTYKEY { .fmtid = Guid.initIntString("828087437, 32937, 20217, 174, 22, 142, 116, 109, 165, 29, 112"), .pid = 100 };
pub const PKEY_Calendar_Location = PROPERTYKEY { .fmtid = Guid.initIntString("4129762584, 52940, 16561, 178, 106, 57, 17, 113, 122, 167, 189"), .pid = 100 };
pub const PKEY_Calendar_OptionalAttendeeAddresses = PROPERTYKEY { .fmtid = Guid.initIntString("3579555418, 14482, 16762, 166, 73, 198, 172, 90, 170, 234, 179"), .pid = 100 };
pub const PKEY_Calendar_OptionalAttendeeNames = PROPERTYKEY { .fmtid = Guid.initIntString("155358727, 22573, 17279, 132, 195, 222, 147, 162, 178, 76, 60"), .pid = 100 };
pub const PKEY_Calendar_OrganizerAddress = PROPERTYKEY { .fmtid = Guid.initIntString("1951171138, 19957, 17772, 171, 158, 1, 78, 251, 144, 33, 227"), .pid = 100 };
pub const PKEY_Calendar_OrganizerName = PROPERTYKEY { .fmtid = Guid.initIntString("2863030521, 39013, 17806, 180, 132, 1, 188, 127, 227, 151, 62"), .pid = 100 };
pub const PKEY_Calendar_ReminderTime = PROPERTYKEY { .fmtid = Guid.initIntString("1929141156, 9465, 16401, 159, 63, 173, 210, 122, 250, 216, 24"), .pid = 100 };
pub const PKEY_Calendar_RequiredAttendeeAddresses = PROPERTYKEY { .fmtid = Guid.initIntString("195548867, 22157, 16729, 171, 145, 120, 26, 145, 251, 113, 229"), .pid = 100 };
pub const PKEY_Calendar_RequiredAttendeeNames = PROPERTYKEY { .fmtid = Guid.initIntString("3006984971, 62802, 17796, 147, 108, 203, 147, 229, 205, 162, 159"), .pid = 100 };
pub const PKEY_Calendar_Resources = PROPERTYKEY { .fmtid = Guid.initIntString("16091704, 50507, 19520, 134, 150, 151, 35, 89, 128, 234, 225"), .pid = 100 };
pub const PKEY_Calendar_ResponseStatus = PROPERTYKEY { .fmtid = Guid.initIntString("411836305, 15424, 16690, 158, 197, 216, 176, 59, 114, 168, 162"), .pid = 100 };
pub const PKEY_Calendar_ShowTimeAs = PROPERTYKEY { .fmtid = Guid.initIntString("1542690516, 24242, 18031, 189, 233, 47, 179, 242, 54, 29, 110"), .pid = 100 };
pub const PKEY_Calendar_ShowTimeAsText = PROPERTYKEY { .fmtid = Guid.initIntString("1406818255, 25280, 17860, 129, 222, 118, 16, 188, 239, 215, 245"), .pid = 100 };
pub const PKEY_Communication_AccountName = PROPERTYKEY { .fmtid = Guid.initIntString("3823130700, 46984, 19034, 187, 32, 127, 90, 68, 201, 172, 221"), .pid = 9 };
pub const PKEY_Communication_DateItemExpires = PROPERTYKEY { .fmtid = Guid.initIntString("1115701420, 41335, 19594, 151, 96, 246, 247, 97, 34, 127, 154"), .pid = 100 };
pub const PKEY_Communication_Direction = PROPERTYKEY { .fmtid = Guid.initIntString("2387808304, 47456, 17222, 174, 13, 102, 188, 154, 134, 251, 148"), .pid = 100 };
pub const PKEY_Communication_FollowupIconIndex = PROPERTYKEY { .fmtid = Guid.initIntString("2208707710, 28644, 20288, 186, 156, 196, 134, 82, 64, 209, 244"), .pid = 100 };
pub const PKEY_Communication_HeaderItem = PROPERTYKEY { .fmtid = Guid.initIntString("3385020292, 8769, 17409, 182, 7, 189, 32, 237, 117, 174, 127"), .pid = 100 };
pub const PKEY_Communication_PolicyTag = PROPERTYKEY { .fmtid = Guid.initIntString("3960160657, 43787, 19558, 144, 182, 198, 99, 124, 222, 187, 171"), .pid = 100 };
pub const PKEY_Communication_SecurityFlags = PROPERTYKEY { .fmtid = Guid.initIntString("2249827510, 40781, 17449, 140, 15, 185, 150, 202, 89, 227, 53"), .pid = 100 };
pub const PKEY_Communication_Suffix = PROPERTYKEY { .fmtid = Guid.initIntString("2155570490, 40593, 17391, 143, 151, 17, 206, 4, 238, 32, 197"), .pid = 100 };
pub const PKEY_Communication_TaskStatus = PROPERTYKEY { .fmtid = Guid.initIntString("3189404358, 39453, 18103, 175, 231, 175, 175, 140, 239, 73, 153"), .pid = 100 };
pub const PKEY_Communication_TaskStatusText = PROPERTYKEY { .fmtid = Guid.initIntString("2792637559, 49719, 18267, 160, 117, 84, 243, 68, 152, 41, 42"), .pid = 100 };
pub const PKEY_Computer_DecoratedFreeSpace = PROPERTYKEY { .fmtid = Guid.initIntString("2601995061, 16639, 4562, 162, 126, 0, 192, 79, 195, 8, 113"), .pid = 7 };
pub const PKEY_Contact_AccountPictureDynamicVideo = PROPERTYKEY { .fmtid = Guid.initIntString("193703960, 10021, 19268, 146, 186, 121, 51, 174, 178, 221, 231"), .pid = 2 };
pub const PKEY_Contact_AccountPictureLarge = PROPERTYKEY { .fmtid = Guid.initIntString("193703960, 10021, 19268, 146, 186, 121, 51, 174, 178, 221, 231"), .pid = 3 };
pub const PKEY_Contact_AccountPictureSmall = PROPERTYKEY { .fmtid = Guid.initIntString("193703960, 10021, 19268, 146, 186, 121, 51, 174, 178, 221, 231"), .pid = 4 };
pub const PKEY_Contact_Anniversary = PROPERTYKEY { .fmtid = Guid.initIntString("2597698267, 52903, 17520, 160, 61, 184, 78, 81, 185, 148, 158"), .pid = 100 };
pub const PKEY_Contact_AssistantName = PROPERTYKEY { .fmtid = Guid.initIntString("3440389276, 21824, 19080, 166, 246, 100, 228, 152, 28, 140, 209"), .pid = 100 };
pub const PKEY_Contact_AssistantTelephone = PROPERTYKEY { .fmtid = Guid.initIntString("2593334349, 42925, 20472, 155, 153, 69, 238, 76, 192, 154, 246"), .pid = 100 };
pub const PKEY_Contact_Birthday = PROPERTYKEY { .fmtid = Guid.initIntString("393070140, 9864, 20105, 129, 67, 163, 71, 128, 15, 37, 233"), .pid = 47 };
pub const PKEY_Contact_BusinessAddress = PROPERTYKEY { .fmtid = Guid.initIntString("1930409693, 53116, 17003, 160, 63, 189, 22, 108, 201, 238, 36"), .pid = 100 };
pub const PKEY_Contact_BusinessAddress1Country = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 119 };
pub const PKEY_Contact_BusinessAddress1Locality = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 117 };
pub const PKEY_Contact_BusinessAddress1PostalCode = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 120 };
pub const PKEY_Contact_BusinessAddress1Region = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 118 };
pub const PKEY_Contact_BusinessAddress1Street = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 116 };
pub const PKEY_Contact_BusinessAddress2Country = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 124 };
pub const PKEY_Contact_BusinessAddress2Locality = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 122 };
pub const PKEY_Contact_BusinessAddress2PostalCode = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 125 };
pub const PKEY_Contact_BusinessAddress2Region = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 123 };
pub const PKEY_Contact_BusinessAddress2Street = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 121 };
pub const PKEY_Contact_BusinessAddress3Country = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 129 };
pub const PKEY_Contact_BusinessAddress3Locality = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 127 };
pub const PKEY_Contact_BusinessAddress3PostalCode = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 130 };
pub const PKEY_Contact_BusinessAddress3Region = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 128 };
pub const PKEY_Contact_BusinessAddress3Street = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 126 };
pub const PKEY_Contact_BusinessAddressCity = PROPERTYKEY { .fmtid = Guid.initIntString("1076582708, 60506, 18627, 147, 230, 133, 232, 106, 45, 147, 78"), .pid = 100 };
pub const PKEY_Contact_BusinessAddressCountry = PROPERTYKEY { .fmtid = Guid.initIntString("2964878100, 64758, 20459, 141, 255, 165, 13, 166, 175, 86, 28"), .pid = 100 };
pub const PKEY_Contact_BusinessAddressPostalCode = PROPERTYKEY { .fmtid = Guid.initIntString("3788808350, 55128, 19665, 182, 236, 52, 168, 181, 167, 63, 128"), .pid = 100 };
pub const PKEY_Contact_BusinessAddressPostOfficeBox = PROPERTYKEY { .fmtid = Guid.initIntString("3159257550, 6137, 18645, 190, 233, 2, 29, 240, 234, 84, 9"), .pid = 100 };
pub const PKEY_Contact_BusinessAddressState = PROPERTYKEY { .fmtid = Guid.initIntString("1148156031, 4292, 16843, 166, 196, 77, 3, 67, 85, 21, 151"), .pid = 100 };
pub const PKEY_Contact_BusinessAddressStreet = PROPERTYKEY { .fmtid = Guid.initIntString("3721479695, 49343, 17747, 140, 228, 16, 67, 60, 144, 143, 176"), .pid = 100 };
pub const PKEY_Contact_BusinessEmailAddresses = PROPERTYKEY { .fmtid = Guid.initIntString("4067542617, 32350, 18207, 186, 37, 127, 119, 178, 134, 248, 54"), .pid = 100 };
pub const PKEY_Contact_BusinessFaxNumber = PROPERTYKEY { .fmtid = Guid.initIntString("2448422643, 11815, 17098, 147, 62, 124, 153, 159, 190, 49, 11"), .pid = 100 };
pub const PKEY_Contact_BusinessHomePage = PROPERTYKEY { .fmtid = Guid.initIntString("1446054176, 9361, 18713, 153, 206, 234, 219, 6, 250, 253, 178"), .pid = 100 };
pub const PKEY_Contact_BusinessTelephone = PROPERTYKEY { .fmtid = Guid.initIntString("1779819936, 2590, 19671, 187, 140, 210, 241, 176, 201, 41, 188"), .pid = 100 };
pub const PKEY_Contact_CallbackTelephone = PROPERTYKEY { .fmtid = Guid.initIntString("3209941443, 18912, 20351, 133, 103, 90, 130, 29, 138, 197, 66"), .pid = 100 };
pub const PKEY_Contact_CarTelephone = PROPERTYKEY { .fmtid = Guid.initIntString("2413587946, 47401, 16683, 186, 144, 57, 122, 37, 116, 101, 254"), .pid = 100 };
pub const PKEY_Contact_Children = PROPERTYKEY { .fmtid = Guid.initIntString("3564279556, 36593, 17391, 144, 36, 43, 211, 129, 24, 127, 213"), .pid = 100 };
pub const PKEY_Contact_CompanyMainTelephone = PROPERTYKEY { .fmtid = Guid.initIntString("2240406657, 24640, 18237, 177, 113, 127, 168, 156, 39, 8, 237"), .pid = 100 };
pub const PKEY_Contact_ConnectedServiceDisplayName = PROPERTYKEY { .fmtid = Guid.initIntString("968326991, 41220, 18531, 179, 149, 45, 178, 173, 143, 123, 193"), .pid = 100 };
pub const PKEY_Contact_ConnectedServiceIdentities = PROPERTYKEY { .fmtid = Guid.initIntString("2163482296, 44996, 16904, 170, 95, 204, 226, 26, 98, 114, 129"), .pid = 100 };
pub const PKEY_Contact_ConnectedServiceName = PROPERTYKEY { .fmtid = Guid.initIntString("3049802910, 22823, 18101, 163, 204, 147, 60, 33, 183, 132, 105"), .pid = 100 };
pub const PKEY_Contact_ConnectedServiceSupportedActions = PROPERTYKEY { .fmtid = Guid.initIntString("2711599017, 587, 17265, 168, 191, 77, 41, 195, 228, 233, 201"), .pid = 100 };
pub const PKEY_Contact_DataSuppliers = PROPERTYKEY { .fmtid = Guid.initIntString("2522923651, 64570, 18952, 160, 150, 238, 211, 170, 196, 109, 162"), .pid = 100 };
pub const PKEY_Contact_Department = PROPERTYKEY { .fmtid = Guid.initIntString("4238308102, 65423, 19785, 159, 182, 63, 254, 92, 9, 81, 236"), .pid = 100 };
pub const PKEY_Contact_DisplayBusinessPhoneNumbers = PROPERTYKEY { .fmtid = Guid.initIntString("910174426, 55445, 16894, 165, 132, 48, 43, 27, 183, 10, 118"), .pid = 100 };
pub const PKEY_Contact_DisplayHomePhoneNumbers = PROPERTYKEY { .fmtid = Guid.initIntString("1349041375, 54935, 19845, 140, 83, 31, 28, 218, 176, 23, 99"), .pid = 100 };
pub const PKEY_Contact_DisplayMobilePhoneNumbers = PROPERTYKEY { .fmtid = Guid.initIntString("2628830040, 40314, 18097, 180, 102, 220, 198, 241, 163, 217, 61"), .pid = 100 };
pub const PKEY_Contact_DisplayOtherPhoneNumbers = PROPERTYKEY { .fmtid = Guid.initIntString("50894963, 36584, 16785, 189, 96, 211, 31, 114, 183, 144, 11"), .pid = 100 };
pub const PKEY_Contact_EmailAddress = PROPERTYKEY { .fmtid = Guid.initIntString("4177166243, 53547, 18309, 138, 78, 105, 26, 148, 247, 163, 231"), .pid = 100 };
pub const PKEY_Contact_EmailAddress2 = PROPERTYKEY { .fmtid = Guid.initIntString("949375075, 60872, 17000, 132, 145, 183, 114, 49, 114, 207, 41"), .pid = 100 };
pub const PKEY_Contact_EmailAddress3 = PROPERTYKEY { .fmtid = Guid.initIntString("1682782132, 57779, 19373, 176, 153, 126, 124, 4, 150, 106, 202"), .pid = 100 };
pub const PKEY_Contact_EmailAddresses = PROPERTYKEY { .fmtid = Guid.initIntString("2228810551, 38941, 17587, 150, 21, 199, 89, 109, 186, 23, 227"), .pid = 100 };
pub const PKEY_Contact_EmailName = PROPERTYKEY { .fmtid = Guid.initIntString("3429846820, 24707, 19412, 135, 84, 103, 77, 13, 232, 122, 184"), .pid = 100 };
pub const PKEY_Contact_FileAsName = PROPERTYKEY { .fmtid = Guid.initIntString("4053944999, 40103, 16630, 137, 236, 151, 222, 249, 255, 232, 219"), .pid = 100 };
pub const PKEY_Contact_FirstName = PROPERTYKEY { .fmtid = Guid.initIntString("345471044, 27465, 19117, 167, 20, 164, 81, 59, 246, 4, 96"), .pid = 100 };
pub const PKEY_Contact_FullName = PROPERTYKEY { .fmtid = Guid.initIntString("1667141713, 20645, 19362, 185, 219, 78, 208, 86, 199, 114, 150"), .pid = 100 };
pub const PKEY_Contact_Gender = PROPERTYKEY { .fmtid = Guid.initIntString("1015869016, 54512, 19705, 183, 86, 78, 93, 36, 68, 123, 205"), .pid = 100 };
pub const PKEY_Contact_GenderValue = PROPERTYKEY { .fmtid = Guid.initIntString("1015869016, 54512, 19705, 183, 86, 78, 93, 36, 68, 123, 205"), .pid = 101 };
pub const PKEY_Contact_Hobbies = PROPERTYKEY { .fmtid = Guid.initIntString("1573004607, 24081, 19167, 156, 254, 145, 13, 208, 30, 62, 112"), .pid = 100 };
pub const PKEY_Contact_HomeAddress = PROPERTYKEY { .fmtid = Guid.initIntString("2566488916, 24954, 18104, 133, 96, 91, 27, 100, 191, 31, 137"), .pid = 100 };
pub const PKEY_Contact_HomeAddress1Country = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 104 };
pub const PKEY_Contact_HomeAddress1Locality = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 102 };
pub const PKEY_Contact_HomeAddress1PostalCode = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 105 };
pub const PKEY_Contact_HomeAddress1Region = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 103 };
pub const PKEY_Contact_HomeAddress1Street = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 101 };
pub const PKEY_Contact_HomeAddress2Country = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 109 };
pub const PKEY_Contact_HomeAddress2Locality = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 107 };
pub const PKEY_Contact_HomeAddress2PostalCode = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 110 };
pub const PKEY_Contact_HomeAddress2Region = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 108 };
pub const PKEY_Contact_HomeAddress2Street = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 106 };
pub const PKEY_Contact_HomeAddress3Country = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 114 };
pub const PKEY_Contact_HomeAddress3Locality = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 112 };
pub const PKEY_Contact_HomeAddress3PostalCode = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 115 };
pub const PKEY_Contact_HomeAddress3Region = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 113 };
pub const PKEY_Contact_HomeAddress3Street = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 111 };
pub const PKEY_Contact_HomeAddressCity = PROPERTYKEY { .fmtid = Guid.initIntString("393070140, 9864, 20105, 129, 67, 163, 71, 128, 15, 37, 233"), .pid = 65 };
pub const PKEY_Contact_HomeAddressCountry = PROPERTYKEY { .fmtid = Guid.initIntString("145119905, 62665, 17373, 157, 223, 163, 61, 142, 126, 173, 133"), .pid = 100 };
pub const PKEY_Contact_HomeAddressPostalCode = PROPERTYKEY { .fmtid = Guid.initIntString("2331820400, 35398, 19283, 158, 238, 144, 186, 231, 21, 30, 98"), .pid = 100 };
pub const PKEY_Contact_HomeAddressPostOfficeBox = PROPERTYKEY { .fmtid = Guid.initIntString("2074043289, 2623, 19218, 137, 189, 74, 220, 81, 201, 24, 175"), .pid = 100 };
pub const PKEY_Contact_HomeAddressState = PROPERTYKEY { .fmtid = Guid.initIntString("3365544912, 32109, 20152, 135, 212, 119, 106, 130, 212, 147, 229"), .pid = 100 };
pub const PKEY_Contact_HomeAddressStreet = PROPERTYKEY { .fmtid = Guid.initIntString("182382944, 56127, 17160, 154, 33, 6, 35, 123, 22, 250, 42"), .pid = 100 };
pub const PKEY_Contact_HomeEmailAddresses = PROPERTYKEY { .fmtid = Guid.initIntString("1456017053, 40262, 18787, 136, 111, 46, 28, 217, 166, 148, 239"), .pid = 100 };
pub const PKEY_Contact_HomeFaxNumber = PROPERTYKEY { .fmtid = Guid.initIntString("1712194774, 33195, 18807, 160, 159, 130, 49, 49, 19, 171, 38"), .pid = 100 };
pub const PKEY_Contact_HomeTelephone = PROPERTYKEY { .fmtid = Guid.initIntString("393070140, 9864, 20105, 129, 67, 163, 71, 128, 15, 37, 233"), .pid = 20 };
pub const PKEY_Contact_IMAddress = PROPERTYKEY { .fmtid = Guid.initIntString("3599613322, 13172, 19329, 153, 114, 62, 195, 6, 130, 219, 61"), .pid = 100 };
pub const PKEY_Contact_Initials = PROPERTYKEY { .fmtid = Guid.initIntString("4091081741, 20683, 17570, 151, 24, 64, 203, 145, 25, 73, 93"), .pid = 100 };
pub const PKEY_Contact_JA_CompanyNamePhonetic = PROPERTYKEY { .fmtid = Guid.initIntString("2306553492, 65182, 17382, 128, 102, 38, 15, 89, 12, 1, 0"), .pid = 2 };
pub const PKEY_Contact_JA_FirstNamePhonetic = PROPERTYKEY { .fmtid = Guid.initIntString("2306553492, 65182, 17382, 128, 102, 38, 15, 89, 12, 1, 0"), .pid = 3 };
pub const PKEY_Contact_JA_LastNamePhonetic = PROPERTYKEY { .fmtid = Guid.initIntString("2306553492, 65182, 17382, 128, 102, 38, 15, 89, 12, 1, 0"), .pid = 4 };
pub const PKEY_Contact_JobInfo1CompanyAddress = PROPERTYKEY { .fmtid = Guid.initIntString("16137688, 8893, 19037, 186, 52, 92, 176, 185, 189, 203, 3"), .pid = 120 };
pub const PKEY_Contact_JobInfo1CompanyName = PROPERTYKEY { .fmtid = Guid.initIntString("16137688, 8893, 19037, 186, 52, 92, 176, 185, 189, 203, 3"), .pid = 102 };
pub const PKEY_Contact_JobInfo1Department = PROPERTYKEY { .fmtid = Guid.initIntString("16137688, 8893, 19037, 186, 52, 92, 176, 185, 189, 203, 3"), .pid = 106 };
pub const PKEY_Contact_JobInfo1Manager = PROPERTYKEY { .fmtid = Guid.initIntString("16137688, 8893, 19037, 186, 52, 92, 176, 185, 189, 203, 3"), .pid = 105 };
pub const PKEY_Contact_JobInfo1OfficeLocation = PROPERTYKEY { .fmtid = Guid.initIntString("16137688, 8893, 19037, 186, 52, 92, 176, 185, 189, 203, 3"), .pid = 104 };
pub const PKEY_Contact_JobInfo1Title = PROPERTYKEY { .fmtid = Guid.initIntString("16137688, 8893, 19037, 186, 52, 92, 176, 185, 189, 203, 3"), .pid = 103 };
pub const PKEY_Contact_JobInfo1YomiCompanyName = PROPERTYKEY { .fmtid = Guid.initIntString("16137688, 8893, 19037, 186, 52, 92, 176, 185, 189, 203, 3"), .pid = 101 };
pub const PKEY_Contact_JobInfo2CompanyAddress = PROPERTYKEY { .fmtid = Guid.initIntString("16137688, 8893, 19037, 186, 52, 92, 176, 185, 189, 203, 3"), .pid = 121 };
pub const PKEY_Contact_JobInfo2CompanyName = PROPERTYKEY { .fmtid = Guid.initIntString("16137688, 8893, 19037, 186, 52, 92, 176, 185, 189, 203, 3"), .pid = 108 };
pub const PKEY_Contact_JobInfo2Department = PROPERTYKEY { .fmtid = Guid.initIntString("16137688, 8893, 19037, 186, 52, 92, 176, 185, 189, 203, 3"), .pid = 113 };
pub const PKEY_Contact_JobInfo2Manager = PROPERTYKEY { .fmtid = Guid.initIntString("16137688, 8893, 19037, 186, 52, 92, 176, 185, 189, 203, 3"), .pid = 112 };
pub const PKEY_Contact_JobInfo2OfficeLocation = PROPERTYKEY { .fmtid = Guid.initIntString("16137688, 8893, 19037, 186, 52, 92, 176, 185, 189, 203, 3"), .pid = 110 };
pub const PKEY_Contact_JobInfo2Title = PROPERTYKEY { .fmtid = Guid.initIntString("16137688, 8893, 19037, 186, 52, 92, 176, 185, 189, 203, 3"), .pid = 109 };
pub const PKEY_Contact_JobInfo2YomiCompanyName = PROPERTYKEY { .fmtid = Guid.initIntString("16137688, 8893, 19037, 186, 52, 92, 176, 185, 189, 203, 3"), .pid = 107 };
pub const PKEY_Contact_JobInfo3CompanyAddress = PROPERTYKEY { .fmtid = Guid.initIntString("16137688, 8893, 19037, 186, 52, 92, 176, 185, 189, 203, 3"), .pid = 123 };
pub const PKEY_Contact_JobInfo3CompanyName = PROPERTYKEY { .fmtid = Guid.initIntString("16137688, 8893, 19037, 186, 52, 92, 176, 185, 189, 203, 3"), .pid = 115 };
pub const PKEY_Contact_JobInfo3Department = PROPERTYKEY { .fmtid = Guid.initIntString("16137688, 8893, 19037, 186, 52, 92, 176, 185, 189, 203, 3"), .pid = 119 };
pub const PKEY_Contact_JobInfo3Manager = PROPERTYKEY { .fmtid = Guid.initIntString("16137688, 8893, 19037, 186, 52, 92, 176, 185, 189, 203, 3"), .pid = 118 };
pub const PKEY_Contact_JobInfo3OfficeLocation = PROPERTYKEY { .fmtid = Guid.initIntString("16137688, 8893, 19037, 186, 52, 92, 176, 185, 189, 203, 3"), .pid = 117 };
pub const PKEY_Contact_JobInfo3Title = PROPERTYKEY { .fmtid = Guid.initIntString("16137688, 8893, 19037, 186, 52, 92, 176, 185, 189, 203, 3"), .pid = 116 };
pub const PKEY_Contact_JobInfo3YomiCompanyName = PROPERTYKEY { .fmtid = Guid.initIntString("16137688, 8893, 19037, 186, 52, 92, 176, 185, 189, 203, 3"), .pid = 114 };
pub const PKEY_Contact_JobTitle = PROPERTYKEY { .fmtid = Guid.initIntString("393070140, 9864, 20105, 129, 67, 163, 71, 128, 15, 37, 233"), .pid = 6 };
pub const PKEY_Contact_Label = PROPERTYKEY { .fmtid = Guid.initIntString("2544938377, 57161, 18892, 131, 78, 102, 9, 116, 253, 117, 91"), .pid = 100 };
pub const PKEY_Contact_LastName = PROPERTYKEY { .fmtid = Guid.initIntString("2402710016, 49776, 17788, 177, 212, 224, 124, 91, 205, 144, 199"), .pid = 100 };
pub const PKEY_Contact_MailingAddress = PROPERTYKEY { .fmtid = Guid.initIntString("3232505962, 33406, 18000, 149, 174, 119, 226, 187, 116, 252, 201"), .pid = 100 };
pub const PKEY_Contact_MiddleName = PROPERTYKEY { .fmtid = Guid.initIntString("393070140, 9864, 20105, 129, 67, 163, 71, 128, 15, 37, 233"), .pid = 71 };
pub const PKEY_Contact_MobileTelephone = PROPERTYKEY { .fmtid = Guid.initIntString("393070140, 9864, 20105, 129, 67, 163, 71, 128, 15, 37, 233"), .pid = 35 };
pub const PKEY_Contact_NickName = PROPERTYKEY { .fmtid = Guid.initIntString("393070140, 9864, 20105, 129, 67, 163, 71, 128, 15, 37, 233"), .pid = 74 };
pub const PKEY_Contact_OfficeLocation = PROPERTYKEY { .fmtid = Guid.initIntString("393070140, 9864, 20105, 129, 67, 163, 71, 128, 15, 37, 233"), .pid = 7 };
pub const PKEY_Contact_OtherAddress = PROPERTYKEY { .fmtid = Guid.initIntString("1350656506, 12603, 17365, 131, 161, 193, 172, 207, 104, 98, 44"), .pid = 100 };
pub const PKEY_Contact_OtherAddress1Country = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 134 };
pub const PKEY_Contact_OtherAddress1Locality = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 132 };
pub const PKEY_Contact_OtherAddress1PostalCode = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 135 };
pub const PKEY_Contact_OtherAddress1Region = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 133 };
pub const PKEY_Contact_OtherAddress1Street = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 131 };
pub const PKEY_Contact_OtherAddress2Country = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 139 };
pub const PKEY_Contact_OtherAddress2Locality = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 137 };
pub const PKEY_Contact_OtherAddress2PostalCode = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 140 };
pub const PKEY_Contact_OtherAddress2Region = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 138 };
pub const PKEY_Contact_OtherAddress2Street = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 136 };
pub const PKEY_Contact_OtherAddress3Country = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 144 };
pub const PKEY_Contact_OtherAddress3Locality = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 142 };
pub const PKEY_Contact_OtherAddress3PostalCode = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 145 };
pub const PKEY_Contact_OtherAddress3Region = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 143 };
pub const PKEY_Contact_OtherAddress3Street = PROPERTYKEY { .fmtid = Guid.initIntString("2813785494, 54904, 19393, 176, 95, 2, 3, 210, 126, 138, 161"), .pid = 141 };
pub const PKEY_Contact_OtherAddressCity = PROPERTYKEY { .fmtid = Guid.initIntString("1852320035, 32635, 20236, 163, 55, 207, 202, 41, 102, 135, 191"), .pid = 100 };
pub const PKEY_Contact_OtherAddressCountry = PROPERTYKEY { .fmtid = Guid.initIntString("2400613736, 2734, 17186, 142, 217, 96, 85, 183, 176, 227, 152"), .pid = 100 };
pub const PKEY_Contact_OtherAddressPostalCode = PROPERTYKEY { .fmtid = Guid.initIntString("2512803521, 10943, 16712, 158, 211, 158, 198, 2, 227, 183, 205"), .pid = 100 };
pub const PKEY_Contact_OtherAddressPostOfficeBox = PROPERTYKEY { .fmtid = Guid.initIntString("2334583361, 1423, 17398, 174, 204, 64, 53, 104, 28, 233, 119"), .pid = 100 };
pub const PKEY_Contact_OtherAddressState = PROPERTYKEY { .fmtid = Guid.initIntString("1907587030, 58736, 16991, 161, 112, 128, 159, 174, 115, 229, 78"), .pid = 100 };
pub const PKEY_Contact_OtherAddressStreet = PROPERTYKEY { .fmtid = Guid.initIntString("4288030217, 47062, 18841, 134, 45, 149, 24, 13, 82, 154, 234"), .pid = 100 };
pub const PKEY_Contact_OtherEmailAddresses = PROPERTYKEY { .fmtid = Guid.initIntString("299250539, 14532, 20169, 132, 214, 235, 56, 208, 177, 80, 175"), .pid = 100 };
pub const PKEY_Contact_PagerTelephone = PROPERTYKEY { .fmtid = Guid.initIntString("3593489921, 63733, 20293, 139, 21, 208, 36, 166, 41, 103, 137"), .pid = 100 };
pub const PKEY_Contact_PersonalTitle = PROPERTYKEY { .fmtid = Guid.initIntString("393070140, 9864, 20105, 129, 67, 163, 71, 128, 15, 37, 233"), .pid = 69 };
pub const PKEY_Contact_PhoneNumbersCanonical = PROPERTYKEY { .fmtid = Guid.initIntString("3494040225, 37502, 16565, 165, 3, 110, 219, 212, 42, 81, 126"), .pid = 100 };
pub const PKEY_Contact_Prefix = PROPERTYKEY { .fmtid = Guid.initIntString("393070140, 9864, 20105, 129, 67, 163, 71, 128, 15, 37, 233"), .pid = 75 };
pub const PKEY_Contact_PrimaryAddressCity = PROPERTYKEY { .fmtid = Guid.initIntString("3370816752, 43491, 18793, 169, 75, 156, 98, 169, 83, 36, 224"), .pid = 100 };
pub const PKEY_Contact_PrimaryAddressCountry = PROPERTYKEY { .fmtid = Guid.initIntString("3846011293, 3903, 18030, 178, 255, 116, 99, 74, 60, 183, 164"), .pid = 100 };
pub const PKEY_Contact_PrimaryAddressPostalCode = PROPERTYKEY { .fmtid = Guid.initIntString("414962725, 60669, 18159, 182, 18, 123, 74, 96, 52, 237, 160"), .pid = 100 };
pub const PKEY_Contact_PrimaryAddressPostOfficeBox = PROPERTYKEY { .fmtid = Guid.initIntString("3730764743, 18145, 18510, 153, 153, 98, 197, 48, 131, 148, 193"), .pid = 100 };
pub const PKEY_Contact_PrimaryAddressState = PROPERTYKEY { .fmtid = Guid.initIntString("4044844542, 28984, 17984, 139, 76, 174, 55, 93, 199, 10, 109"), .pid = 100 };
pub const PKEY_Contact_PrimaryAddressStreet = PROPERTYKEY { .fmtid = Guid.initIntString("1673681696, 38590, 18575, 135, 136, 192, 156, 64, 122, 216, 18"), .pid = 100 };
pub const PKEY_Contact_PrimaryEmailAddress = PROPERTYKEY { .fmtid = Guid.initIntString("393070140, 9864, 20105, 129, 67, 163, 71, 128, 15, 37, 233"), .pid = 48 };
pub const PKEY_Contact_PrimaryTelephone = PROPERTYKEY { .fmtid = Guid.initIntString("393070140, 9864, 20105, 129, 67, 163, 71, 128, 15, 37, 233"), .pid = 25 };
pub const PKEY_Contact_Profession = PROPERTYKEY { .fmtid = Guid.initIntString("1919463253, 7396, 20334, 164, 31, 182, 228, 239, 16, 228, 169"), .pid = 100 };
pub const PKEY_Contact_SpouseName = PROPERTYKEY { .fmtid = Guid.initIntString("2636384438, 12647, 16939, 130, 176, 245, 131, 183, 167, 207, 227"), .pid = 100 };
pub const PKEY_Contact_Suffix = PROPERTYKEY { .fmtid = Guid.initIntString("393070140, 9864, 20105, 129, 67, 163, 71, 128, 15, 37, 233"), .pid = 73 };
pub const PKEY_Contact_TelexNumber = PROPERTYKEY { .fmtid = Guid.initIntString("3310635324, 49655, 16577, 167, 108, 239, 140, 6, 20, 0, 62"), .pid = 100 };
pub const PKEY_Contact_TTYTDDTelephone = PROPERTYKEY { .fmtid = Guid.initIntString("2867948460, 11093, 17894, 159, 109, 65, 94, 185, 73, 16, 223"), .pid = 100 };
pub const PKEY_Contact_WebPage = PROPERTYKEY { .fmtid = Guid.initIntString("3823130700, 46984, 19034, 187, 32, 127, 90, 68, 201, 172, 221"), .pid = 18 };
pub const PKEY_Contact_Webpage2 = PROPERTYKEY { .fmtid = Guid.initIntString("16137688, 8893, 19037, 186, 52, 92, 176, 185, 189, 203, 3"), .pid = 124 };
pub const PKEY_Contact_Webpage3 = PROPERTYKEY { .fmtid = Guid.initIntString("16137688, 8893, 19037, 186, 52, 92, 176, 185, 189, 203, 3"), .pid = 125 };
pub const PKEY_AcquisitionID = PROPERTYKEY { .fmtid = Guid.initIntString("1705609333, 15488, 16555, 171, 188, 239, 218, 247, 125, 190, 226"), .pid = 100 };
pub const PKEY_ApplicationDefinedProperties = PROPERTYKEY { .fmtid = Guid.initIntString("3451896167, 13182, 16856, 175, 124, 140, 9, 32, 84, 41, 199"), .pid = 100 };
pub const PKEY_ApplicationName = PROPERTYKEY { .fmtid = Guid.initIntString("4070540768, 20473, 4200, 171, 145, 8, 0, 43, 39, 179, 217"), .pid = 18 };
pub const PKEY_AppZoneIdentifier = PROPERTYKEY { .fmtid = Guid.initIntString("1345126059, 18411, 17820, 185, 96, 230, 216, 114, 143, 119, 1"), .pid = 102 };
pub const PKEY_Author = PROPERTYKEY { .fmtid = Guid.initIntString("4070540768, 20473, 4200, 171, 145, 8, 0, 43, 39, 179, 217"), .pid = 4 };
pub const PKEY_CachedFileUpdaterContentIdForConflictResolution = PROPERTYKEY { .fmtid = Guid.initIntString("4243583315, 59449, 19699, 169, 231, 234, 34, 131, 32, 148, 184"), .pid = 114 };
pub const PKEY_CachedFileUpdaterContentIdForStream = PROPERTYKEY { .fmtid = Guid.initIntString("4243583315, 59449, 19699, 169, 231, 234, 34, 131, 32, 148, 184"), .pid = 113 };
pub const PKEY_Capacity = PROPERTYKEY { .fmtid = Guid.initIntString("2601995061, 16639, 4562, 162, 126, 0, 192, 79, 195, 8, 113"), .pid = 3 };
pub const PKEY_Category = PROPERTYKEY { .fmtid = Guid.initIntString("3587036418, 11932, 4123, 147, 151, 8, 0, 43, 44, 249, 174"), .pid = 2 };
pub const PKEY_Comment = PROPERTYKEY { .fmtid = Guid.initIntString("4070540768, 20473, 4200, 171, 145, 8, 0, 43, 39, 179, 217"), .pid = 6 };
pub const PKEY_Company = PROPERTYKEY { .fmtid = Guid.initIntString("3587036418, 11932, 4123, 147, 151, 8, 0, 43, 44, 249, 174"), .pid = 15 };
pub const PKEY_ComputerName = PROPERTYKEY { .fmtid = Guid.initIntString("677604006, 38205, 4562, 181, 214, 0, 192, 79, 217, 24, 208"), .pid = 5 };
pub const PKEY_ContainedItems = PROPERTYKEY { .fmtid = Guid.initIntString("677604006, 38205, 4562, 181, 214, 0, 192, 79, 217, 24, 208"), .pid = 29 };
pub const PKEY_ContentId = PROPERTYKEY { .fmtid = Guid.initIntString("4243583315, 59449, 19699, 169, 231, 234, 34, 131, 32, 148, 184"), .pid = 132 };
pub const PKEY_ContentStatus = PROPERTYKEY { .fmtid = Guid.initIntString("3587036418, 11932, 4123, 147, 151, 8, 0, 43, 44, 249, 174"), .pid = 27 };
pub const PKEY_ContentType = PROPERTYKEY { .fmtid = Guid.initIntString("3587036418, 11932, 4123, 147, 151, 8, 0, 43, 44, 249, 174"), .pid = 26 };
pub const PKEY_ContentUri = PROPERTYKEY { .fmtid = Guid.initIntString("4243583315, 59449, 19699, 169, 231, 234, 34, 131, 32, 148, 184"), .pid = 131 };
pub const PKEY_Copyright = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 11 };
pub const PKEY_CreatorAppId = PROPERTYKEY { .fmtid = Guid.initIntString("3270116462, 828, 20113, 189, 91, 212, 148, 47, 107, 190, 73"), .pid = 2 };
pub const PKEY_CreatorOpenWithUIOptions = PROPERTYKEY { .fmtid = Guid.initIntString("3270116462, 828, 20113, 189, 91, 212, 148, 47, 107, 190, 73"), .pid = 3 };
pub const CREATOROPENWITHUIOPTION_HIDDEN = @as(u32, 0);
pub const CREATOROPENWITHUIOPTION_VISIBLE = @as(u32, 1);
pub const PKEY_DataObjectFormat = PROPERTYKEY { .fmtid = Guid.initIntString("511812600, 41743, 16967, 185, 238, 29, 3, 104, 169, 66, 92"), .pid = 2 };
pub const PKEY_DateAccessed = PROPERTYKEY { .fmtid = Guid.initIntString("3072717104, 18415, 4122, 165, 241, 2, 96, 140, 158, 235, 172"), .pid = 16 };
pub const PKEY_DateAcquired = PROPERTYKEY { .fmtid = Guid.initIntString("750430453, 55327, 18378, 177, 122, 248, 216, 34, 48, 1, 49"), .pid = 100 };
pub const PKEY_DateArchived = PROPERTYKEY { .fmtid = Guid.initIntString("1140381623, 42052, 20359, 147, 131, 82, 39, 28, 155, 145, 92"), .pid = 100 };
pub const PKEY_DateCompleted = PROPERTYKEY { .fmtid = Guid.initIntString("1929033601, 44250, 17381, 177, 85, 178, 67, 79, 133, 230, 120"), .pid = 100 };
pub const PKEY_DateCreated = PROPERTYKEY { .fmtid = Guid.initIntString("3072717104, 18415, 4122, 165, 241, 2, 96, 140, 158, 235, 172"), .pid = 15 };
pub const PKEY_DateImported = PROPERTYKEY { .fmtid = Guid.initIntString("347610529, 309, 19761, 150, 217, 108, 191, 201, 103, 26, 153"), .pid = 18258 };
pub const PKEY_DateModified = PROPERTYKEY { .fmtid = Guid.initIntString("3072717104, 18415, 4122, 165, 241, 2, 96, 140, 158, 235, 172"), .pid = 14 };
pub const PKEY_DefaultSaveLocationDisplay = PROPERTYKEY { .fmtid = Guid.initIntString("1568061055, 39741, 17595, 182, 174, 37, 218, 79, 99, 138, 103"), .pid = 10 };
pub const ISDEFAULTSAVE_NONE = @as(u32, 0);
pub const ISDEFAULTSAVE_OWNER = @as(u32, 1);
pub const ISDEFAULTSAVE_NONOWNER = @as(u32, 2);
pub const ISDEFAULTSAVE_BOTH = @as(u32, 3);
pub const PKEY_DueDate = PROPERTYKEY { .fmtid = Guid.initIntString("1065644725, 57519, 19890, 128, 113, 197, 63, 231, 106, 231, 206"), .pid = 100 };
pub const PKEY_EndDate = PROPERTYKEY { .fmtid = Guid.initIntString("3344935429, 38653, 18919, 156, 180, 159, 96, 16, 130, 213, 83"), .pid = 100 };
pub const PKEY_ExpandoProperties = PROPERTYKEY { .fmtid = Guid.initIntString("1872891366, 53532, 19869, 161, 84, 100, 49, 118, 40, 193, 45"), .pid = 100 };
pub const PKEY_FileAllocationSize = PROPERTYKEY { .fmtid = Guid.initIntString("3072717104, 18415, 4122, 165, 241, 2, 96, 140, 158, 235, 172"), .pid = 18 };
pub const PKEY_FileAttributes = PROPERTYKEY { .fmtid = Guid.initIntString("3072717104, 18415, 4122, 165, 241, 2, 96, 140, 158, 235, 172"), .pid = 13 };
pub const PKEY_FileCount = PROPERTYKEY { .fmtid = Guid.initIntString("677604006, 38205, 4562, 181, 214, 0, 192, 79, 217, 24, 208"), .pid = 12 };
pub const PKEY_FileDescription = PROPERTYKEY { .fmtid = Guid.initIntString("217021779, 64100, 4561, 162, 3, 0, 0, 248, 31, 237, 238"), .pid = 3 };
pub const PKEY_FileExtension = PROPERTYKEY { .fmtid = Guid.initIntString("3841002044, 18918, 16477, 130, 136, 162, 59, 212, 238, 170, 108"), .pid = 100 };
pub const PKEY_FileFRN = PROPERTYKEY { .fmtid = Guid.initIntString("3072717104, 18415, 4122, 165, 241, 2, 96, 140, 158, 235, 172"), .pid = 21 };
pub const PKEY_FileName = PROPERTYKEY { .fmtid = Guid.initIntString("1104108256, 63322, 18438, 189, 135, 89, 199, 217, 36, 142, 185"), .pid = 100 };
pub const PKEY_FileOfflineAvailabilityStatus = PROPERTYKEY { .fmtid = Guid.initIntString("4243583315, 59449, 19699, 169, 231, 234, 34, 131, 32, 148, 184"), .pid = 100 };
pub const FILEOFFLINEAVAILABILITYSTATUS_NOTAVAILABLEOFFLINE = @as(u32, 0);
pub const FILEOFFLINEAVAILABILITYSTATUS_PARTIAL = @as(u32, 1);
pub const FILEOFFLINEAVAILABILITYSTATUS_COMPLETE = @as(u32, 2);
pub const FILEOFFLINEAVAILABILITYSTATUS_COMPLETE_PINNED = @as(u32, 3);
pub const FILEOFFLINEAVAILABILITYSTATUS_EXCLUDED = @as(u32, 4);
pub const FILEOFFLINEAVAILABILITYSTATUS_FOLDER_EMPTY = @as(u32, 5);
pub const PKEY_FileOwner = PROPERTYKEY { .fmtid = Guid.initIntString("2601995060, 16639, 4562, 162, 126, 0, 192, 79, 195, 8, 113"), .pid = 4 };
pub const PKEY_FilePlaceholderStatus = PROPERTYKEY { .fmtid = Guid.initIntString("3002710486, 65220, 19925, 148, 215, 137, 87, 72, 140, 128, 123"), .pid = 2 };
pub const PKEY_FileVersion = PROPERTYKEY { .fmtid = Guid.initIntString("217021779, 64100, 4561, 162, 3, 0, 0, 248, 31, 237, 238"), .pid = 4 };
pub const PKEY_FindData = PROPERTYKEY { .fmtid = Guid.initIntString("677604006, 38205, 4562, 181, 214, 0, 192, 79, 217, 24, 208"), .pid = 0 };
pub const PKEY_FlagColor = PROPERTYKEY { .fmtid = Guid.initIntString("1742705886, 3239, 19823, 183, 146, 5, 58, 62, 79, 3, 207"), .pid = 100 };
pub const PKEY_FlagColorText = PROPERTYKEY { .fmtid = Guid.initIntString("1173022535, 36394, 16558, 140, 191, 202, 82, 171, 166, 21, 42"), .pid = 100 };
pub const PKEY_FlagStatus = PROPERTYKEY { .fmtid = Guid.initIntString("3823130700, 46984, 19034, 187, 32, 127, 90, 68, 201, 172, 221"), .pid = 12 };
pub const FLAGSTATUS_NOTFLAGGED = @as(i32, 0);
pub const FLAGSTATUS_COMPLETED = @as(i32, 1);
pub const FLAGSTATUS_FOLLOWUP = @as(i32, 2);
pub const PKEY_FlagStatusText = PROPERTYKEY { .fmtid = Guid.initIntString("3696557358, 6301, 18545, 170, 1, 8, 194, 245, 122, 74, 188"), .pid = 100 };
pub const PKEY_FolderKind = PROPERTYKEY { .fmtid = Guid.initIntString("4243583315, 59449, 19699, 169, 231, 234, 34, 131, 32, 148, 184"), .pid = 101 };
pub const PKEY_FolderNameDisplay = PROPERTYKEY { .fmtid = Guid.initIntString("3072717104, 18415, 4122, 165, 241, 2, 96, 140, 158, 235, 172"), .pid = 25 };
pub const PKEY_FreeSpace = PROPERTYKEY { .fmtid = Guid.initIntString("2601995061, 16639, 4562, 162, 126, 0, 192, 79, 195, 8, 113"), .pid = 2 };
pub const PKEY_FullText = PROPERTYKEY { .fmtid = Guid.initIntString("507439168, 48171, 18284, 130, 55, 42, 205, 26, 131, 155, 34"), .pid = 6 };
pub const PKEY_HighKeywords = PROPERTYKEY { .fmtid = Guid.initIntString("4070540768, 20473, 4200, 171, 145, 8, 0, 43, 39, 179, 217"), .pid = 24 };
pub const PKEY_Identity = PROPERTYKEY { .fmtid = Guid.initIntString("2725202684, 29510, 17049, 190, 71, 235, 26, 230, 19, 19, 159"), .pid = 100 };
pub const PKEY_Identity_Blob = PROPERTYKEY { .fmtid = Guid.initIntString("2352714660, 47853, 6787, 154, 50, 16, 46, 227, 19, 246, 235"), .pid = 100 };
pub const PKEY_Identity_DisplayName = PROPERTYKEY { .fmtid = Guid.initIntString("2103984073, 53589, 17832, 187, 31, 137, 209, 155, 203, 121, 47"), .pid = 100 };
pub const PKEY_Identity_InternetSid = PROPERTYKEY { .fmtid = Guid.initIntString("1835883849, 9821, 18056, 159, 78, 31, 221, 51, 231, 204, 131"), .pid = 100 };
pub const PKEY_Identity_IsMeIdentity = PROPERTYKEY { .fmtid = Guid.initIntString("2752546568, 2527, 17271, 157, 252, 109, 153, 152, 109, 90, 103"), .pid = 100 };
pub const PKEY_Identity_KeyProviderContext = PROPERTYKEY { .fmtid = Guid.initIntString("2725202684, 29510, 17049, 190, 71, 235, 26, 230, 19, 19, 159"), .pid = 17 };
pub const PKEY_Identity_KeyProviderName = PROPERTYKEY { .fmtid = Guid.initIntString("2725202684, 29510, 17049, 190, 71, 235, 26, 230, 19, 19, 159"), .pid = 16 };
pub const PKEY_Identity_LogonStatusString = PROPERTYKEY { .fmtid = Guid.initIntString("4052610547, 13183, 17088, 158, 3, 206, 224, 135, 8, 168, 195"), .pid = 100 };
pub const PKEY_Identity_PrimaryEmailAddress = PROPERTYKEY { .fmtid = Guid.initIntString("4240533539, 47853, 20260, 155, 50, 160, 152, 33, 23, 247, 250"), .pid = 100 };
pub const PKEY_Identity_PrimarySid = PROPERTYKEY { .fmtid = Guid.initIntString("723222558, 49345, 18823, 158, 197, 114, 250, 137, 129, 71, 135"), .pid = 100 };
pub const PKEY_Identity_ProviderData = PROPERTYKEY { .fmtid = Guid.initIntString("2829536146, 13851, 20122, 183, 34, 124, 74, 115, 48, 163, 18"), .pid = 100 };
pub const PKEY_Identity_ProviderID = PROPERTYKEY { .fmtid = Guid.initIntString("1957158473, 64017, 19773, 160, 6, 219, 126, 8, 103, 89, 22"), .pid = 100 };
pub const PKEY_Identity_QualifiedUserName = PROPERTYKEY { .fmtid = Guid.initIntString("3662810705, 62697, 18233, 172, 130, 2, 224, 169, 92, 144, 48"), .pid = 100 };
pub const PKEY_Identity_UniqueID = PROPERTYKEY { .fmtid = Guid.initIntString("3848258480, 11104, 16928, 145, 142, 178, 30, 139, 241, 96, 22"), .pid = 100 };
pub const PKEY_Identity_UserName = PROPERTYKEY { .fmtid = Guid.initIntString("3291620611, 30922, 18886, 154, 204, 166, 142, 42, 253, 123, 107"), .pid = 100 };
pub const PKEY_IdentityProvider_Name = PROPERTYKEY { .fmtid = Guid.initIntString("3111059323, 13770, 18997, 134, 7, 41, 227, 165, 76, 70, 234"), .pid = 100 };
pub const PKEY_IdentityProvider_Picture = PROPERTYKEY { .fmtid = Guid.initIntString("606410351, 22082, 18532, 153, 47, 152, 253, 152, 242, 148, 195"), .pid = 100 };
pub const PKEY_ImageParsingName = PROPERTYKEY { .fmtid = Guid.initIntString("3614772960, 50852, 18668, 181, 62, 184, 123, 82, 230, 208, 115"), .pid = 100 };
pub const PKEY_Importance = PROPERTYKEY { .fmtid = Guid.initIntString("3823130700, 46984, 19034, 187, 32, 127, 90, 68, 201, 172, 221"), .pid = 11 };
pub const IMPORTANCE_LOW_MIN = @as(i32, 0);
pub const IMPORTANCE_LOW_SET = @as(i32, 1);
pub const IMPORTANCE_LOW_MAX = @as(i32, 1);
pub const IMPORTANCE_NORMAL_MIN = @as(i32, 2);
pub const IMPORTANCE_NORMAL_SET = @as(i32, 3);
pub const IMPORTANCE_NORMAL_MAX = @as(i32, 4);
pub const IMPORTANCE_HIGH_MIN = @as(i32, 5);
pub const IMPORTANCE_HIGH_SET = @as(i32, 5);
pub const IMPORTANCE_HIGH_MAX = @as(i32, 5);
pub const PKEY_ImportanceText = PROPERTYKEY { .fmtid = Guid.initIntString("2746390417, 30483, 19997, 187, 64, 23, 219, 133, 240, 24, 49"), .pid = 100 };
pub const PKEY_IsAttachment = PROPERTYKEY { .fmtid = Guid.initIntString("4064232028, 29089, 20392, 146, 47, 103, 142, 164, 166, 4, 8"), .pid = 100 };
pub const PKEY_IsDefaultNonOwnerSaveLocation = PROPERTYKEY { .fmtid = Guid.initIntString("1568061055, 39741, 17595, 182, 174, 37, 218, 79, 99, 138, 103"), .pid = 5 };
pub const PKEY_IsDefaultSaveLocation = PROPERTYKEY { .fmtid = Guid.initIntString("1568061055, 39741, 17595, 182, 174, 37, 218, 79, 99, 138, 103"), .pid = 3 };
pub const PKEY_IsDeleted = PROPERTYKEY { .fmtid = Guid.initIntString("1557815240, 13294, 20467, 144, 148, 174, 123, 216, 134, 140, 77"), .pid = 100 };
pub const PKEY_IsEncrypted = PROPERTYKEY { .fmtid = Guid.initIntString("2430984526, 25739, 18470, 178, 170, 172, 175, 121, 14, 53, 19"), .pid = 10 };
pub const PKEY_IsFlagged = PROPERTYKEY { .fmtid = Guid.initIntString("1571309413, 58367, 17016, 134, 176, 162, 121, 103, 251, 221, 3"), .pid = 100 };
pub const PKEY_IsFlaggedComplete = PROPERTYKEY { .fmtid = Guid.initIntString("2800967890, 22009, 18654, 185, 9, 98, 14, 9, 10, 100, 124"), .pid = 100 };
pub const PKEY_IsIncomplete = PROPERTYKEY { .fmtid = Guid.initIntString("879528913, 11882, 19525, 137, 164, 97, 183, 142, 142, 112, 15"), .pid = 100 };
pub const PKEY_IsLocationSupported = PROPERTYKEY { .fmtid = Guid.initIntString("1568061055, 39741, 17595, 182, 174, 37, 218, 79, 99, 138, 103"), .pid = 8 };
pub const PKEY_IsPinnedToNameSpaceTree = PROPERTYKEY { .fmtid = Guid.initIntString("1568061055, 39741, 17595, 182, 174, 37, 218, 79, 99, 138, 103"), .pid = 2 };
pub const PKEY_IsRead = PROPERTYKEY { .fmtid = Guid.initIntString("3823130700, 46984, 19034, 187, 32, 127, 90, 68, 201, 172, 221"), .pid = 10 };
pub const PKEY_IsSearchOnlyItem = PROPERTYKEY { .fmtid = Guid.initIntString("1568061055, 39741, 17595, 182, 174, 37, 218, 79, 99, 138, 103"), .pid = 4 };
pub const PKEY_IsSendToTarget = PROPERTYKEY { .fmtid = Guid.initIntString("677604006, 38205, 4562, 181, 214, 0, 192, 79, 217, 24, 208"), .pid = 33 };
pub const PKEY_IsShared = PROPERTYKEY { .fmtid = Guid.initIntString("4018687067, 11262, 16827, 170, 229, 118, 238, 223, 79, 153, 2"), .pid = 100 };
pub const PKEY_ItemAuthors = PROPERTYKEY { .fmtid = Guid.initIntString("3500166922, 17962, 18596, 187, 47, 55, 6, 232, 141, 189, 125"), .pid = 100 };
pub const PKEY_ItemClassType = PROPERTYKEY { .fmtid = Guid.initIntString("75913389, 11704, 16804, 187, 182, 172, 30, 241, 32, 126, 177"), .pid = 100 };
pub const PKEY_ItemDate = PROPERTYKEY { .fmtid = Guid.initIntString("4158354612, 17031, 16643, 175, 186, 241, 177, 61, 205, 117, 207"), .pid = 100 };
pub const PKEY_ItemFolderNameDisplay = PROPERTYKEY { .fmtid = Guid.initIntString("3072717104, 18415, 4122, 165, 241, 2, 96, 140, 158, 235, 172"), .pid = 2 };
pub const PKEY_ItemFolderPathDisplay = PROPERTYKEY { .fmtid = Guid.initIntString("3823130700, 46984, 19034, 187, 32, 127, 90, 68, 201, 172, 221"), .pid = 6 };
pub const PKEY_ItemFolderPathDisplayNarrow = PROPERTYKEY { .fmtid = Guid.initIntString("3669831917, 67, 18313, 167, 248, 208, 19, 164, 115, 102, 34"), .pid = 100 };
pub const PKEY_ItemName = PROPERTYKEY { .fmtid = Guid.initIntString("1804443764, 15196, 17340, 136, 111, 10, 44, 220, 224, 11, 111"), .pid = 100 };
pub const PKEY_ItemNameDisplay = PROPERTYKEY { .fmtid = Guid.initIntString("3072717104, 18415, 4122, 165, 241, 2, 96, 140, 158, 235, 172"), .pid = 10 };
pub const PKEY_ItemNameDisplayWithoutExtension = PROPERTYKEY { .fmtid = Guid.initIntString("3072717104, 18415, 4122, 165, 241, 2, 96, 140, 158, 235, 172"), .pid = 24 };
pub const PKEY_ItemNamePrefix = PROPERTYKEY { .fmtid = Guid.initIntString("3610329073, 42874, 16412, 140, 153, 61, 189, 214, 138, 221, 54"), .pid = 100 };
pub const PKEY_ItemNameSortOverride = PROPERTYKEY { .fmtid = Guid.initIntString("3072717104, 18415, 4122, 165, 241, 2, 96, 140, 158, 235, 172"), .pid = 23 };
pub const PKEY_ItemParticipants = PROPERTYKEY { .fmtid = Guid.initIntString("3570444822, 39240, 16804, 170, 133, 217, 127, 249, 100, 105, 147"), .pid = 100 };
pub const PKEY_ItemPathDisplay = PROPERTYKEY { .fmtid = Guid.initIntString("3823130700, 46984, 19034, 187, 32, 127, 90, 68, 201, 172, 221"), .pid = 7 };
pub const PKEY_ItemPathDisplayNarrow = PROPERTYKEY { .fmtid = Guid.initIntString("677604006, 38205, 4562, 181, 214, 0, 192, 79, 217, 24, 208"), .pid = 8 };
pub const PKEY_ItemSubType = PROPERTYKEY { .fmtid = Guid.initIntString("677604006, 38205, 4562, 181, 214, 0, 192, 79, 217, 24, 208"), .pid = 37 };
pub const PKEY_ItemType = PROPERTYKEY { .fmtid = Guid.initIntString("677604006, 38205, 4562, 181, 214, 0, 192, 79, 217, 24, 208"), .pid = 11 };
pub const PKEY_ItemTypeText = PROPERTYKEY { .fmtid = Guid.initIntString("3072717104, 18415, 4122, 165, 241, 2, 96, 140, 158, 235, 172"), .pid = 4 };
pub const PKEY_ItemUrl = PROPERTYKEY { .fmtid = Guid.initIntString("1231625360, 32279, 4122, 169, 28, 8, 0, 43, 46, 205, 169"), .pid = 9 };
pub const PKEY_Keywords = PROPERTYKEY { .fmtid = Guid.initIntString("4070540768, 20473, 4200, 171, 145, 8, 0, 43, 39, 179, 217"), .pid = 5 };
pub const PKEY_Kind = PROPERTYKEY { .fmtid = Guid.initIntString("507439168, 48171, 18284, 130, 55, 42, 205, 26, 131, 155, 34"), .pid = 3 };
pub const KIND_CALENDAR = "calendar";
pub const KIND_COMMUNICATION = "communication";
pub const KIND_CONTACT = "contact";
pub const KIND_DOCUMENT = "document";
pub const KIND_EMAIL = "email";
pub const KIND_FEED = "feed";
pub const KIND_FOLDER = "folder";
pub const KIND_GAME = "game";
pub const KIND_INSTANTMESSAGE = "instantmessage";
pub const KIND_JOURNAL = "journal";
pub const KIND_LINK = "link";
pub const KIND_MOVIE = "movie";
pub const KIND_MUSIC = "music";
pub const KIND_NOTE = "note";
pub const KIND_PICTURE = "picture";
pub const KIND_PLAYLIST = "playlist";
pub const KIND_PROGRAM = "program";
pub const KIND_RECORDEDTV = "recordedtv";
pub const KIND_SEARCHFOLDER = "searchfolder";
pub const KIND_TASK = "task";
pub const KIND_VIDEO = "video";
pub const KIND_WEBHISTORY = "webhistory";
pub const KIND_UNKNOWN = "unknown";
pub const PKEY_KindText = PROPERTYKEY { .fmtid = Guid.initIntString("4031508373, 50565, 16791, 162, 183, 223, 70, 253, 201, 238, 109"), .pid = 100 };
pub const PKEY_Language = PROPERTYKEY { .fmtid = Guid.initIntString("3587036418, 11932, 4123, 147, 151, 8, 0, 43, 44, 249, 174"), .pid = 28 };
pub const PKEY_LastSyncError = PROPERTYKEY { .fmtid = Guid.initIntString("4243583315, 59449, 19699, 169, 231, 234, 34, 131, 32, 148, 184"), .pid = 107 };
pub const PKEY_LastSyncWarning = PROPERTYKEY { .fmtid = Guid.initIntString("4243583315, 59449, 19699, 169, 231, 234, 34, 131, 32, 148, 184"), .pid = 128 };
pub const PKEY_LastWriterPackageFamilyName = PROPERTYKEY { .fmtid = Guid.initIntString("1345126059, 18411, 17820, 185, 96, 230, 216, 114, 143, 119, 1"), .pid = 101 };
pub const PKEY_LowKeywords = PROPERTYKEY { .fmtid = Guid.initIntString("4070540768, 20473, 4200, 171, 145, 8, 0, 43, 39, 179, 217"), .pid = 25 };
pub const PKEY_MediumKeywords = PROPERTYKEY { .fmtid = Guid.initIntString("4070540768, 20473, 4200, 171, 145, 8, 0, 43, 39, 179, 217"), .pid = 26 };
pub const PKEY_MileageInformation = PROPERTYKEY { .fmtid = Guid.initIntString("4260905840, 794, 19165, 158, 145, 13, 119, 95, 28, 102, 5"), .pid = 100 };
pub const PKEY_MIMEType = PROPERTYKEY { .fmtid = Guid.initIntString("191095632, 40140, 4560, 188, 219, 0, 128, 95, 204, 206, 4"), .pid = 5 };
pub const PKEY_Null = PROPERTYKEY { .fmtid = Guid.initIntString("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0"), .pid = 0 };
pub const PKEY_OfflineAvailability = PROPERTYKEY { .fmtid = Guid.initIntString("2839972022, 32159, 17776, 166, 72, 227, 223, 192, 171, 43, 63"), .pid = 100 };
pub const OFFLINEAVAILABILITY_NOT_AVAILABLE = @as(u32, 0);
pub const OFFLINEAVAILABILITY_AVAILABLE = @as(u32, 1);
pub const OFFLINEAVAILABILITY_ALWAYS_AVAILABLE = @as(u32, 2);
pub const PKEY_OfflineStatus = PROPERTYKEY { .fmtid = Guid.initIntString("1831110799, 18200, 19418, 175, 237, 234, 15, 180, 56, 108, 216"), .pid = 100 };
pub const OFFLINESTATUS_ONLINE = @as(u32, 0);
pub const OFFLINESTATUS_OFFLINE = @as(u32, 1);
pub const OFFLINESTATUS_OFFLINE_FORCED = @as(u32, 2);
pub const OFFLINESTATUS_OFFLINE_SLOW = @as(u32, 3);
pub const OFFLINESTATUS_OFFLINE_ERROR = @as(u32, 4);
pub const OFFLINESTATUS_OFFLINE_ITEM_VERSION_CONFLICT = @as(u32, 5);
pub const OFFLINESTATUS_OFFLINE_SUSPENDED = @as(u32, 6);
pub const PKEY_OriginalFileName = PROPERTYKEY { .fmtid = Guid.initIntString("217021779, 64100, 4561, 162, 3, 0, 0, 248, 31, 237, 238"), .pid = 6 };
pub const PKEY_OwnerSID = PROPERTYKEY { .fmtid = Guid.initIntString("1568061055, 39741, 17595, 182, 174, 37, 218, 79, 99, 138, 103"), .pid = 6 };
pub const PKEY_ParentalRating = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 21 };
pub const PKEY_ParentalRatingReason = PROPERTYKEY { .fmtid = Guid.initIntString("278416906, 63986, 17185, 183, 239, 186, 241, 149, 175, 67, 25"), .pid = 100 };
pub const PKEY_ParentalRatingsOrganization = PROPERTYKEY { .fmtid = Guid.initIntString("2818443328, 4932, 18160, 141, 55, 82, 237, 113, 42, 75, 249"), .pid = 100 };
pub const PKEY_ParsingBindContext = PROPERTYKEY { .fmtid = Guid.initIntString("3753484365, 13871, 19619, 179, 11, 2, 84, 177, 123, 91, 132"), .pid = 100 };
pub const PKEY_ParsingName = PROPERTYKEY { .fmtid = Guid.initIntString("677604006, 38205, 4562, 181, 214, 0, 192, 79, 217, 24, 208"), .pid = 24 };
pub const PKEY_ParsingPath = PROPERTYKEY { .fmtid = Guid.initIntString("677604006, 38205, 4562, 181, 214, 0, 192, 79, 217, 24, 208"), .pid = 30 };
pub const PKEY_PerceivedType = PROPERTYKEY { .fmtid = Guid.initIntString("677604006, 38205, 4562, 181, 214, 0, 192, 79, 217, 24, 208"), .pid = 9 };
pub const PKEY_PercentFull = PROPERTYKEY { .fmtid = Guid.initIntString("2601995061, 16639, 4562, 162, 126, 0, 192, 79, 195, 8, 113"), .pid = 5 };
pub const PKEY_Priority = PROPERTYKEY { .fmtid = Guid.initIntString("2619330420, 11671, 16826, 180, 174, 203, 46, 54, 97, 166, 228"), .pid = 5 };
pub const PKEY_PriorityText = PROPERTYKEY { .fmtid = Guid.initIntString("3649825163, 47211, 16533, 191, 82, 157, 35, 178, 224, 167, 82"), .pid = 100 };
pub const PKEY_Project = PROPERTYKEY { .fmtid = Guid.initIntString("967309602, 18300, 18654, 139, 200, 178, 132, 65, 227, 66, 227"), .pid = 100 };
pub const PKEY_ProviderItemID = PROPERTYKEY { .fmtid = Guid.initIntString("4062026049, 33264, 18202, 173, 238, 78, 116, 180, 146, 23, 237"), .pid = 100 };
pub const PKEY_Rating = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 9 };
pub const RATING_ONE_STAR_MIN = @as(u32, 1);
pub const RATING_ONE_STAR_SET = @as(u32, 1);
pub const RATING_ONE_STAR_MAX = @as(u32, 12);
pub const RATING_TWO_STARS_MIN = @as(u32, 13);
pub const RATING_TWO_STARS_SET = @as(u32, 25);
pub const RATING_TWO_STARS_MAX = @as(u32, 37);
pub const RATING_THREE_STARS_MIN = @as(u32, 38);
pub const RATING_THREE_STARS_SET = @as(u32, 50);
pub const RATING_THREE_STARS_MAX = @as(u32, 62);
pub const RATING_FOUR_STARS_MIN = @as(u32, 63);
pub const RATING_FOUR_STARS_SET = @as(u32, 75);
pub const RATING_FOUR_STARS_MAX = @as(u32, 87);
pub const RATING_FIVE_STARS_MIN = @as(u32, 88);
pub const RATING_FIVE_STARS_SET = @as(u32, 99);
pub const RATING_FIVE_STARS_MAX = @as(u32, 99);
pub const PKEY_RatingText = PROPERTYKEY { .fmtid = Guid.initIntString("2417589415, 64911, 20108, 157, 163, 181, 126, 30, 96, 146, 149"), .pid = 100 };
pub const PKEY_RemoteConflictingFile = PROPERTYKEY { .fmtid = Guid.initIntString("4243583315, 59449, 19699, 169, 231, 234, 34, 131, 32, 148, 184"), .pid = 115 };
pub const PKEY_Security_AllowedEnterpriseDataProtectionIdentities = PROPERTYKEY { .fmtid = Guid.initIntString("953430912, 54296, 18480, 132, 213, 70, 147, 90, 129, 197, 198"), .pid = 32 };
pub const PKEY_Security_EncryptionOwners = PROPERTYKEY { .fmtid = Guid.initIntString("1599799146, 14309, 18304, 151, 234, 128, 199, 86, 92, 245, 53"), .pid = 34 };
pub const PKEY_Security_EncryptionOwnersDisplay = PROPERTYKEY { .fmtid = Guid.initIntString("3730971535, 57637, 17315, 163, 45, 86, 101, 68, 109, 99, 42"), .pid = 25 };
pub const PKEY_Sensitivity = PROPERTYKEY { .fmtid = Guid.initIntString("4174640812, 18548, 17099, 190, 89, 171, 69, 75, 48, 113, 106"), .pid = 100 };
pub const PKEY_SensitivityText = PROPERTYKEY { .fmtid = Guid.initIntString("3502764116, 16242, 18213, 133, 39, 18, 154, 87, 124, 178, 105"), .pid = 100 };
pub const PKEY_SFGAOFlags = PROPERTYKEY { .fmtid = Guid.initIntString("677604006, 38205, 4562, 181, 214, 0, 192, 79, 217, 24, 208"), .pid = 25 };
pub const PKEY_SharedWith = PROPERTYKEY { .fmtid = Guid.initIntString("4018687067, 11262, 16827, 170, 229, 118, 238, 223, 79, 153, 2"), .pid = 200 };
pub const PKEY_ShareUserRating = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 12 };
pub const PKEY_SharingStatus = PROPERTYKEY { .fmtid = Guid.initIntString("4018687067, 11262, 16827, 170, 229, 118, 238, 223, 79, 153, 2"), .pid = 300 };
pub const SHARINGSTATUS_NOTSHARED = @as(u32, 0);
pub const SHARINGSTATUS_SHARED = @as(u32, 1);
pub const SHARINGSTATUS_PRIVATE = @as(u32, 2);
pub const PKEY_Shell_OmitFromView = PROPERTYKEY { .fmtid = Guid.initIntString("3728024972, 50837, 19644, 185, 130, 56, 176, 173, 36, 206, 208"), .pid = 2 };
pub const PKEY_SimpleRating = PROPERTYKEY { .fmtid = Guid.initIntString("2694776910, 44353, 18591, 128, 118, 170, 91, 227, 8, 43, 202"), .pid = 100 };
pub const PKEY_Size = PROPERTYKEY { .fmtid = Guid.initIntString("3072717104, 18415, 4122, 165, 241, 2, 96, 140, 158, 235, 172"), .pid = 12 };
pub const PKEY_SoftwareUsed = PROPERTYKEY { .fmtid = Guid.initIntString("347610529, 309, 19761, 150, 217, 108, 191, 201, 103, 26, 153"), .pid = 305 };
pub const PKEY_SourceItem = PROPERTYKEY { .fmtid = Guid.initIntString("1720508325, 31259, 17187, 174, 75, 229, 39, 57, 58, 29, 129"), .pid = 100 };
pub const PKEY_SourcePackageFamilyName = PROPERTYKEY { .fmtid = Guid.initIntString("4289633719, 7309, 17407, 129, 140, 132, 64, 58, 163, 115, 45"), .pid = 100 };
pub const PKEY_StartDate = PROPERTYKEY { .fmtid = Guid.initIntString("1224568520, 35346, 19679, 160, 62, 78, 197, 165, 17, 237, 222"), .pid = 100 };
pub const PKEY_Status = PROPERTYKEY { .fmtid = Guid.initIntString("136353, 0, 0, 192, 0, 0, 0, 0, 0, 0, 70"), .pid = 9 };
pub const PKEY_StorageProviderCallerVersionInformation = PROPERTYKEY { .fmtid = Guid.initIntString("3002710486, 65220, 19925, 148, 215, 137, 87, 72, 140, 128, 123"), .pid = 7 };
pub const PKEY_StorageProviderError = PROPERTYKEY { .fmtid = Guid.initIntString("4243583315, 59449, 19699, 169, 231, 234, 34, 131, 32, 148, 184"), .pid = 109 };
pub const PKEY_StorageProviderFileChecksum = PROPERTYKEY { .fmtid = Guid.initIntString("3002710486, 65220, 19925, 148, 215, 137, 87, 72, 140, 128, 123"), .pid = 5 };
pub const PKEY_StorageProviderFileFlags = PROPERTYKEY { .fmtid = Guid.initIntString("3002710486, 65220, 19925, 148, 215, 137, 87, 72, 140, 128, 123"), .pid = 8 };
pub const PKEY_StorageProviderFileHasConflict = PROPERTYKEY { .fmtid = Guid.initIntString("3002710486, 65220, 19925, 148, 215, 137, 87, 72, 140, 128, 123"), .pid = 9 };
pub const PKEY_StorageProviderFileIdentifier = PROPERTYKEY { .fmtid = Guid.initIntString("3002710486, 65220, 19925, 148, 215, 137, 87, 72, 140, 128, 123"), .pid = 3 };
pub const PKEY_StorageProviderFileRemoteUri = PROPERTYKEY { .fmtid = Guid.initIntString("4243583315, 59449, 19699, 169, 231, 234, 34, 131, 32, 148, 184"), .pid = 112 };
pub const PKEY_StorageProviderFileVersion = PROPERTYKEY { .fmtid = Guid.initIntString("3002710486, 65220, 19925, 148, 215, 137, 87, 72, 140, 128, 123"), .pid = 4 };
pub const PKEY_StorageProviderFileVersionWaterline = PROPERTYKEY { .fmtid = Guid.initIntString("3002710486, 65220, 19925, 148, 215, 137, 87, 72, 140, 128, 123"), .pid = 6 };
pub const PKEY_StorageProviderId = PROPERTYKEY { .fmtid = Guid.initIntString("4243583315, 59449, 19699, 169, 231, 234, 34, 131, 32, 148, 184"), .pid = 108 };
pub const PKEY_StorageProviderShareStatuses = PROPERTYKEY { .fmtid = Guid.initIntString("4243583315, 59449, 19699, 169, 231, 234, 34, 131, 32, 148, 184"), .pid = 111 };
pub const STORAGE_PROVIDER_SHARE_STATUS_PRIVATE = "Private";
pub const STORAGE_PROVIDER_SHARE_STATUS_SHARED = "Shared";
pub const STORAGE_PROVIDER_SHARE_STATUS_PUBLIC = "Public";
pub const STORAGE_PROVIDER_SHARE_STATUS_GROUP = "Group";
pub const STORAGE_PROVIDER_SHARE_STATUS_OWNER = "Owner";
pub const PKEY_StorageProviderSharingStatus = PROPERTYKEY { .fmtid = Guid.initIntString("4243583315, 59449, 19699, 169, 231, 234, 34, 131, 32, 148, 184"), .pid = 117 };
pub const STORAGE_PROVIDER_SHARINGSTATUS_NOTSHARED = @as(u32, 0);
pub const STORAGE_PROVIDER_SHARINGSTATUS_SHARED = @as(u32, 1);
pub const STORAGE_PROVIDER_SHARINGSTATUS_PRIVATE = @as(u32, 2);
pub const STORAGE_PROVIDER_SHARINGSTATUS_PUBLIC = @as(u32, 3);
pub const STORAGE_PROVIDER_SHARINGSTATUS_SHARED_OWNED = @as(u32, 4);
pub const STORAGE_PROVIDER_SHARINGSTATUS_SHARED_COOWNED = @as(u32, 5);
pub const STORAGE_PROVIDER_SHARINGSTATUS_PUBLIC_OWNED = @as(u32, 6);
pub const STORAGE_PROVIDER_SHARINGSTATUS_PUBLIC_COOWNED = @as(u32, 7);
pub const PKEY_StorageProviderStatus = PROPERTYKEY { .fmtid = Guid.initIntString("4243583315, 59449, 19699, 169, 231, 234, 34, 131, 32, 148, 184"), .pid = 110 };
pub const PKEY_Subject = PROPERTYKEY { .fmtid = Guid.initIntString("4070540768, 20473, 4200, 171, 145, 8, 0, 43, 39, 179, 217"), .pid = 3 };
pub const PKEY_SyncTransferStatus = PROPERTYKEY { .fmtid = Guid.initIntString("4243583315, 59449, 19699, 169, 231, 234, 34, 131, 32, 148, 184"), .pid = 103 };
pub const PKEY_Thumbnail = PROPERTYKEY { .fmtid = Guid.initIntString("4070540768, 20473, 4200, 171, 145, 8, 0, 43, 39, 179, 217"), .pid = 17 };
pub const PKEY_ThumbnailCacheId = PROPERTYKEY { .fmtid = Guid.initIntString("1147999921, 36269, 18544, 167, 72, 64, 46, 164, 61, 120, 140"), .pid = 100 };
pub const PKEY_ThumbnailStream = PROPERTYKEY { .fmtid = Guid.initIntString("4070540768, 20473, 4200, 171, 145, 8, 0, 43, 39, 179, 217"), .pid = 27 };
pub const PKEY_Title = PROPERTYKEY { .fmtid = Guid.initIntString("4070540768, 20473, 4200, 171, 145, 8, 0, 43, 39, 179, 217"), .pid = 2 };
pub const PKEY_TitleSortOverride = PROPERTYKEY { .fmtid = Guid.initIntString("4042758221, 8750, 19154, 130, 171, 29, 216, 234, 64, 229, 126"), .pid = 300 };
pub const PKEY_TotalFileSize = PROPERTYKEY { .fmtid = Guid.initIntString("677604006, 38205, 4562, 181, 214, 0, 192, 79, 217, 24, 208"), .pid = 14 };
pub const PKEY_Trademarks = PROPERTYKEY { .fmtid = Guid.initIntString("217021779, 64100, 4561, 162, 3, 0, 0, 248, 31, 237, 238"), .pid = 9 };
pub const PKEY_TransferOrder = PROPERTYKEY { .fmtid = Guid.initIntString("4243583315, 59449, 19699, 169, 231, 234, 34, 131, 32, 148, 184"), .pid = 106 };
pub const PKEY_TransferPosition = PROPERTYKEY { .fmtid = Guid.initIntString("4243583315, 59449, 19699, 169, 231, 234, 34, 131, 32, 148, 184"), .pid = 104 };
pub const PKEY_TransferSize = PROPERTYKEY { .fmtid = Guid.initIntString("4243583315, 59449, 19699, 169, 231, 234, 34, 131, 32, 148, 184"), .pid = 105 };
pub const PKEY_VolumeId = PROPERTYKEY { .fmtid = Guid.initIntString("1147999921, 36269, 18544, 167, 72, 64, 46, 164, 61, 120, 140"), .pid = 104 };
pub const PKEY_ZoneIdentifier = PROPERTYKEY { .fmtid = Guid.initIntString("1345126059, 18411, 17820, 185, 96, 230, 216, 114, 143, 119, 1"), .pid = 100 };
pub const PKEY_Device_PrinterURL = PROPERTYKEY { .fmtid = Guid.initIntString("189330266, 48750, 20247, 177, 8, 60, 64, 115, 209, 102, 154"), .pid = 15 };
pub const PKEY_DeviceInterface_Bluetooth_DeviceAddress = PROPERTYKEY { .fmtid = Guid.initIntString("735477131, 35819, 18645, 135, 224, 108, 218, 52, 40, 4, 10"), .pid = 1 };
pub const PKEY_DeviceInterface_Bluetooth_Flags = PROPERTYKEY { .fmtid = Guid.initIntString("735477131, 35819, 18645, 135, 224, 108, 218, 52, 40, 4, 10"), .pid = 3 };
pub const PKEY_DeviceInterface_Bluetooth_LastConnectedTime = PROPERTYKEY { .fmtid = Guid.initIntString("735477131, 35819, 18645, 135, 224, 108, 218, 52, 40, 4, 10"), .pid = 11 };
pub const PKEY_DeviceInterface_Bluetooth_Manufacturer = PROPERTYKEY { .fmtid = Guid.initIntString("735477131, 35819, 18645, 135, 224, 108, 218, 52, 40, 4, 10"), .pid = 4 };
pub const PKEY_DeviceInterface_Bluetooth_ModelNumber = PROPERTYKEY { .fmtid = Guid.initIntString("735477131, 35819, 18645, 135, 224, 108, 218, 52, 40, 4, 10"), .pid = 5 };
pub const PKEY_DeviceInterface_Bluetooth_ProductId = PROPERTYKEY { .fmtid = Guid.initIntString("735477131, 35819, 18645, 135, 224, 108, 218, 52, 40, 4, 10"), .pid = 8 };
pub const PKEY_DeviceInterface_Bluetooth_ProductVersion = PROPERTYKEY { .fmtid = Guid.initIntString("735477131, 35819, 18645, 135, 224, 108, 218, 52, 40, 4, 10"), .pid = 9 };
pub const PKEY_DeviceInterface_Bluetooth_ServiceGuid = PROPERTYKEY { .fmtid = Guid.initIntString("735477131, 35819, 18645, 135, 224, 108, 218, 52, 40, 4, 10"), .pid = 2 };
pub const PKEY_DeviceInterface_Bluetooth_VendorId = PROPERTYKEY { .fmtid = Guid.initIntString("735477131, 35819, 18645, 135, 224, 108, 218, 52, 40, 4, 10"), .pid = 7 };
pub const PKEY_DeviceInterface_Bluetooth_VendorIdSource = PROPERTYKEY { .fmtid = Guid.initIntString("735477131, 35819, 18645, 135, 224, 108, 218, 52, 40, 4, 10"), .pid = 6 };
pub const PKEY_DeviceInterface_Hid_IsReadOnly = PROPERTYKEY { .fmtid = Guid.initIntString("3421733648, 18967, 17168, 161, 235, 36, 127, 11, 103, 89, 59"), .pid = 4 };
pub const PKEY_DeviceInterface_Hid_ProductId = PROPERTYKEY { .fmtid = Guid.initIntString("3421733648, 18967, 17168, 161, 235, 36, 127, 11, 103, 89, 59"), .pid = 6 };
pub const PKEY_DeviceInterface_Hid_UsageId = PROPERTYKEY { .fmtid = Guid.initIntString("3421733648, 18967, 17168, 161, 235, 36, 127, 11, 103, 89, 59"), .pid = 3 };
pub const PKEY_DeviceInterface_Hid_UsagePage = PROPERTYKEY { .fmtid = Guid.initIntString("3421733648, 18967, 17168, 161, 235, 36, 127, 11, 103, 89, 59"), .pid = 2 };
pub const PKEY_DeviceInterface_Hid_VendorId = PROPERTYKEY { .fmtid = Guid.initIntString("3421733648, 18967, 17168, 161, 235, 36, 127, 11, 103, 89, 59"), .pid = 5 };
pub const PKEY_DeviceInterface_Hid_VersionNumber = PROPERTYKEY { .fmtid = Guid.initIntString("3421733648, 18967, 17168, 161, 235, 36, 127, 11, 103, 89, 59"), .pid = 7 };
pub const PKEY_DeviceInterface_PrinterDriverDirectory = PROPERTYKEY { .fmtid = Guid.initIntString("2222745310, 47318, 19193, 171, 195, 111, 79, 146, 107, 192, 57"), .pid = 14 };
pub const PKEY_DeviceInterface_PrinterDriverName = PROPERTYKEY { .fmtid = Guid.initIntString("2948886896, 5365, 18828, 143, 48, 176, 209, 155, 228, 73, 198"), .pid = 11 };
pub const PKEY_DeviceInterface_PrinterEnumerationFlag = PROPERTYKEY { .fmtid = Guid.initIntString("2684830369, 52620, 19255, 149, 171, 112, 117, 85, 135, 118, 122"), .pid = 3 };
pub const PKEY_DeviceInterface_PrinterName = PROPERTYKEY { .fmtid = Guid.initIntString("175867119, 3111, 17983, 132, 239, 6, 197, 7, 0, 1, 190"), .pid = 10 };
pub const PKEY_DeviceInterface_PrinterPortName = PROPERTYKEY { .fmtid = Guid.initIntString("4006066017, 28564, 16817, 148, 159, 199, 41, 114, 13, 209, 60"), .pid = 12 };
pub const PKEY_DeviceInterface_Proximity_SupportsNfc = PROPERTYKEY { .fmtid = Guid.initIntString("4214768333, 40490, 20355, 143, 204, 75, 7, 97, 19, 154, 233"), .pid = 2 };
pub const PKEY_DeviceInterface_Serial_PortName = PROPERTYKEY { .fmtid = Guid.initIntString("1282142556, 19459, 19116, 145, 245, 100, 192, 248, 82, 188, 244"), .pid = 4 };
pub const PKEY_DeviceInterface_Serial_UsbProductId = PROPERTYKEY { .fmtid = Guid.initIntString("1282142556, 19459, 19116, 145, 245, 100, 192, 248, 82, 188, 244"), .pid = 3 };
pub const PKEY_DeviceInterface_Serial_UsbVendorId = PROPERTYKEY { .fmtid = Guid.initIntString("1282142556, 19459, 19116, 145, 245, 100, 192, 248, 82, 188, 244"), .pid = 2 };
pub const PKEY_DeviceInterface_WinUsb_DeviceInterfaceClasses = PROPERTYKEY { .fmtid = Guid.initIntString("2514560949, 31180, 20099, 156, 158, 132, 34, 24, 123, 62, 14"), .pid = 7 };
pub const PKEY_DeviceInterface_WinUsb_UsbClass = PROPERTYKEY { .fmtid = Guid.initIntString("2514560949, 31180, 20099, 156, 158, 132, 34, 24, 123, 62, 14"), .pid = 4 };
pub const PKEY_DeviceInterface_WinUsb_UsbProductId = PROPERTYKEY { .fmtid = Guid.initIntString("2514560949, 31180, 20099, 156, 158, 132, 34, 24, 123, 62, 14"), .pid = 3 };
pub const PKEY_DeviceInterface_WinUsb_UsbProtocol = PROPERTYKEY { .fmtid = Guid.initIntString("2514560949, 31180, 20099, 156, 158, 132, 34, 24, 123, 62, 14"), .pid = 6 };
pub const PKEY_DeviceInterface_WinUsb_UsbSubClass = PROPERTYKEY { .fmtid = Guid.initIntString("2514560949, 31180, 20099, 156, 158, 132, 34, 24, 123, 62, 14"), .pid = 5 };
pub const PKEY_DeviceInterface_WinUsb_UsbVendorId = PROPERTYKEY { .fmtid = Guid.initIntString("2514560949, 31180, 20099, 156, 158, 132, 34, 24, 123, 62, 14"), .pid = 2 };
pub const PKEY_Devices_Aep_AepId = PROPERTYKEY { .fmtid = Guid.initIntString("992796678, 24161, 20446, 186, 184, 155, 138, 172, 155, 38, 223"), .pid = 8 };
pub const PKEY_Devices_Aep_Bluetooth_Cod_Major = PROPERTYKEY { .fmtid = Guid.initIntString("1606235341, 22042, 16686, 186, 152, 71, 138, 107, 15, 239, 29"), .pid = 2 };
pub const PKEY_Devices_Aep_Bluetooth_Cod_Minor = PROPERTYKEY { .fmtid = Guid.initIntString("1606235341, 22042, 16686, 186, 152, 71, 138, 107, 15, 239, 29"), .pid = 3 };
pub const PKEY_Devices_Aep_Bluetooth_Cod_Services_Audio = PROPERTYKEY { .fmtid = Guid.initIntString("1606235341, 22042, 16686, 186, 152, 71, 138, 107, 15, 239, 29"), .pid = 10 };
pub const PKEY_Devices_Aep_Bluetooth_Cod_Services_Capturing = PROPERTYKEY { .fmtid = Guid.initIntString("1606235341, 22042, 16686, 186, 152, 71, 138, 107, 15, 239, 29"), .pid = 8 };
pub const PKEY_Devices_Aep_Bluetooth_Cod_Services_Information = PROPERTYKEY { .fmtid = Guid.initIntString("1606235341, 22042, 16686, 186, 152, 71, 138, 107, 15, 239, 29"), .pid = 12 };
pub const PKEY_Devices_Aep_Bluetooth_Cod_Services_LimitedDiscovery = PROPERTYKEY { .fmtid = Guid.initIntString("1606235341, 22042, 16686, 186, 152, 71, 138, 107, 15, 239, 29"), .pid = 4 };
pub const PKEY_Devices_Aep_Bluetooth_Cod_Services_Networking = PROPERTYKEY { .fmtid = Guid.initIntString("1606235341, 22042, 16686, 186, 152, 71, 138, 107, 15, 239, 29"), .pid = 6 };
pub const PKEY_Devices_Aep_Bluetooth_Cod_Services_ObjectXfer = PROPERTYKEY { .fmtid = Guid.initIntString("1606235341, 22042, 16686, 186, 152, 71, 138, 107, 15, 239, 29"), .pid = 9 };
pub const PKEY_Devices_Aep_Bluetooth_Cod_Services_Positioning = PROPERTYKEY { .fmtid = Guid.initIntString("1606235341, 22042, 16686, 186, 152, 71, 138, 107, 15, 239, 29"), .pid = 5 };
pub const PKEY_Devices_Aep_Bluetooth_Cod_Services_Rendering = PROPERTYKEY { .fmtid = Guid.initIntString("1606235341, 22042, 16686, 186, 152, 71, 138, 107, 15, 239, 29"), .pid = 7 };
pub const PKEY_Devices_Aep_Bluetooth_Cod_Services_Telephony = PROPERTYKEY { .fmtid = Guid.initIntString("1606235341, 22042, 16686, 186, 152, 71, 138, 107, 15, 239, 29"), .pid = 11 };
pub const PKEY_Devices_Aep_Bluetooth_LastSeenTime = PROPERTYKEY { .fmtid = Guid.initIntString("735477131, 35819, 18645, 135, 224, 108, 218, 52, 40, 4, 10"), .pid = 12 };
pub const PKEY_Devices_Aep_Bluetooth_Le_AddressType = PROPERTYKEY { .fmtid = Guid.initIntString("2573136048, 32435, 19083, 185, 206, 6, 139, 179, 244, 175, 105"), .pid = 4 };
pub const BLUETOOTH_ADDRESS_TYPE_PUBLIC = @as(u32, 0);
pub const BLUETOOTH_ADDRESS_TYPE_RANDOM = @as(u32, 1);
pub const PKEY_Devices_Aep_Bluetooth_Le_Appearance = PROPERTYKEY { .fmtid = Guid.initIntString("2573136048, 32435, 19083, 185, 206, 6, 139, 179, 244, 175, 105"), .pid = 1 };
pub const PKEY_Devices_Aep_Bluetooth_Le_Appearance_Category = PROPERTYKEY { .fmtid = Guid.initIntString("2573136048, 32435, 19083, 185, 206, 6, 139, 179, 244, 175, 105"), .pid = 5 };
pub const PKEY_Devices_Aep_Bluetooth_Le_Appearance_Subcategory = PROPERTYKEY { .fmtid = Guid.initIntString("2573136048, 32435, 19083, 185, 206, 6, 139, 179, 244, 175, 105"), .pid = 6 };
pub const PKEY_Devices_Aep_Bluetooth_Le_IsConnectable = PROPERTYKEY { .fmtid = Guid.initIntString("2573136048, 32435, 19083, 185, 206, 6, 139, 179, 244, 175, 105"), .pid = 8 };
pub const PKEY_Devices_Aep_CanPair = PROPERTYKEY { .fmtid = Guid.initIntString("3888380713, 51879, 20295, 140, 139, 190, 89, 179, 48, 212, 197"), .pid = 3 };
pub const PKEY_Devices_Aep_Category = PROPERTYKEY { .fmtid = Guid.initIntString("2740557483, 4559, 18741, 139, 97, 166, 118, 16, 129, 236, 223"), .pid = 17 };
pub const PKEY_Devices_Aep_ContainerId = PROPERTYKEY { .fmtid = Guid.initIntString("3888380713, 51879, 20295, 140, 139, 190, 89, 179, 48, 212, 197"), .pid = 2 };
pub const PKEY_Devices_Aep_DeviceAddress = PROPERTYKEY { .fmtid = Guid.initIntString("2740557483, 4559, 18741, 139, 97, 166, 118, 16, 129, 236, 223"), .pid = 12 };
pub const PKEY_Devices_Aep_IsConnected = PROPERTYKEY { .fmtid = Guid.initIntString("2740557483, 4559, 18741, 139, 97, 166, 118, 16, 129, 236, 223"), .pid = 7 };
pub const PKEY_Devices_Aep_IsPaired = PROPERTYKEY { .fmtid = Guid.initIntString("2740557483, 4559, 18741, 139, 97, 166, 118, 16, 129, 236, 223"), .pid = 16 };
pub const PKEY_Devices_Aep_IsPresent = PROPERTYKEY { .fmtid = Guid.initIntString("2740557483, 4559, 18741, 139, 97, 166, 118, 16, 129, 236, 223"), .pid = 9 };
pub const PKEY_Devices_Aep_Manufacturer = PROPERTYKEY { .fmtid = Guid.initIntString("2740557483, 4559, 18741, 139, 97, 166, 118, 16, 129, 236, 223"), .pid = 5 };
pub const PKEY_Devices_Aep_ModelId = PROPERTYKEY { .fmtid = Guid.initIntString("2740557483, 4559, 18741, 139, 97, 166, 118, 16, 129, 236, 223"), .pid = 4 };
pub const PKEY_Devices_Aep_ModelName = PROPERTYKEY { .fmtid = Guid.initIntString("2740557483, 4559, 18741, 139, 97, 166, 118, 16, 129, 236, 223"), .pid = 3 };
pub const PKEY_Devices_Aep_PointOfService_ConnectionTypes = PROPERTYKEY { .fmtid = Guid.initIntString("3569312179, 17454, 19162, 136, 45, 250, 123, 112, 200, 50, 217"), .pid = 6 };
pub const PKEY_Devices_Aep_ProtocolId = PROPERTYKEY { .fmtid = Guid.initIntString("992796678, 24161, 20446, 186, 184, 155, 138, 172, 155, 38, 223"), .pid = 5 };
pub const PKEY_Devices_Aep_SignalStrength = PROPERTYKEY { .fmtid = Guid.initIntString("2740557483, 4559, 18741, 139, 97, 166, 118, 16, 129, 236, 223"), .pid = 6 };
pub const PKEY_Devices_AepContainer_CanPair = PROPERTYKEY { .fmtid = Guid.initIntString("196746974, 30054, 20295, 144, 236, 37, 252, 86, 124, 237, 42"), .pid = 3 };
pub const PKEY_Devices_AepContainer_Categories = PROPERTYKEY { .fmtid = Guid.initIntString("196746974, 30054, 20295, 144, 236, 37, 252, 86, 124, 237, 42"), .pid = 9 };
pub const PKEY_Devices_AepContainer_Children = PROPERTYKEY { .fmtid = Guid.initIntString("196746974, 30054, 20295, 144, 236, 37, 252, 86, 124, 237, 42"), .pid = 2 };
pub const PKEY_Devices_AepContainer_ContainerId = PROPERTYKEY { .fmtid = Guid.initIntString("196746974, 30054, 20295, 144, 236, 37, 252, 86, 124, 237, 42"), .pid = 12 };
pub const PKEY_Devices_AepContainer_DialProtocol_InstalledApplications = PROPERTYKEY { .fmtid = Guid.initIntString("1794465093, 14555, 17557, 172, 176, 212, 114, 138, 59, 131, 20"), .pid = 6 };
pub const PKEY_Devices_AepContainer_IsPaired = PROPERTYKEY { .fmtid = Guid.initIntString("196746974, 30054, 20295, 144, 236, 37, 252, 86, 124, 237, 42"), .pid = 4 };
pub const PKEY_Devices_AepContainer_IsPresent = PROPERTYKEY { .fmtid = Guid.initIntString("196746974, 30054, 20295, 144, 236, 37, 252, 86, 124, 237, 42"), .pid = 11 };
pub const PKEY_Devices_AepContainer_Manufacturer = PROPERTYKEY { .fmtid = Guid.initIntString("196746974, 30054, 20295, 144, 236, 37, 252, 86, 124, 237, 42"), .pid = 6 };
pub const PKEY_Devices_AepContainer_ModelIds = PROPERTYKEY { .fmtid = Guid.initIntString("196746974, 30054, 20295, 144, 236, 37, 252, 86, 124, 237, 42"), .pid = 8 };
pub const PKEY_Devices_AepContainer_ModelName = PROPERTYKEY { .fmtid = Guid.initIntString("196746974, 30054, 20295, 144, 236, 37, 252, 86, 124, 237, 42"), .pid = 7 };
pub const PKEY_Devices_AepContainer_ProtocolIds = PROPERTYKEY { .fmtid = Guid.initIntString("196746974, 30054, 20295, 144, 236, 37, 252, 86, 124, 237, 42"), .pid = 13 };
pub const PKEY_Devices_AepContainer_SupportedUriSchemes = PROPERTYKEY { .fmtid = Guid.initIntString("1794465093, 14555, 17557, 172, 176, 212, 114, 138, 59, 131, 20"), .pid = 5 };
pub const PKEY_Devices_AepContainer_SupportsAudio = PROPERTYKEY { .fmtid = Guid.initIntString("1794465093, 14555, 17557, 172, 176, 212, 114, 138, 59, 131, 20"), .pid = 2 };
pub const PKEY_Devices_AepContainer_SupportsCapturing = PROPERTYKEY { .fmtid = Guid.initIntString("1794465093, 14555, 17557, 172, 176, 212, 114, 138, 59, 131, 20"), .pid = 11 };
pub const PKEY_Devices_AepContainer_SupportsImages = PROPERTYKEY { .fmtid = Guid.initIntString("1794465093, 14555, 17557, 172, 176, 212, 114, 138, 59, 131, 20"), .pid = 4 };
pub const PKEY_Devices_AepContainer_SupportsInformation = PROPERTYKEY { .fmtid = Guid.initIntString("1794465093, 14555, 17557, 172, 176, 212, 114, 138, 59, 131, 20"), .pid = 14 };
pub const PKEY_Devices_AepContainer_SupportsLimitedDiscovery = PROPERTYKEY { .fmtid = Guid.initIntString("1794465093, 14555, 17557, 172, 176, 212, 114, 138, 59, 131, 20"), .pid = 7 };
pub const PKEY_Devices_AepContainer_SupportsNetworking = PROPERTYKEY { .fmtid = Guid.initIntString("1794465093, 14555, 17557, 172, 176, 212, 114, 138, 59, 131, 20"), .pid = 9 };
pub const PKEY_Devices_AepContainer_SupportsObjectTransfer = PROPERTYKEY { .fmtid = Guid.initIntString("1794465093, 14555, 17557, 172, 176, 212, 114, 138, 59, 131, 20"), .pid = 12 };
pub const PKEY_Devices_AepContainer_SupportsPositioning = PROPERTYKEY { .fmtid = Guid.initIntString("1794465093, 14555, 17557, 172, 176, 212, 114, 138, 59, 131, 20"), .pid = 8 };
pub const PKEY_Devices_AepContainer_SupportsRendering = PROPERTYKEY { .fmtid = Guid.initIntString("1794465093, 14555, 17557, 172, 176, 212, 114, 138, 59, 131, 20"), .pid = 10 };
pub const PKEY_Devices_AepContainer_SupportsTelephony = PROPERTYKEY { .fmtid = Guid.initIntString("1794465093, 14555, 17557, 172, 176, 212, 114, 138, 59, 131, 20"), .pid = 13 };
pub const PKEY_Devices_AepContainer_SupportsVideo = PROPERTYKEY { .fmtid = Guid.initIntString("1794465093, 14555, 17557, 172, 176, 212, 114, 138, 59, 131, 20"), .pid = 3 };
pub const PKEY_Devices_AepService_AepId = PROPERTYKEY { .fmtid = Guid.initIntString("3384885673, 6988, 20247, 169, 209, 242, 152, 83, 140, 173, 184"), .pid = 6 };
pub const PKEY_Devices_AepService_Bluetooth_CacheMode = PROPERTYKEY { .fmtid = Guid.initIntString("2537828638, 31057, 19246, 182, 240, 236, 178, 147, 202, 193, 25"), .pid = 5 };
pub const BLUETOOTH_CACHE_MODE_CACHED = @as(u32, 0);
pub const BLUETOOTH_CACHED_MODE_UNCACHED = @as(u32, 1);
pub const PKEY_Devices_AepService_Bluetooth_ServiceGuid = PROPERTYKEY { .fmtid = Guid.initIntString("2744756935, 49765, 18254, 176, 115, 255, 206, 87, 114, 23, 22"), .pid = 2 };
pub const PKEY_Devices_AepService_Bluetooth_TargetDevice = PROPERTYKEY { .fmtid = Guid.initIntString("2537828638, 31057, 19246, 182, 240, 236, 178, 147, 202, 193, 25"), .pid = 6 };
pub const PKEY_Devices_AepService_ContainerId = PROPERTYKEY { .fmtid = Guid.initIntString("1903314774, 15988, 17458, 155, 89, 231, 178, 246, 104, 165, 147"), .pid = 4 };
pub const PKEY_Devices_AepService_FriendlyName = PROPERTYKEY { .fmtid = Guid.initIntString("1903314774, 15988, 17458, 155, 89, 231, 178, 246, 104, 165, 147"), .pid = 2 };
pub const PKEY_Devices_AepService_IoT_ServiceInterfaces = PROPERTYKEY { .fmtid = Guid.initIntString("2044284546, 19833, 17834, 130, 26, 116, 133, 139, 78, 76, 166"), .pid = 2 };
pub const PKEY_Devices_AepService_ParentAepIsPaired = PROPERTYKEY { .fmtid = Guid.initIntString("3384885673, 6988, 20247, 169, 209, 242, 152, 83, 140, 173, 184"), .pid = 7 };
pub const PKEY_Devices_AepService_ProtocolId = PROPERTYKEY { .fmtid = Guid.initIntString("3384885673, 6988, 20247, 169, 209, 242, 152, 83, 140, 173, 184"), .pid = 5 };
pub const PKEY_Devices_AepService_ServiceClassId = PROPERTYKEY { .fmtid = Guid.initIntString("1903314774, 15988, 17458, 155, 89, 231, 178, 246, 104, 165, 147"), .pid = 3 };
pub const PKEY_Devices_AepService_ServiceId = PROPERTYKEY { .fmtid = Guid.initIntString("3384885673, 6988, 20247, 169, 209, 242, 152, 83, 140, 173, 184"), .pid = 2 };
pub const PKEY_Devices_AppPackageFamilyName = PROPERTYKEY { .fmtid = Guid.initIntString("1361274243, 3146, 20456, 184, 31, 22, 106, 236, 19, 245, 16"), .pid = 100 };
pub const PKEY_Devices_AudioDevice_Microphone_IsFarField = PROPERTYKEY { .fmtid = Guid.initIntString("2302915443, 14476, 17301, 181, 87, 188, 109, 186, 255, 175, 219"), .pid = 6 };
pub const PKEY_Devices_AudioDevice_Microphone_SensitivityInDbfs = PROPERTYKEY { .fmtid = Guid.initIntString("2302915443, 14476, 17301, 181, 87, 188, 109, 186, 255, 175, 219"), .pid = 3 };
pub const PKEY_Devices_AudioDevice_Microphone_SensitivityInDbfs2 = PROPERTYKEY { .fmtid = Guid.initIntString("2302915443, 14476, 17301, 181, 87, 188, 109, 186, 255, 175, 219"), .pid = 5 };
pub const PKEY_Devices_AudioDevice_Microphone_SignalToNoiseRatioInDb = PROPERTYKEY { .fmtid = Guid.initIntString("2302915443, 14476, 17301, 181, 87, 188, 109, 186, 255, 175, 219"), .pid = 4 };
pub const PKEY_Devices_AudioDevice_RawProcessingSupported = PROPERTYKEY { .fmtid = Guid.initIntString("2302915443, 14476, 17301, 181, 87, 188, 109, 186, 255, 175, 219"), .pid = 2 };
pub const PKEY_Devices_AudioDevice_SpeechProcessingSupported = PROPERTYKEY { .fmtid = Guid.initIntString("4213041252, 57453, 18420, 130, 166, 138, 10, 239, 68, 73, 60"), .pid = 2 };
pub const PKEY_Devices_BatteryLife = PROPERTYKEY { .fmtid = Guid.initIntString("1238179702, 22054, 19223, 164, 232, 24, 180, 170, 26, 34, 19"), .pid = 10 };
pub const PKEY_Devices_BatteryPlusCharging = PROPERTYKEY { .fmtid = Guid.initIntString("1238179702, 22054, 19223, 164, 232, 24, 180, 170, 26, 34, 19"), .pid = 22 };
pub const PKEY_Devices_BatteryPlusChargingText = PROPERTYKEY { .fmtid = Guid.initIntString("1238179702, 22054, 19223, 164, 232, 24, 180, 170, 26, 34, 19"), .pid = 23 };
pub const PKEY_Devices_Category = PROPERTYKEY { .fmtid = Guid.initIntString("2026065864, 4170, 19146, 158, 164, 82, 77, 82, 153, 110, 87"), .pid = 91 };
pub const PKEY_Devices_CategoryGroup = PROPERTYKEY { .fmtid = Guid.initIntString("2026065864, 4170, 19146, 158, 164, 82, 77, 82, 153, 110, 87"), .pid = 94 };
pub const PKEY_Devices_CategoryIds = PROPERTYKEY { .fmtid = Guid.initIntString("2026065864, 4170, 19146, 158, 164, 82, 77, 82, 153, 110, 87"), .pid = 90 };
pub const PKEY_Devices_CategoryPlural = PROPERTYKEY { .fmtid = Guid.initIntString("2026065864, 4170, 19146, 158, 164, 82, 77, 82, 153, 110, 87"), .pid = 92 };
pub const PKEY_Devices_ChallengeAep = PROPERTYKEY { .fmtid = Guid.initIntString("125055326, 46868, 18668, 141, 232, 129, 37, 192, 119, 172, 17"), .pid = 2 };
pub const PKEY_Devices_ChargingState = PROPERTYKEY { .fmtid = Guid.initIntString("1238179702, 22054, 19223, 164, 232, 24, 180, 170, 26, 34, 19"), .pid = 11 };
pub const PKEY_Devices_Children = PROPERTYKEY { .fmtid = Guid.initIntString("1128310469, 37882, 18182, 151, 44, 123, 100, 128, 8, 165, 167"), .pid = 9 };
pub const PKEY_Devices_ClassGuid = PROPERTYKEY { .fmtid = Guid.initIntString("2757502286, 57116, 20221, 128, 32, 103, 209, 70, 168, 80, 224"), .pid = 10 };
pub const PKEY_Devices_CompatibleIds = PROPERTYKEY { .fmtid = Guid.initIntString("2757502286, 57116, 20221, 128, 32, 103, 209, 70, 168, 80, 224"), .pid = 4 };
pub const PKEY_Devices_Connected = PROPERTYKEY { .fmtid = Guid.initIntString("2026065864, 4170, 19146, 158, 164, 82, 77, 82, 153, 110, 87"), .pid = 55 };
pub const PKEY_Devices_ContainerId = PROPERTYKEY { .fmtid = Guid.initIntString("2357121542, 16266, 18471, 179, 171, 174, 158, 31, 174, 252, 108"), .pid = 2 };
pub const PKEY_Devices_DefaultTooltip = PROPERTYKEY { .fmtid = Guid.initIntString("2282713250, 24706, 18348, 138, 171, 167, 57, 209, 163, 0, 195"), .pid = 153 };
pub const PKEY_Devices_DeviceCapabilities = PROPERTYKEY { .fmtid = Guid.initIntString("2757502286, 57116, 20221, 128, 32, 103, 209, 70, 168, 80, 224"), .pid = 17 };
pub const PKEY_Devices_DeviceCharacteristics = PROPERTYKEY { .fmtid = Guid.initIntString("2757502286, 57116, 20221, 128, 32, 103, 209, 70, 168, 80, 224"), .pid = 29 };
pub const PKEY_Devices_DeviceDescription1 = PROPERTYKEY { .fmtid = Guid.initIntString("2026065864, 4170, 19146, 158, 164, 82, 77, 82, 153, 110, 87"), .pid = 81 };
pub const PKEY_Devices_DeviceDescription2 = PROPERTYKEY { .fmtid = Guid.initIntString("2026065864, 4170, 19146, 158, 164, 82, 77, 82, 153, 110, 87"), .pid = 82 };
pub const PKEY_Devices_DeviceHasProblem = PROPERTYKEY { .fmtid = Guid.initIntString("1410045054, 35648, 17852, 168, 162, 106, 11, 137, 76, 189, 162"), .pid = 6 };
pub const PKEY_Devices_DeviceInstanceId = PROPERTYKEY { .fmtid = Guid.initIntString("2026065864, 4170, 19146, 158, 164, 82, 77, 82, 153, 110, 87"), .pid = 256 };
pub const PKEY_Devices_DeviceManufacturer = PROPERTYKEY { .fmtid = Guid.initIntString("2757502286, 57116, 20221, 128, 32, 103, 209, 70, 168, 80, 224"), .pid = 13 };
pub const PKEY_Devices_DevObjectType = PROPERTYKEY { .fmtid = Guid.initIntString("325533506, 41942, 18934, 180, 218, 174, 70, 224, 197, 35, 124"), .pid = 2 };
pub const PKEY_Devices_DialProtocol_InstalledApplications = PROPERTYKEY { .fmtid = Guid.initIntString("1749404786, 7025, 18627, 175, 134, 176, 145, 113, 161, 155, 20"), .pid = 3 };
pub const PKEY_Devices_DiscoveryMethod = PROPERTYKEY { .fmtid = Guid.initIntString("2026065864, 4170, 19146, 158, 164, 82, 77, 82, 153, 110, 87"), .pid = 52 };
pub const PKEY_Devices_Dnssd_Domain = PROPERTYKEY { .fmtid = Guid.initIntString("3212427435, 47988, 19694, 176, 112, 71, 11, 90, 226, 2, 234"), .pid = 3 };
pub const PKEY_Devices_Dnssd_FullName = PROPERTYKEY { .fmtid = Guid.initIntString("3212427435, 47988, 19694, 176, 112, 71, 11, 90, 226, 2, 234"), .pid = 5 };
pub const PKEY_Devices_Dnssd_HostName = PROPERTYKEY { .fmtid = Guid.initIntString("3212427435, 47988, 19694, 176, 112, 71, 11, 90, 226, 2, 234"), .pid = 7 };
pub const PKEY_Devices_Dnssd_InstanceName = PROPERTYKEY { .fmtid = Guid.initIntString("3212427435, 47988, 19694, 176, 112, 71, 11, 90, 226, 2, 234"), .pid = 4 };
pub const PKEY_Devices_Dnssd_NetworkAdapterId = PROPERTYKEY { .fmtid = Guid.initIntString("3212427435, 47988, 19694, 176, 112, 71, 11, 90, 226, 2, 234"), .pid = 11 };
pub const PKEY_Devices_Dnssd_PortNumber = PROPERTYKEY { .fmtid = Guid.initIntString("3212427435, 47988, 19694, 176, 112, 71, 11, 90, 226, 2, 234"), .pid = 12 };
pub const PKEY_Devices_Dnssd_Priority = PROPERTYKEY { .fmtid = Guid.initIntString("3212427435, 47988, 19694, 176, 112, 71, 11, 90, 226, 2, 234"), .pid = 9 };
pub const PKEY_Devices_Dnssd_ServiceName = PROPERTYKEY { .fmtid = Guid.initIntString("3212427435, 47988, 19694, 176, 112, 71, 11, 90, 226, 2, 234"), .pid = 2 };
pub const PKEY_Devices_Dnssd_TextAttributes = PROPERTYKEY { .fmtid = Guid.initIntString("3212427435, 47988, 19694, 176, 112, 71, 11, 90, 226, 2, 234"), .pid = 6 };
pub const PKEY_Devices_Dnssd_Ttl = PROPERTYKEY { .fmtid = Guid.initIntString("3212427435, 47988, 19694, 176, 112, 71, 11, 90, 226, 2, 234"), .pid = 10 };
pub const PKEY_Devices_Dnssd_Weight = PROPERTYKEY { .fmtid = Guid.initIntString("3212427435, 47988, 19694, 176, 112, 71, 11, 90, 226, 2, 234"), .pid = 8 };
pub const PKEY_Devices_FriendlyName = PROPERTYKEY { .fmtid = Guid.initIntString("1701460915, 60608, 17405, 132, 119, 74, 224, 64, 74, 150, 205"), .pid = 12288 };
pub const PKEY_Devices_FunctionPaths = PROPERTYKEY { .fmtid = Guid.initIntString("3498955968, 15006, 17966, 130, 144, 123, 99, 107, 37, 118, 185"), .pid = 3 };
pub const PKEY_Devices_GlyphIcon = PROPERTYKEY { .fmtid = Guid.initIntString("1361274243, 3146, 20456, 184, 31, 22, 106, 236, 19, 245, 16"), .pid = 123 };
pub const PKEY_Devices_HardwareIds = PROPERTYKEY { .fmtid = Guid.initIntString("2757502286, 57116, 20221, 128, 32, 103, 209, 70, 168, 80, 224"), .pid = 3 };
pub const PKEY_Devices_Icon = PROPERTYKEY { .fmtid = Guid.initIntString("2026065864, 4170, 19146, 158, 164, 82, 77, 82, 153, 110, 87"), .pid = 57 };
pub const PKEY_Devices_InLocalMachineContainer = PROPERTYKEY { .fmtid = Guid.initIntString("2357121542, 16266, 18471, 179, 171, 174, 158, 31, 174, 252, 108"), .pid = 4 };
pub const PKEY_Devices_InterfaceClassGuid = PROPERTYKEY { .fmtid = Guid.initIntString("40784238, 47124, 16715, 131, 205, 133, 109, 111, 239, 72, 34"), .pid = 4 };
pub const PKEY_Devices_InterfaceEnabled = PROPERTYKEY { .fmtid = Guid.initIntString("40784238, 47124, 16715, 131, 205, 133, 109, 111, 239, 72, 34"), .pid = 3 };
pub const PKEY_Devices_InterfacePaths = PROPERTYKEY { .fmtid = Guid.initIntString("3498955968, 15006, 17966, 130, 144, 123, 99, 107, 37, 118, 185"), .pid = 2 };
pub const PKEY_Devices_IpAddress = PROPERTYKEY { .fmtid = Guid.initIntString("1701460915, 60608, 17405, 132, 119, 74, 224, 64, 74, 150, 205"), .pid = 12297 };
pub const PKEY_Devices_IsDefault = PROPERTYKEY { .fmtid = Guid.initIntString("2026065864, 4170, 19146, 158, 164, 82, 77, 82, 153, 110, 87"), .pid = 86 };
pub const PKEY_Devices_IsNetworkConnected = PROPERTYKEY { .fmtid = Guid.initIntString("2026065864, 4170, 19146, 158, 164, 82, 77, 82, 153, 110, 87"), .pid = 85 };
pub const PKEY_Devices_IsShared = PROPERTYKEY { .fmtid = Guid.initIntString("2026065864, 4170, 19146, 158, 164, 82, 77, 82, 153, 110, 87"), .pid = 84 };
pub const PKEY_Devices_IsSoftwareInstalling = PROPERTYKEY { .fmtid = Guid.initIntString("2212127526, 38822, 16520, 148, 83, 161, 146, 63, 87, 59, 41"), .pid = 9 };
pub const PKEY_Devices_LaunchDeviceStageFromExplorer = PROPERTYKEY { .fmtid = Guid.initIntString("2026065864, 4170, 19146, 158, 164, 82, 77, 82, 153, 110, 87"), .pid = 77 };
pub const PKEY_Devices_LocalMachine = PROPERTYKEY { .fmtid = Guid.initIntString("2026065864, 4170, 19146, 158, 164, 82, 77, 82, 153, 110, 87"), .pid = 70 };
pub const PKEY_Devices_LocationPaths = PROPERTYKEY { .fmtid = Guid.initIntString("2757502286, 57116, 20221, 128, 32, 103, 209, 70, 168, 80, 224"), .pid = 37 };
pub const PKEY_Devices_Manufacturer = PROPERTYKEY { .fmtid = Guid.initIntString("1701460915, 60608, 17405, 132, 119, 74, 224, 64, 74, 150, 205"), .pid = 8192 };
pub const PKEY_Devices_MetadataPath = PROPERTYKEY { .fmtid = Guid.initIntString("2026065864, 4170, 19146, 158, 164, 82, 77, 82, 153, 110, 87"), .pid = 71 };
pub const PKEY_Devices_MicrophoneArray_Geometry = PROPERTYKEY { .fmtid = Guid.initIntString("2709692066, 10219, 17822, 147, 93, 178, 250, 215, 176, 119, 98"), .pid = 2 };
pub const PKEY_Devices_MissedCalls = PROPERTYKEY { .fmtid = Guid.initIntString("1238179702, 22054, 19223, 164, 232, 24, 180, 170, 26, 34, 19"), .pid = 5 };
pub const PKEY_Devices_ModelId = PROPERTYKEY { .fmtid = Guid.initIntString("2161647270, 29811, 19212, 130, 22, 239, 193, 26, 44, 76, 139"), .pid = 2 };
pub const PKEY_Devices_ModelName = PROPERTYKEY { .fmtid = Guid.initIntString("1701460915, 60608, 17405, 132, 119, 74, 224, 64, 74, 150, 205"), .pid = 8194 };
pub const PKEY_Devices_ModelNumber = PROPERTYKEY { .fmtid = Guid.initIntString("1701460915, 60608, 17405, 132, 119, 74, 224, 64, 74, 150, 205"), .pid = 8195 };
pub const PKEY_Devices_NetworkedTooltip = PROPERTYKEY { .fmtid = Guid.initIntString("2282713250, 24706, 18348, 138, 171, 167, 57, 209, 163, 0, 195"), .pid = 152 };
pub const PKEY_Devices_NetworkName = PROPERTYKEY { .fmtid = Guid.initIntString("1238179702, 22054, 19223, 164, 232, 24, 180, 170, 26, 34, 19"), .pid = 7 };
pub const PKEY_Devices_NetworkType = PROPERTYKEY { .fmtid = Guid.initIntString("1238179702, 22054, 19223, 164, 232, 24, 180, 170, 26, 34, 19"), .pid = 8 };
pub const PKEY_Devices_NewPictures = PROPERTYKEY { .fmtid = Guid.initIntString("1238179702, 22054, 19223, 164, 232, 24, 180, 170, 26, 34, 19"), .pid = 4 };
pub const PKEY_Devices_Notification = PROPERTYKEY { .fmtid = Guid.initIntString("108022540, 59440, 19585, 145, 120, 145, 228, 233, 90, 128, 160"), .pid = 3 };
pub const PKEY_Devices_Notifications_LowBattery = PROPERTYKEY { .fmtid = Guid.initIntString("3300949803, 34084, 20070, 174, 58, 166, 35, 95, 16, 59, 235"), .pid = 2 };
pub const PKEY_Devices_Notifications_MissedCall = PROPERTYKEY { .fmtid = Guid.initIntString("1712648008, 20222, 17444, 158, 218, 199, 159, 64, 78, 223, 62"), .pid = 2 };
pub const PKEY_Devices_Notifications_NewMessage = PROPERTYKEY { .fmtid = Guid.initIntString("736699914, 8210, 18242, 165, 85, 244, 27, 99, 139, 125, 203"), .pid = 2 };
pub const PKEY_Devices_Notifications_NewVoicemail = PROPERTYKEY { .fmtid = Guid.initIntString("1498846550, 2568, 16914, 149, 185, 250, 226, 173, 100, 19, 219"), .pid = 2 };
pub const PKEY_Devices_Notifications_StorageFull = PROPERTYKEY { .fmtid = Guid.initIntString("2699038433, 61639, 19777, 184, 231, 38, 167, 189, 141, 56, 176"), .pid = 2 };
pub const PKEY_Devices_Notifications_StorageFullLinkText = PROPERTYKEY { .fmtid = Guid.initIntString("2699038433, 61639, 19777, 184, 231, 38, 167, 189, 141, 56, 176"), .pid = 3 };
pub const PKEY_Devices_NotificationStore = PROPERTYKEY { .fmtid = Guid.initIntString("108022540, 59440, 19585, 145, 120, 145, 228, 233, 90, 128, 160"), .pid = 2 };
pub const PKEY_Devices_NotWorkingProperly = PROPERTYKEY { .fmtid = Guid.initIntString("2026065864, 4170, 19146, 158, 164, 82, 77, 82, 153, 110, 87"), .pid = 83 };
pub const PKEY_Devices_Paired = PROPERTYKEY { .fmtid = Guid.initIntString("2026065864, 4170, 19146, 158, 164, 82, 77, 82, 153, 110, 87"), .pid = 56 };
pub const PKEY_Devices_Panel_PanelGroup = PROPERTYKEY { .fmtid = Guid.initIntString("2377948294, 38825, 19455, 155, 198, 191, 233, 93, 62, 109, 173"), .pid = 3 };
pub const PKEY_Devices_Panel_PanelId = PROPERTYKEY { .fmtid = Guid.initIntString("2377948294, 38825, 19455, 155, 198, 191, 233, 93, 62, 109, 173"), .pid = 2 };
pub const PKEY_Devices_Parent = PROPERTYKEY { .fmtid = Guid.initIntString("1128310469, 37882, 18182, 151, 44, 123, 100, 128, 8, 165, 167"), .pid = 8 };
pub const PKEY_Devices_PhoneLineTransportDevice_Connected = PROPERTYKEY { .fmtid = Guid.initIntString("2932813800, 7424, 20462, 138, 109, 167, 13, 113, 155, 119, 43"), .pid = 2 };
pub const PKEY_Devices_PhysicalDeviceLocation = PROPERTYKEY { .fmtid = Guid.initIntString("1410045054, 35648, 17852, 168, 162, 106, 11, 137, 76, 189, 162"), .pid = 9 };
pub const PKEY_Devices_PlaybackPositionPercent = PROPERTYKEY { .fmtid = Guid.initIntString("909368921, 26661, 17281, 164, 155, 159, 107, 161, 58, 20, 113"), .pid = 5 };
pub const PKEY_Devices_PlaybackState = PROPERTYKEY { .fmtid = Guid.initIntString("909368921, 26661, 17281, 164, 155, 159, 107, 161, 58, 20, 113"), .pid = 2 };
pub const PLAYBACKSTATE_UNKNOWN = @as(u32, 0);
pub const PLAYBACKSTATE_STOPPED = @as(u32, 1);
pub const PLAYBACKSTATE_PLAYING = @as(u32, 2);
pub const PLAYBACKSTATE_TRANSITIONING = @as(u32, 3);
pub const PLAYBACKSTATE_PAUSED = @as(u32, 4);
pub const PLAYBACKSTATE_RECORDINGPAUSED = @as(u32, 5);
pub const PLAYBACKSTATE_RECORDING = @as(u32, 6);
pub const PLAYBACKSTATE_NOMEDIA = @as(u32, 7);
pub const PKEY_Devices_PlaybackTitle = PROPERTYKEY { .fmtid = Guid.initIntString("909368921, 26661, 17281, 164, 155, 159, 107, 161, 58, 20, 113"), .pid = 3 };
pub const PKEY_Devices_Present = PROPERTYKEY { .fmtid = Guid.initIntString("1410045054, 35648, 17852, 168, 162, 106, 11, 137, 76, 189, 162"), .pid = 5 };
pub const PKEY_Devices_PresentationUrl = PROPERTYKEY { .fmtid = Guid.initIntString("1701460915, 60608, 17405, 132, 119, 74, 224, 64, 74, 150, 205"), .pid = 8198 };
pub const PKEY_Devices_PrimaryCategory = PROPERTYKEY { .fmtid = Guid.initIntString("3498955968, 15006, 17966, 130, 144, 123, 99, 107, 37, 118, 185"), .pid = 10 };
pub const PKEY_Devices_RemainingDuration = PROPERTYKEY { .fmtid = Guid.initIntString("909368921, 26661, 17281, 164, 155, 159, 107, 161, 58, 20, 113"), .pid = 4 };
pub const PKEY_Devices_RestrictedInterface = PROPERTYKEY { .fmtid = Guid.initIntString("40784238, 47124, 16715, 131, 205, 133, 109, 111, 239, 72, 34"), .pid = 6 };
pub const PKEY_Devices_Roaming = PROPERTYKEY { .fmtid = Guid.initIntString("1238179702, 22054, 19223, 164, 232, 24, 180, 170, 26, 34, 19"), .pid = 9 };
pub const PKEY_Devices_SafeRemovalRequired = PROPERTYKEY { .fmtid = Guid.initIntString("2950264384, 34467, 16912, 182, 124, 40, 156, 65, 170, 190, 85"), .pid = 2 };
pub const PKEY_Devices_SchematicName = PROPERTYKEY { .fmtid = Guid.initIntString("40784238, 47124, 16715, 131, 205, 133, 109, 111, 239, 72, 34"), .pid = 9 };
pub const PKEY_Devices_ServiceAddress = PROPERTYKEY { .fmtid = Guid.initIntString("1701460915, 60608, 17405, 132, 119, 74, 224, 64, 74, 150, 205"), .pid = 16384 };
pub const PKEY_Devices_ServiceId = PROPERTYKEY { .fmtid = Guid.initIntString("1701460915, 60608, 17405, 132, 119, 74, 224, 64, 74, 150, 205"), .pid = 16385 };
pub const PKEY_Devices_SharedTooltip = PROPERTYKEY { .fmtid = Guid.initIntString("2282713250, 24706, 18348, 138, 171, 167, 57, 209, 163, 0, 195"), .pid = 151 };
pub const PKEY_Devices_SignalStrength = PROPERTYKEY { .fmtid = Guid.initIntString("1238179702, 22054, 19223, 164, 232, 24, 180, 170, 26, 34, 19"), .pid = 2 };
pub const PKEY_Devices_SmartCards_ReaderKind = PROPERTYKEY { .fmtid = Guid.initIntString("3602233475, 6333, 19277, 178, 236, 158, 56, 175, 254, 218, 130"), .pid = 2 };
pub const PKEY_Devices_Status = PROPERTYKEY { .fmtid = Guid.initIntString("3498955968, 15006, 17966, 130, 144, 123, 99, 107, 37, 118, 185"), .pid = 259 };
pub const PKEY_Devices_Status1 = PROPERTYKEY { .fmtid = Guid.initIntString("3498955968, 15006, 17966, 130, 144, 123, 99, 107, 37, 118, 185"), .pid = 257 };
pub const PKEY_Devices_Status2 = PROPERTYKEY { .fmtid = Guid.initIntString("3498955968, 15006, 17966, 130, 144, 123, 99, 107, 37, 118, 185"), .pid = 258 };
pub const PKEY_Devices_StorageCapacity = PROPERTYKEY { .fmtid = Guid.initIntString("1238179702, 22054, 19223, 164, 232, 24, 180, 170, 26, 34, 19"), .pid = 12 };
pub const PKEY_Devices_StorageFreeSpace = PROPERTYKEY { .fmtid = Guid.initIntString("1238179702, 22054, 19223, 164, 232, 24, 180, 170, 26, 34, 19"), .pid = 13 };
pub const PKEY_Devices_StorageFreeSpacePercent = PROPERTYKEY { .fmtid = Guid.initIntString("1238179702, 22054, 19223, 164, 232, 24, 180, 170, 26, 34, 19"), .pid = 14 };
pub const PKEY_Devices_TextMessages = PROPERTYKEY { .fmtid = Guid.initIntString("1238179702, 22054, 19223, 164, 232, 24, 180, 170, 26, 34, 19"), .pid = 3 };
pub const PKEY_Devices_Voicemail = PROPERTYKEY { .fmtid = Guid.initIntString("1238179702, 22054, 19223, 164, 232, 24, 180, 170, 26, 34, 19"), .pid = 6 };
pub const PKEY_Devices_WiaDeviceType = PROPERTYKEY { .fmtid = Guid.initIntString("1809653702, 33039, 4560, 190, 199, 8, 0, 43, 226, 9, 47"), .pid = 2 };
pub const PKEY_Devices_WiFi_InterfaceGuid = PROPERTYKEY { .fmtid = Guid.initIntString("4010895339, 52220, 17217, 165, 104, 167, 201, 26, 104, 152, 44"), .pid = 2 };
pub const PKEY_Devices_WiFiDirect_DeviceAddress = PROPERTYKEY { .fmtid = Guid.initIntString("352752477, 58343, 17679, 134, 55, 130, 35, 62, 190, 95, 110"), .pid = 13 };
pub const PKEY_Devices_WiFiDirect_GroupId = PROPERTYKEY { .fmtid = Guid.initIntString("352752477, 58343, 17679, 134, 55, 130, 35, 62, 190, 95, 110"), .pid = 4 };
pub const PKEY_Devices_WiFiDirect_InformationElements = PROPERTYKEY { .fmtid = Guid.initIntString("352752477, 58343, 17679, 134, 55, 130, 35, 62, 190, 95, 110"), .pid = 12 };
pub const PKEY_Devices_WiFiDirect_InterfaceAddress = PROPERTYKEY { .fmtid = Guid.initIntString("352752477, 58343, 17679, 134, 55, 130, 35, 62, 190, 95, 110"), .pid = 2 };
pub const PKEY_Devices_WiFiDirect_InterfaceGuid = PROPERTYKEY { .fmtid = Guid.initIntString("352752477, 58343, 17679, 134, 55, 130, 35, 62, 190, 95, 110"), .pid = 3 };
pub const PKEY_Devices_WiFiDirect_IsConnected = PROPERTYKEY { .fmtid = Guid.initIntString("352752477, 58343, 17679, 134, 55, 130, 35, 62, 190, 95, 110"), .pid = 5 };
pub const PKEY_Devices_WiFiDirect_IsLegacyDevice = PROPERTYKEY { .fmtid = Guid.initIntString("352752477, 58343, 17679, 134, 55, 130, 35, 62, 190, 95, 110"), .pid = 7 };
pub const PKEY_Devices_WiFiDirect_IsMiracastLcpSupported = PROPERTYKEY { .fmtid = Guid.initIntString("352752477, 58343, 17679, 134, 55, 130, 35, 62, 190, 95, 110"), .pid = 9 };
pub const PKEY_Devices_WiFiDirect_IsVisible = PROPERTYKEY { .fmtid = Guid.initIntString("352752477, 58343, 17679, 134, 55, 130, 35, 62, 190, 95, 110"), .pid = 6 };
pub const PKEY_Devices_WiFiDirect_MiracastVersion = PROPERTYKEY { .fmtid = Guid.initIntString("352752477, 58343, 17679, 134, 55, 130, 35, 62, 190, 95, 110"), .pid = 8 };
pub const PKEY_Devices_WiFiDirect_Services = PROPERTYKEY { .fmtid = Guid.initIntString("352752477, 58343, 17679, 134, 55, 130, 35, 62, 190, 95, 110"), .pid = 10 };
pub const PKEY_Devices_WiFiDirect_SupportedChannelList = PROPERTYKEY { .fmtid = Guid.initIntString("352752477, 58343, 17679, 134, 55, 130, 35, 62, 190, 95, 110"), .pid = 11 };
pub const PKEY_Devices_WiFiDirectServices_AdvertisementId = PROPERTYKEY { .fmtid = Guid.initIntString("833845059, 31838, 16389, 147, 230, 233, 83, 249, 43, 130, 233"), .pid = 5 };
pub const PKEY_Devices_WiFiDirectServices_RequestServiceInformation = PROPERTYKEY { .fmtid = Guid.initIntString("833845059, 31838, 16389, 147, 230, 233, 83, 249, 43, 130, 233"), .pid = 7 };
pub const PKEY_Devices_WiFiDirectServices_ServiceAddress = PROPERTYKEY { .fmtid = Guid.initIntString("833845059, 31838, 16389, 147, 230, 233, 83, 249, 43, 130, 233"), .pid = 2 };
pub const PKEY_Devices_WiFiDirectServices_ServiceConfigMethods = PROPERTYKEY { .fmtid = Guid.initIntString("833845059, 31838, 16389, 147, 230, 233, 83, 249, 43, 130, 233"), .pid = 6 };
pub const PKEY_Devices_WiFiDirectServices_ServiceInformation = PROPERTYKEY { .fmtid = Guid.initIntString("833845059, 31838, 16389, 147, 230, 233, 83, 249, 43, 130, 233"), .pid = 4 };
pub const PKEY_Devices_WiFiDirectServices_ServiceName = PROPERTYKEY { .fmtid = Guid.initIntString("833845059, 31838, 16389, 147, 230, 233, 83, 249, 43, 130, 233"), .pid = 3 };
pub const PKEY_Devices_WinPhone8CameraFlags = PROPERTYKEY { .fmtid = Guid.initIntString("3082081820, 23140, 16775, 165, 46, 177, 83, 159, 53, 144, 153"), .pid = 2 };
pub const PKEY_Devices_Wwan_InterfaceGuid = PROPERTYKEY { .fmtid = Guid.initIntString("4279330795, 52220, 17217, 165, 104, 167, 201, 26, 104, 152, 44"), .pid = 2 };
pub const PKEY_Storage_Portable = PROPERTYKEY { .fmtid = Guid.initIntString("1293860584, 2051, 18292, 152, 66, 183, 125, 181, 2, 101, 233"), .pid = 2 };
pub const PKEY_Storage_RemovableMedia = PROPERTYKEY { .fmtid = Guid.initIntString("1293860584, 2051, 18292, 152, 66, 183, 125, 181, 2, 101, 233"), .pid = 3 };
pub const PKEY_Storage_SystemCritical = PROPERTYKEY { .fmtid = Guid.initIntString("1293860584, 2051, 18292, 152, 66, 183, 125, 181, 2, 101, 233"), .pid = 4 };
pub const PKEY_Document_ByteCount = PROPERTYKEY { .fmtid = Guid.initIntString("3587036418, 11932, 4123, 147, 151, 8, 0, 43, 44, 249, 174"), .pid = 4 };
pub const PKEY_Document_CharacterCount = PROPERTYKEY { .fmtid = Guid.initIntString("4070540768, 20473, 4200, 171, 145, 8, 0, 43, 39, 179, 217"), .pid = 16 };
pub const PKEY_Document_ClientID = PROPERTYKEY { .fmtid = Guid.initIntString("661486512, 23348, 20400, 170, 75, 21, 142, 209, 42, 24, 9"), .pid = 100 };
pub const PKEY_Document_Contributor = PROPERTYKEY { .fmtid = Guid.initIntString("4080275806, 55835, 17673, 155, 61, 17, 149, 4, 220, 122, 187"), .pid = 100 };
pub const PKEY_Document_DateCreated = PROPERTYKEY { .fmtid = Guid.initIntString("4070540768, 20473, 4200, 171, 145, 8, 0, 43, 39, 179, 217"), .pid = 12 };
pub const PKEY_Document_DatePrinted = PROPERTYKEY { .fmtid = Guid.initIntString("4070540768, 20473, 4200, 171, 145, 8, 0, 43, 39, 179, 217"), .pid = 11 };
pub const PKEY_Document_DateSaved = PROPERTYKEY { .fmtid = Guid.initIntString("4070540768, 20473, 4200, 171, 145, 8, 0, 43, 39, 179, 217"), .pid = 13 };
pub const PKEY_Document_Division = PROPERTYKEY { .fmtid = Guid.initIntString("503340774, 48935, 17035, 176, 28, 121, 103, 106, 205, 40, 112"), .pid = 100 };
pub const PKEY_Document_DocumentID = PROPERTYKEY { .fmtid = Guid.initIntString("3767010760, 58261, 16607, 128, 210, 84, 240, 214, 196, 49, 84"), .pid = 100 };
pub const PKEY_Document_HiddenSlideCount = PROPERTYKEY { .fmtid = Guid.initIntString("3587036418, 11932, 4123, 147, 151, 8, 0, 43, 44, 249, 174"), .pid = 9 };
pub const PKEY_Document_LastAuthor = PROPERTYKEY { .fmtid = Guid.initIntString("4070540768, 20473, 4200, 171, 145, 8, 0, 43, 39, 179, 217"), .pid = 8 };
pub const PKEY_Document_LineCount = PROPERTYKEY { .fmtid = Guid.initIntString("3587036418, 11932, 4123, 147, 151, 8, 0, 43, 44, 249, 174"), .pid = 5 };
pub const PKEY_Document_Manager = PROPERTYKEY { .fmtid = Guid.initIntString("3587036418, 11932, 4123, 147, 151, 8, 0, 43, 44, 249, 174"), .pid = 14 };
pub const PKEY_Document_MultimediaClipCount = PROPERTYKEY { .fmtid = Guid.initIntString("3587036418, 11932, 4123, 147, 151, 8, 0, 43, 44, 249, 174"), .pid = 10 };
pub const PKEY_Document_NoteCount = PROPERTYKEY { .fmtid = Guid.initIntString("3587036418, 11932, 4123, 147, 151, 8, 0, 43, 44, 249, 174"), .pid = 8 };
pub const PKEY_Document_PageCount = PROPERTYKEY { .fmtid = Guid.initIntString("4070540768, 20473, 4200, 171, 145, 8, 0, 43, 39, 179, 217"), .pid = 14 };
pub const PKEY_Document_ParagraphCount = PROPERTYKEY { .fmtid = Guid.initIntString("3587036418, 11932, 4123, 147, 151, 8, 0, 43, 44, 249, 174"), .pid = 6 };
pub const PKEY_Document_PresentationFormat = PROPERTYKEY { .fmtid = Guid.initIntString("3587036418, 11932, 4123, 147, 151, 8, 0, 43, 44, 249, 174"), .pid = 3 };
pub const PKEY_Document_RevisionNumber = PROPERTYKEY { .fmtid = Guid.initIntString("4070540768, 20473, 4200, 171, 145, 8, 0, 43, 39, 179, 217"), .pid = 9 };
pub const PKEY_Document_Security = PROPERTYKEY { .fmtid = Guid.initIntString("4070540768, 20473, 4200, 171, 145, 8, 0, 43, 39, 179, 217"), .pid = 19 };
pub const PKEY_Document_SlideCount = PROPERTYKEY { .fmtid = Guid.initIntString("3587036418, 11932, 4123, 147, 151, 8, 0, 43, 44, 249, 174"), .pid = 7 };
pub const PKEY_Document_Template = PROPERTYKEY { .fmtid = Guid.initIntString("4070540768, 20473, 4200, 171, 145, 8, 0, 43, 39, 179, 217"), .pid = 7 };
pub const PKEY_Document_TotalEditingTime = PROPERTYKEY { .fmtid = Guid.initIntString("4070540768, 20473, 4200, 171, 145, 8, 0, 43, 39, 179, 217"), .pid = 10 };
pub const PKEY_Document_Version = PROPERTYKEY { .fmtid = Guid.initIntString("3587036418, 11932, 4123, 147, 151, 8, 0, 43, 44, 249, 174"), .pid = 29 };
pub const PKEY_Document_WordCount = PROPERTYKEY { .fmtid = Guid.initIntString("4070540768, 20473, 4200, 171, 145, 8, 0, 43, 39, 179, 217"), .pid = 15 };
pub const PKEY_DRM_DatePlayExpires = PROPERTYKEY { .fmtid = Guid.initIntString("2930514404, 35246, 17672, 185, 183, 187, 134, 122, 190, 226, 237"), .pid = 6 };
pub const PKEY_DRM_DatePlayStarts = PROPERTYKEY { .fmtid = Guid.initIntString("2930514404, 35246, 17672, 185, 183, 187, 134, 122, 190, 226, 237"), .pid = 5 };
pub const PKEY_DRM_Description = PROPERTYKEY { .fmtid = Guid.initIntString("2930514404, 35246, 17672, 185, 183, 187, 134, 122, 190, 226, 237"), .pid = 3 };
pub const PKEY_DRM_IsDisabled = PROPERTYKEY { .fmtid = Guid.initIntString("2930514404, 35246, 17672, 185, 183, 187, 134, 122, 190, 226, 237"), .pid = 7 };
pub const PKEY_DRM_IsProtected = PROPERTYKEY { .fmtid = Guid.initIntString("2930514404, 35246, 17672, 185, 183, 187, 134, 122, 190, 226, 237"), .pid = 2 };
pub const PKEY_DRM_PlayCount = PROPERTYKEY { .fmtid = Guid.initIntString("2930514404, 35246, 17672, 185, 183, 187, 134, 122, 190, 226, 237"), .pid = 4 };
pub const PKEY_GPS_Altitude = PROPERTYKEY { .fmtid = Guid.initIntString("2189351759, 23411, 17575, 137, 29, 253, 255, 171, 234, 53, 202"), .pid = 100 };
pub const PKEY_GPS_AltitudeDenominator = PROPERTYKEY { .fmtid = Guid.initIntString("2016685515, 58200, 16709, 174, 154, 107, 254, 78, 15, 159, 81"), .pid = 100 };
pub const PKEY_GPS_AltitudeNumerator = PROPERTYKEY { .fmtid = Guid.initIntString("766320311, 33133, 16595, 158, 195, 201, 119, 59, 226, 170, 222"), .pid = 100 };
pub const PKEY_GPS_AltitudeRef = PROPERTYKEY { .fmtid = Guid.initIntString("1185702557, 30186, 17685, 134, 127, 109, 196, 50, 28, 88, 68"), .pid = 100 };
pub const PKEY_GPS_AreaInformation = PROPERTYKEY { .fmtid = Guid.initIntString("2536387390, 44158, 18929, 138, 223, 167, 13, 7, 169, 188, 171"), .pid = 100 };
pub const PKEY_GPS_Date = PROPERTYKEY { .fmtid = Guid.initIntString("906151954, 3899, 17904, 133, 173, 96, 52, 104, 214, 148, 35"), .pid = 100 };
pub const PKEY_GPS_DestBearing = PROPERTYKEY { .fmtid = Guid.initIntString("3329051452, 59528, 18380, 185, 159, 157, 202, 62, 227, 77, 234"), .pid = 100 };
pub const PKEY_GPS_DestBearingDenominator = PROPERTYKEY { .fmtid = Guid.initIntString("2059203832, 31807, 18824, 172, 145, 141, 44, 46, 151, 236, 165"), .pid = 100 };
pub const PKEY_GPS_DestBearingNumerator = PROPERTYKEY { .fmtid = Guid.initIntString("3124436393, 34542, 19293, 162, 164, 162, 113, 164, 41, 240, 207"), .pid = 100 };
pub const PKEY_GPS_DestBearingRef = PROPERTYKEY { .fmtid = Guid.initIntString("2595767187, 10767, 19317, 187, 34, 114, 121, 120, 105, 119, 203"), .pid = 100 };
pub const PKEY_GPS_DestDistance = PROPERTYKEY { .fmtid = Guid.initIntString("2839457284, 26628, 20260, 172, 129, 9, 178, 102, 69, 33, 24"), .pid = 100 };
pub const PKEY_GPS_DestDistanceDenominator = PROPERTYKEY { .fmtid = Guid.initIntString("2613234075, 44145, 16679, 157, 28, 37, 150, 208, 215, 220, 183"), .pid = 100 };
pub const PKEY_GPS_DestDistanceNumerator = PROPERTYKEY { .fmtid = Guid.initIntString("735725530, 2246, 20449, 128, 188, 167, 47, 197, 23, 197, 208"), .pid = 100 };
pub const PKEY_GPS_DestDistanceRef = PROPERTYKEY { .fmtid = Guid.initIntString("3981308627, 34453, 17675, 133, 111, 245, 193, 197, 58, 203, 102"), .pid = 100 };
pub const PKEY_GPS_DestLatitude = PROPERTYKEY { .fmtid = Guid.initIntString("2635955397, 23609, 17692, 134, 179, 146, 142, 45, 24, 204, 71"), .pid = 100 };
pub const PKEY_GPS_DestLatitudeDenominator = PROPERTYKEY { .fmtid = Guid.initIntString("976691858, 32714, 18855, 153, 213, 228, 123, 178, 212, 231, 171"), .pid = 100 };
pub const PKEY_GPS_DestLatitudeNumerator = PROPERTYKEY { .fmtid = Guid.initIntString("3975460598, 54694, 17212, 187, 146, 64, 118, 101, 15, 200, 144"), .pid = 100 };
pub const PKEY_GPS_DestLatitudeRef = PROPERTYKEY { .fmtid = Guid.initIntString("3467124921, 52833, 18565, 161, 40, 0, 93, 144, 135, 193, 146"), .pid = 100 };
pub const PKEY_GPS_DestLongitude = PROPERTYKEY { .fmtid = Guid.initIntString("1202283105, 52044, 18439, 138, 211, 64, 185, 217, 219, 198, 188"), .pid = 100 };
pub const PKEY_GPS_DestLongitudeDenominator = PROPERTYKEY { .fmtid = Guid.initIntString("1113418213, 18605, 18688, 141, 128, 110, 182, 184, 208, 172, 134"), .pid = 100 };
pub const PKEY_GPS_DestLongitudeNumerator = PROPERTYKEY { .fmtid = Guid.initIntString("2737111682, 64365, 18645, 154, 137, 219, 202, 206, 117, 204, 207"), .pid = 100 };
pub const PKEY_GPS_DestLongitudeRef = PROPERTYKEY { .fmtid = Guid.initIntString("405544614, 31772, 16515, 171, 75, 172, 108, 159, 78, 209, 40"), .pid = 100 };
pub const PKEY_GPS_Differential = PROPERTYKEY { .fmtid = Guid.initIntString("2868178469, 48443, 19927, 191, 196, 71, 247, 123, 176, 15, 109"), .pid = 100 };
pub const PKEY_GPS_DOP = PROPERTYKEY { .fmtid = Guid.initIntString("217643778, 6199, 17137, 166, 151, 167, 1, 122, 162, 137, 185"), .pid = 100 };
pub const PKEY_GPS_DOPDenominator = PROPERTYKEY { .fmtid = Guid.initIntString("2696844485, 20666, 18555, 189, 53, 6, 84, 190, 136, 129, 237"), .pid = 100 };
pub const PKEY_GPS_DOPNumerator = PROPERTYKEY { .fmtid = Guid.initIntString("1192651542, 13903, 19104, 159, 49, 226, 171, 61, 244, 73, 195"), .pid = 100 };
pub const PKEY_GPS_ImgDirection = PROPERTYKEY { .fmtid = Guid.initIntString("373767313, 53271, 20185, 186, 77, 182, 186, 165, 93, 188, 248"), .pid = 100 };
pub const PKEY_GPS_ImgDirectionDenominator = PROPERTYKEY { .fmtid = Guid.initIntString("280118677, 16802, 20000, 147, 194, 87, 97, 193, 57, 95, 50"), .pid = 100 };
pub const PKEY_GPS_ImgDirectionNumerator = PROPERTYKEY { .fmtid = Guid.initIntString("3696785351, 8799, 17911, 186, 199, 232, 19, 52, 182, 19, 10"), .pid = 100 };
pub const PKEY_GPS_ImgDirectionRef = PROPERTYKEY { .fmtid = Guid.initIntString("2762646967, 6864, 17503, 129, 26, 15, 143, 110, 103, 246, 181"), .pid = 100 };
pub const PKEY_GPS_Latitude = PROPERTYKEY { .fmtid = Guid.initIntString("2267533311, 18536, 20166, 173, 91, 129, 185, 133, 33, 209, 171"), .pid = 100 };
pub const PKEY_GPS_LatitudeDecimal = PROPERTYKEY { .fmtid = Guid.initIntString("257281506, 20297, 17677, 146, 193, 220, 209, 99, 1, 177, 183"), .pid = 100 };
pub const PKEY_GPS_LatitudeDenominator = PROPERTYKEY { .fmtid = Guid.initIntString("384185582, 11263, 18811, 189, 138, 67, 65, 173, 57, 238, 185"), .pid = 100 };
pub const PKEY_GPS_LatitudeNumerator = PROPERTYKEY { .fmtid = Guid.initIntString("2111482577, 52424, 16814, 183, 80, 178, 203, 128, 49, 174, 162"), .pid = 100 };
pub const PKEY_GPS_LatitudeRef = PROPERTYKEY { .fmtid = Guid.initIntString("43778642, 23430, 18119, 172, 160, 39, 105, 255, 200, 227, 212"), .pid = 100 };
pub const PKEY_GPS_Longitude = PROPERTYKEY { .fmtid = Guid.initIntString("3301235634, 46483, 18027, 187, 218, 208, 61, 39, 213, 228, 58"), .pid = 100 };
pub const PKEY_GPS_LongitudeDecimal = PROPERTYKEY { .fmtid = Guid.initIntString("1182384565, 33869, 17808, 186, 245, 243, 34, 35, 31, 27, 129"), .pid = 100 };
pub const PKEY_GPS_LongitudeDenominator = PROPERTYKEY { .fmtid = Guid.initIntString("3194885996, 17716, 19756, 172, 229, 49, 222, 218, 193, 96, 107"), .pid = 100 };
pub const PKEY_GPS_LongitudeNumerator = PROPERTYKEY { .fmtid = Guid.initIntString("45151881, 43284, 20037, 130, 29, 29, 218, 69, 46, 210, 196"), .pid = 100 };
pub const PKEY_GPS_LongitudeRef = PROPERTYKEY { .fmtid = Guid.initIntString("870117931, 10453, 17996, 128, 53, 30, 233, 239, 210, 82, 120"), .pid = 100 };
pub const PKEY_GPS_MapDatum = PROPERTYKEY { .fmtid = Guid.initIntString("748870374, 60892, 16509, 190, 241, 119, 57, 66, 171, 250, 149"), .pid = 100 };
pub const PKEY_GPS_MeasureMode = PROPERTYKEY { .fmtid = Guid.initIntString("2685791581, 43754, 19800, 138, 134, 60, 88, 105, 32, 234, 11"), .pid = 100 };
pub const PKEY_GPS_ProcessingMethod = PROPERTYKEY { .fmtid = Guid.initIntString("1507106401, 33807, 19113, 169, 57, 226, 9, 155, 127, 99, 153"), .pid = 100 };
pub const PKEY_GPS_Satellites = PROPERTYKEY { .fmtid = Guid.initIntString("1182721397, 7973, 17751, 173, 78, 184, 181, 139, 13, 156, 21"), .pid = 100 };
pub const PKEY_GPS_Speed = PROPERTYKEY { .fmtid = Guid.initIntString("3663530082, 28278, 19995, 186, 189, 112, 2, 27, 210, 84, 148"), .pid = 100 };
pub const PKEY_GPS_SpeedDenominator = PROPERTYKEY { .fmtid = Guid.initIntString("2098343258, 44638, 17205, 136, 65, 215, 30, 124, 231, 47, 83"), .pid = 100 };
pub const PKEY_GPS_SpeedNumerator = PROPERTYKEY { .fmtid = Guid.initIntString("2898906685, 49683, 18754, 139, 72, 109, 8, 32, 242, 28, 109"), .pid = 100 };
pub const PKEY_GPS_SpeedRef = PROPERTYKEY { .fmtid = Guid.initIntString("3975673033, 21583, 19821, 157, 152, 138, 215, 154, 218, 244, 83"), .pid = 100 };
pub const PKEY_GPS_Status = PROPERTYKEY { .fmtid = Guid.initIntString("307532276, 33167, 18098, 145, 181, 213, 55, 117, 54, 23, 178"), .pid = 100 };
pub const PKEY_GPS_Track = PROPERTYKEY { .fmtid = Guid.initIntString("1992333635, 31795, 18915, 158, 126, 205, 186, 135, 44, 250, 218"), .pid = 100 };
pub const PKEY_GPS_TrackDenominator = PROPERTYKEY { .fmtid = Guid.initIntString("3369177612, 502, 16576, 172, 134, 47, 58, 74, 208, 7, 112"), .pid = 100 };
pub const PKEY_GPS_TrackNumerator = PROPERTYKEY { .fmtid = Guid.initIntString("1881745140, 17574, 17377, 174, 113, 69, 98, 113, 22, 137, 59"), .pid = 100 };
pub const PKEY_GPS_TrackRef = PROPERTYKEY { .fmtid = Guid.initIntString("903603966, 17603, 17408, 170, 174, 210, 199, 153, 196, 7, 232"), .pid = 100 };
pub const PKEY_GPS_VersionID = PROPERTYKEY { .fmtid = Guid.initIntString("577785252, 50866, 19097, 142, 86, 241, 109, 248, 201, 37, 153"), .pid = 100 };
pub const PKEY_History_VisitCount = PROPERTYKEY { .fmtid = Guid.initIntString("1556031367, 18639, 16904, 185, 14, 238, 94, 93, 66, 2, 148"), .pid = 7 };
pub const PKEY_Image_BitDepth = PROPERTYKEY { .fmtid = Guid.initIntString("1682179215, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 7 };
pub const PKEY_Image_ColorSpace = PROPERTYKEY { .fmtid = Guid.initIntString("347610529, 309, 19761, 150, 217, 108, 191, 201, 103, 26, 153"), .pid = 40961 };
pub const PKEY_Image_CompressedBitsPerPixel = PROPERTYKEY { .fmtid = Guid.initIntString("910913449, 14251, 18474, 190, 43, 174, 2, 246, 13, 67, 24"), .pid = 100 };
pub const PKEY_Image_CompressedBitsPerPixelDenominator = PROPERTYKEY { .fmtid = Guid.initIntString("529024225, 9389, 17672, 157, 253, 83, 38, 164, 21, 206, 2"), .pid = 100 };
pub const PKEY_Image_CompressedBitsPerPixelNumerator = PROPERTYKEY { .fmtid = Guid.initIntString("3524948296, 54060, 17956, 137, 0, 39, 114, 16, 247, 156, 15"), .pid = 100 };
pub const PKEY_Image_Compression = PROPERTYKEY { .fmtid = Guid.initIntString("347610529, 309, 19761, 150, 217, 108, 191, 201, 103, 26, 153"), .pid = 259 };
pub const PKEY_Image_CompressionText = PROPERTYKEY { .fmtid = Guid.initIntString("1057547887, 12100, 19385, 166, 130, 172, 53, 210, 86, 35, 34"), .pid = 100 };
pub const PKEY_Image_Dimensions = PROPERTYKEY { .fmtid = Guid.initIntString("1682179215, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 13 };
pub const PKEY_Image_HorizontalResolution = PROPERTYKEY { .fmtid = Guid.initIntString("1682179215, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 5 };
pub const PKEY_Image_HorizontalSize = PROPERTYKEY { .fmtid = Guid.initIntString("1682179215, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 3 };
pub const PKEY_Image_ImageID = PROPERTYKEY { .fmtid = Guid.initIntString("282770949, 12970, 19497, 191, 26, 99, 226, 210, 32, 88, 127"), .pid = 100 };
pub const PKEY_Image_ResolutionUnit = PROPERTYKEY { .fmtid = Guid.initIntString("431300518, 8082, 19036, 171, 72, 125, 240, 171, 214, 116, 68"), .pid = 100 };
pub const PKEY_Image_VerticalResolution = PROPERTYKEY { .fmtid = Guid.initIntString("1682179215, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 6 };
pub const PKEY_Image_VerticalSize = PROPERTYKEY { .fmtid = Guid.initIntString("1682179215, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 4 };
pub const PKEY_Journal_Contacts = PROPERTYKEY { .fmtid = Guid.initIntString("3735537708, 7561, 19046, 148, 39, 164, 227, 222, 186, 188, 177"), .pid = 100 };
pub const PKEY_Journal_EntryType = PROPERTYKEY { .fmtid = Guid.initIntString("2512302588, 12909, 17988, 179, 150, 205, 62, 217, 14, 109, 223"), .pid = 100 };
pub const PKEY_LayoutPattern_ContentViewModeForBrowse = PROPERTYKEY { .fmtid = Guid.initIntString("3381938721, 41990, 18686, 130, 37, 174, 199, 226, 76, 33, 27"), .pid = 500 };
pub const LAYOUTPATTERN_CVMFB_ALPHA = "alpha";
pub const LAYOUTPATTERN_CVMFB_BETA = "beta";
pub const LAYOUTPATTERN_CVMFB_GAMMA = "gamma";
pub const LAYOUTPATTERN_CVMFB_DELTA = "delta";
pub const PKEY_LayoutPattern_ContentViewModeForSearch = PROPERTYKEY { .fmtid = Guid.initIntString("3381938721, 41990, 18686, 130, 37, 174, 199, 226, 76, 33, 27"), .pid = 501 };
pub const LAYOUTPATTERN_CVMFS_ALPHA = "alpha";
pub const LAYOUTPATTERN_CVMFS_BETA = "beta";
pub const LAYOUTPATTERN_CVMFS_GAMMA = "gamma";
pub const LAYOUTPATTERN_CVMFS_DELTA = "delta";
pub const PKEY_History_SelectionCount = PROPERTYKEY { .fmtid = Guid.initIntString("484497084, 21356, 17920, 176, 221, 126, 12, 102, 179, 80, 213"), .pid = 8 };
pub const PKEY_History_TargetUrlHostName = PROPERTYKEY { .fmtid = Guid.initIntString("484497084, 21356, 17920, 176, 221, 126, 12, 102, 179, 80, 213"), .pid = 9 };
pub const PKEY_Link_Arguments = PROPERTYKEY { .fmtid = Guid.initIntString("1131357799, 5346, 20459, 179, 10, 20, 108, 83, 181, 182, 116"), .pid = 100 };
pub const PKEY_Link_Comment = PROPERTYKEY { .fmtid = Guid.initIntString("3115627516, 11089, 19010, 181, 216, 50, 65, 70, 175, 207, 37"), .pid = 5 };
pub const PKEY_Link_DateVisited = PROPERTYKEY { .fmtid = Guid.initIntString("1556031367, 18639, 16904, 185, 14, 238, 94, 93, 66, 2, 148"), .pid = 23 };
pub const PKEY_Link_Description = PROPERTYKEY { .fmtid = Guid.initIntString("1556031367, 18639, 16904, 185, 14, 238, 94, 93, 66, 2, 148"), .pid = 21 };
pub const PKEY_Link_FeedItemLocalId = PROPERTYKEY { .fmtid = Guid.initIntString("2318375417, 15415, 18013, 168, 215, 105, 119, 122, 36, 109, 12"), .pid = 2 };
pub const PKEY_Link_Status = PROPERTYKEY { .fmtid = Guid.initIntString("3115627516, 11089, 19010, 181, 216, 50, 65, 70, 175, 207, 37"), .pid = 3 };
pub const LINK_STATUS_RESOLVED = @as(i32, 1);
pub const LINK_STATUS_BROKEN = @as(i32, 2);
pub const PKEY_Link_TargetExtension = PROPERTYKEY { .fmtid = Guid.initIntString("2055042804, 46640, 19415, 149, 255, 55, 204, 81, 169, 117, 201"), .pid = 2 };
pub const PKEY_Link_TargetParsingPath = PROPERTYKEY { .fmtid = Guid.initIntString("3115627516, 11089, 19010, 181, 216, 50, 65, 70, 175, 207, 37"), .pid = 2 };
pub const PKEY_Link_TargetSFGAOFlags = PROPERTYKEY { .fmtid = Guid.initIntString("3115627516, 11089, 19010, 181, 216, 50, 65, 70, 175, 207, 37"), .pid = 8 };
pub const PKEY_Link_TargetUrlHostName = PROPERTYKEY { .fmtid = Guid.initIntString("2318375417, 15415, 18013, 168, 215, 105, 119, 122, 36, 109, 12"), .pid = 5 };
pub const PKEY_Link_TargetUrlPath = PROPERTYKEY { .fmtid = Guid.initIntString("2318375417, 15415, 18013, 168, 215, 105, 119, 122, 36, 109, 12"), .pid = 6 };
pub const PKEY_Media_AuthorUrl = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 32 };
pub const PKEY_Media_AverageLevel = PROPERTYKEY { .fmtid = Guid.initIntString("166581686, 45825, 17349, 153, 144, 208, 3, 2, 239, 253, 70"), .pid = 100 };
pub const PKEY_Media_ClassPrimaryID = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 13 };
pub const PKEY_Media_ClassSecondaryID = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 14 };
pub const PKEY_Media_CollectionGroupID = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 24 };
pub const PKEY_Media_CollectionID = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 25 };
pub const PKEY_Media_ContentDistributor = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 18 };
pub const PKEY_Media_ContentID = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 26 };
pub const PKEY_Media_CreatorApplication = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 27 };
pub const PKEY_Media_CreatorApplicationVersion = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 28 };
pub const PKEY_Media_DateEncoded = PROPERTYKEY { .fmtid = Guid.initIntString("776692749, 20505, 18136, 136, 129, 85, 65, 76, 197, 202, 160"), .pid = 100 };
pub const PKEY_Media_DateReleased = PROPERTYKEY { .fmtid = Guid.initIntString("3728854057, 26993, 17040, 180, 114, 245, 159, 46, 47, 49, 226"), .pid = 100 };
pub const PKEY_Media_DlnaProfileID = PROPERTYKEY { .fmtid = Guid.initIntString("3483573061, 21085, 18840, 187, 68, 63, 125, 129, 84, 47, 164"), .pid = 100 };
pub const PKEY_Media_Duration = PROPERTYKEY { .fmtid = Guid.initIntString("1682179216, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 3 };
pub const PKEY_Media_DVDID = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 15 };
pub const PKEY_Media_EncodedBy = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 36 };
pub const PKEY_Media_EncodingSettings = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 37 };
pub const PKEY_Media_EpisodeNumber = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 100 };
pub const PKEY_Media_FrameCount = PROPERTYKEY { .fmtid = Guid.initIntString("1682179215, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 12 };
pub const PKEY_Media_MCDI = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 16 };
pub const PKEY_Media_MetadataContentProvider = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 17 };
pub const PKEY_Media_Producer = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 22 };
pub const PKEY_Media_PromotionUrl = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 33 };
pub const PKEY_Media_ProtectionType = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 38 };
pub const PKEY_Media_ProviderRating = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 39 };
pub const PKEY_Media_ProviderStyle = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 40 };
pub const PKEY_Media_Publisher = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 30 };
pub const PKEY_Media_SeasonNumber = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 101 };
pub const PKEY_Media_SeriesName = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 42 };
pub const PKEY_Media_SubscriptionContentId = PROPERTYKEY { .fmtid = Guid.initIntString("2599136890, 38468, 18557, 169, 44, 101, 117, 133, 237, 117, 26"), .pid = 100 };
pub const PKEY_Media_SubTitle = PROPERTYKEY { .fmtid = Guid.initIntString("1453537070, 52892, 4562, 159, 14, 0, 96, 151, 198, 134, 246"), .pid = 38 };
pub const PKEY_Media_ThumbnailLargePath = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 47 };
pub const PKEY_Media_ThumbnailLargeUri = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 48 };
pub const PKEY_Media_ThumbnailSmallPath = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 49 };
pub const PKEY_Media_ThumbnailSmallUri = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 50 };
pub const PKEY_Media_UniqueFileIdentifier = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 35 };
pub const PKEY_Media_UserNoAutoInfo = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 41 };
pub const PKEY_Media_UserWebUrl = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 34 };
pub const PKEY_Media_Writer = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 23 };
pub const PKEY_Media_Year = PROPERTYKEY { .fmtid = Guid.initIntString("1453537070, 52892, 4562, 159, 14, 0, 96, 151, 198, 134, 246"), .pid = 5 };
pub const PKEY_Message_AttachmentContents = PROPERTYKEY { .fmtid = Guid.initIntString("826523516, 32936, 18516, 136, 128, 226, 228, 1, 137, 189, 208"), .pid = 100 };
pub const PKEY_Message_AttachmentNames = PROPERTYKEY { .fmtid = Guid.initIntString("3823130700, 46984, 19034, 187, 32, 127, 90, 68, 201, 172, 221"), .pid = 21 };
pub const PKEY_Message_BccAddress = PROPERTYKEY { .fmtid = Guid.initIntString("3823130700, 46984, 19034, 187, 32, 127, 90, 68, 201, 172, 221"), .pid = 2 };
pub const PKEY_Message_BccName = PROPERTYKEY { .fmtid = Guid.initIntString("3823130700, 46984, 19034, 187, 32, 127, 90, 68, 201, 172, 221"), .pid = 3 };
pub const PKEY_Message_CcAddress = PROPERTYKEY { .fmtid = Guid.initIntString("3823130700, 46984, 19034, 187, 32, 127, 90, 68, 201, 172, 221"), .pid = 4 };
pub const PKEY_Message_CcName = PROPERTYKEY { .fmtid = Guid.initIntString("3823130700, 46984, 19034, 187, 32, 127, 90, 68, 201, 172, 221"), .pid = 5 };
pub const PKEY_Message_ConversationID = PROPERTYKEY { .fmtid = Guid.initIntString("3700392125, 44830, 17033, 133, 182, 61, 252, 27, 73, 57, 146"), .pid = 100 };
pub const PKEY_Message_ConversationIndex = PROPERTYKEY { .fmtid = Guid.initIntString("3700392125, 44830, 17033, 133, 182, 61, 252, 27, 73, 57, 146"), .pid = 101 };
pub const PKEY_Message_DateReceived = PROPERTYKEY { .fmtid = Guid.initIntString("3823130700, 46984, 19034, 187, 32, 127, 90, 68, 201, 172, 221"), .pid = 20 };
pub const PKEY_Message_DateSent = PROPERTYKEY { .fmtid = Guid.initIntString("3823130700, 46984, 19034, 187, 32, 127, 90, 68, 201, 172, 221"), .pid = 19 };
pub const PKEY_Message_Flags = PROPERTYKEY { .fmtid = Guid.initIntString("2821562087, 51815, 17170, 150, 94, 34, 107, 206, 168, 80, 35"), .pid = 100 };
pub const PKEY_Message_FromAddress = PROPERTYKEY { .fmtid = Guid.initIntString("3823130700, 46984, 19034, 187, 32, 127, 90, 68, 201, 172, 221"), .pid = 13 };
pub const PKEY_Message_FromName = PROPERTYKEY { .fmtid = Guid.initIntString("3823130700, 46984, 19034, 187, 32, 127, 90, 68, 201, 172, 221"), .pid = 14 };
pub const PKEY_Message_HasAttachments = PROPERTYKEY { .fmtid = Guid.initIntString("2619330420, 11671, 16826, 180, 174, 203, 46, 54, 97, 166, 228"), .pid = 8 };
pub const PKEY_Message_IsFwdOrReply = PROPERTYKEY { .fmtid = Guid.initIntString("2593898632, 20333, 18078, 153, 25, 231, 5, 65, 32, 64, 249"), .pid = 100 };
pub const PKEY_Message_MessageClass = PROPERTYKEY { .fmtid = Guid.initIntString("3449738328, 2254, 16783, 167, 14, 249, 18, 199, 187, 156, 92"), .pid = 103 };
pub const PKEY_Message_Participants = PROPERTYKEY { .fmtid = Guid.initIntString("446408197, 36476, 19729, 173, 125, 165, 10, 218, 24, 186, 27"), .pid = 2 };
pub const PKEY_Message_ProofInProgress = PROPERTYKEY { .fmtid = Guid.initIntString("2425942844, 39549, 18600, 141, 229, 46, 18, 39, 166, 78, 145"), .pid = 100 };
pub const PKEY_Message_SenderAddress = PROPERTYKEY { .fmtid = Guid.initIntString("199346407, 6529, 18038, 174, 20, 253, 215, 143, 5, 166, 231"), .pid = 100 };
pub const PKEY_Message_SenderName = PROPERTYKEY { .fmtid = Guid.initIntString("228859130, 53796, 18968, 174, 47, 89, 97, 88, 219, 75, 58"), .pid = 100 };
pub const PKEY_Message_Store = PROPERTYKEY { .fmtid = Guid.initIntString("3823130700, 46984, 19034, 187, 32, 127, 90, 68, 201, 172, 221"), .pid = 15 };
pub const PKEY_Message_ToAddress = PROPERTYKEY { .fmtid = Guid.initIntString("3823130700, 46984, 19034, 187, 32, 127, 90, 68, 201, 172, 221"), .pid = 16 };
pub const PKEY_Message_ToDoFlags = PROPERTYKEY { .fmtid = Guid.initIntString("528837279, 26880, 19130, 149, 5, 45, 95, 27, 77, 102, 203"), .pid = 100 };
pub const PKEY_Message_ToDoTitle = PROPERTYKEY { .fmtid = Guid.initIntString("3167521340, 36079, 17125, 155, 28, 198, 144, 121, 57, 139, 199"), .pid = 100 };
pub const PKEY_Message_ToName = PROPERTYKEY { .fmtid = Guid.initIntString("3823130700, 46984, 19034, 187, 32, 127, 90, 68, 201, 172, 221"), .pid = 17 };
pub const PKEY_Music_AlbumArtist = PROPERTYKEY { .fmtid = Guid.initIntString("1453537070, 52892, 4562, 159, 14, 0, 96, 151, 198, 134, 246"), .pid = 13 };
pub const PKEY_Music_AlbumArtistSortOverride = PROPERTYKEY { .fmtid = Guid.initIntString("4059935919, 63372, 18028, 187, 5, 86, 233, 45, 176, 184, 236"), .pid = 103 };
pub const PKEY_Music_AlbumID = PROPERTYKEY { .fmtid = Guid.initIntString("1453537070, 52892, 4562, 159, 14, 0, 96, 151, 198, 134, 246"), .pid = 100 };
pub const PKEY_Music_AlbumTitle = PROPERTYKEY { .fmtid = Guid.initIntString("1453537070, 52892, 4562, 159, 14, 0, 96, 151, 198, 134, 246"), .pid = 4 };
pub const PKEY_Music_AlbumTitleSortOverride = PROPERTYKEY { .fmtid = Guid.initIntString("334200828, 60553, 17222, 177, 157, 204, 198, 241, 120, 66, 35"), .pid = 101 };
pub const PKEY_Music_Artist = PROPERTYKEY { .fmtid = Guid.initIntString("1453537070, 52892, 4562, 159, 14, 0, 96, 151, 198, 134, 246"), .pid = 2 };
pub const PKEY_Music_ArtistSortOverride = PROPERTYKEY { .fmtid = Guid.initIntString("3739954613, 1686, 19680, 148, 254, 160, 31, 119, 164, 95, 181"), .pid = 102 };
pub const PKEY_Music_BeatsPerMinute = PROPERTYKEY { .fmtid = Guid.initIntString("1453537070, 52892, 4562, 159, 14, 0, 96, 151, 198, 134, 246"), .pid = 35 };
pub const PKEY_Music_Composer = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 19 };
pub const PKEY_Music_ComposerSortOverride = PROPERTYKEY { .fmtid = Guid.initIntString("12329123, 48456, 16517, 135, 44, 168, 141, 119, 245, 9, 126"), .pid = 105 };
pub const PKEY_Music_Conductor = PROPERTYKEY { .fmtid = Guid.initIntString("1453537070, 52892, 4562, 159, 14, 0, 96, 151, 198, 134, 246"), .pid = 36 };
pub const PKEY_Music_ContentGroupDescription = PROPERTYKEY { .fmtid = Guid.initIntString("1453537070, 52892, 4562, 159, 14, 0, 96, 151, 198, 134, 246"), .pid = 33 };
pub const PKEY_Music_DiscNumber = PROPERTYKEY { .fmtid = Guid.initIntString("1795060791, 39885, 18887, 128, 254, 74, 92, 101, 250, 88, 116"), .pid = 104 };
pub const PKEY_Music_DisplayArtist = PROPERTYKEY { .fmtid = Guid.initIntString("4245825875, 64147, 20215, 146, 195, 4, 201, 70, 178, 247, 200"), .pid = 100 };
pub const PKEY_Music_Genre = PROPERTYKEY { .fmtid = Guid.initIntString("1453537070, 52892, 4562, 159, 14, 0, 96, 151, 198, 134, 246"), .pid = 11 };
pub const PKEY_Music_InitialKey = PROPERTYKEY { .fmtid = Guid.initIntString("1453537070, 52892, 4562, 159, 14, 0, 96, 151, 198, 134, 246"), .pid = 34 };
pub const PKEY_Music_IsCompilation = PROPERTYKEY { .fmtid = Guid.initIntString("3293173195, 40612, 18441, 130, 232, 175, 157, 89, 222, 214, 209"), .pid = 100 };
pub const PKEY_Music_Lyrics = PROPERTYKEY { .fmtid = Guid.initIntString("1453537070, 52892, 4562, 159, 14, 0, 96, 151, 198, 134, 246"), .pid = 12 };
pub const PKEY_Music_Mood = PROPERTYKEY { .fmtid = Guid.initIntString("1453537070, 52892, 4562, 159, 14, 0, 96, 151, 198, 134, 246"), .pid = 39 };
pub const PKEY_Music_PartOfSet = PROPERTYKEY { .fmtid = Guid.initIntString("1453537070, 52892, 4562, 159, 14, 0, 96, 151, 198, 134, 246"), .pid = 37 };
pub const PKEY_Music_Period = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 31 };
pub const PKEY_Music_SynchronizedLyrics = PROPERTYKEY { .fmtid = Guid.initIntString("1797405546, 5678, 19113, 179, 159, 5, 214, 120, 252, 109, 119"), .pid = 100 };
pub const PKEY_Music_TrackNumber = PROPERTYKEY { .fmtid = Guid.initIntString("1453537070, 52892, 4562, 159, 14, 0, 96, 151, 198, 134, 246"), .pid = 7 };
pub const PKEY_Note_Color = PROPERTYKEY { .fmtid = Guid.initIntString("1198967546, 48356, 19633, 162, 62, 38, 94, 118, 216, 235, 17"), .pid = 100 };
pub const PKEY_Note_ColorText = PROPERTYKEY { .fmtid = Guid.initIntString("1186261214, 52658, 17421, 136, 92, 22, 88, 235, 101, 185, 20"), .pid = 100 };
pub const PKEY_Photo_Aperture = PROPERTYKEY { .fmtid = Guid.initIntString("347610529, 309, 19761, 150, 217, 108, 191, 201, 103, 26, 153"), .pid = 37378 };
pub const PKEY_Photo_ApertureDenominator = PROPERTYKEY { .fmtid = Guid.initIntString("3785991051, 26245, 18109, 135, 94, 87, 13, 199, 173, 115, 32"), .pid = 100 };
pub const PKEY_Photo_ApertureNumerator = PROPERTYKEY { .fmtid = Guid.initIntString("53996780, 14843, 17793, 160, 189, 76, 76, 197, 30, 153, 20"), .pid = 100 };
pub const PKEY_Photo_Brightness = PROPERTYKEY { .fmtid = Guid.initIntString("443554806, 18316, 17249, 131, 171, 55, 1, 187, 5, 60, 88"), .pid = 100 };
pub const PKEY_Photo_BrightnessDenominator = PROPERTYKEY { .fmtid = Guid.initIntString("1857972550, 8993, 17418, 144, 240, 192, 67, 239, 211, 36, 118"), .pid = 100 };
pub const PKEY_Photo_BrightnessNumerator = PROPERTYKEY { .fmtid = Guid.initIntString("2658996623, 45844, 17824, 140, 251, 214, 84, 185, 23, 201, 233"), .pid = 100 };
pub const PKEY_Photo_CameraManufacturer = PROPERTYKEY { .fmtid = Guid.initIntString("347610529, 309, 19761, 150, 217, 108, 191, 201, 103, 26, 153"), .pid = 271 };
pub const PKEY_Photo_CameraModel = PROPERTYKEY { .fmtid = Guid.initIntString("347610529, 309, 19761, 150, 217, 108, 191, 201, 103, 26, 153"), .pid = 272 };
pub const PKEY_Photo_CameraSerialNumber = PROPERTYKEY { .fmtid = Guid.initIntString("347610529, 309, 19761, 150, 217, 108, 191, 201, 103, 26, 153"), .pid = 273 };
pub const PKEY_Photo_Contrast = PROPERTYKEY { .fmtid = Guid.initIntString("712530857, 36131, 19949, 130, 230, 96, 163, 80, 200, 106, 16"), .pid = 100 };
pub const PHOTO_CONTRAST_NORMAL = @as(u32, 0);
pub const PHOTO_CONTRAST_SOFT = @as(u32, 1);
pub const PHOTO_CONTRAST_HARD = @as(u32, 2);
pub const PKEY_Photo_ContrastText = PROPERTYKEY { .fmtid = Guid.initIntString("1507715570, 21075, 16618, 154, 139, 71, 158, 150, 198, 36, 154"), .pid = 100 };
pub const PKEY_Photo_DateTaken = PROPERTYKEY { .fmtid = Guid.initIntString("347610529, 309, 19761, 150, 217, 108, 191, 201, 103, 26, 153"), .pid = 36867 };
pub const PKEY_Photo_DigitalZoom = PROPERTYKEY { .fmtid = Guid.initIntString("4166776896, 43301, 19394, 176, 196, 142, 54, 181, 152, 103, 158"), .pid = 100 };
pub const PKEY_Photo_DigitalZoomDenominator = PROPERTYKEY { .fmtid = Guid.initIntString("1952165646, 58817, 19707, 138, 27, 208, 49, 160, 165, 35, 147"), .pid = 100 };
pub const PKEY_Photo_DigitalZoomNumerator = PROPERTYKEY { .fmtid = Guid.initIntString("382449956, 25856, 18235, 165, 190, 241, 89, 155, 203, 228, 19"), .pid = 100 };
pub const PKEY_Photo_Event = PROPERTYKEY { .fmtid = Guid.initIntString("347610529, 309, 19761, 150, 217, 108, 191, 201, 103, 26, 153"), .pid = 18248 };
pub const PKEY_Photo_EXIFVersion = PROPERTYKEY { .fmtid = Guid.initIntString("3546248250, 60206, 18418, 162, 134, 132, 65, 50, 203, 20, 39"), .pid = 100 };
pub const PKEY_Photo_ExposureBias = PROPERTYKEY { .fmtid = Guid.initIntString("347610529, 309, 19761, 150, 217, 108, 191, 201, 103, 26, 153"), .pid = 37380 };
pub const PKEY_Photo_ExposureBiasDenominator = PROPERTYKEY { .fmtid = Guid.initIntString("2871025232, 1207, 17948, 161, 140, 47, 35, 56, 54, 230, 39"), .pid = 100 };
pub const PKEY_Photo_ExposureBiasNumerator = PROPERTYKEY { .fmtid = Guid.initIntString("1938551428, 7559, 16907, 146, 207, 88, 52, 191, 110, 249, 237"), .pid = 100 };
pub const PKEY_Photo_ExposureIndex = PROPERTYKEY { .fmtid = Guid.initIntString("2524666616, 39258, 18157, 158, 17, 53, 179, 197, 185, 120, 45"), .pid = 100 };
pub const PKEY_Photo_ExposureIndexDenominator = PROPERTYKEY { .fmtid = Guid.initIntString("2467377033, 49803, 18735, 138, 157, 75, 226, 6, 44, 238, 138"), .pid = 100 };
pub const PKEY_Photo_ExposureIndexNumerator = PROPERTYKEY { .fmtid = Guid.initIntString("3454914352, 35097, 17631, 143, 76, 78, 178, 255, 219, 141, 137"), .pid = 100 };
pub const PKEY_Photo_ExposureProgram = PROPERTYKEY { .fmtid = Guid.initIntString("347610529, 309, 19761, 150, 217, 108, 191, 201, 103, 26, 153"), .pid = 34850 };
pub const PHOTO_EXPOSUREPROGRAM_UNKNOWN = @as(u32, 0);
pub const PHOTO_EXPOSUREPROGRAM_MANUAL = @as(u32, 1);
pub const PHOTO_EXPOSUREPROGRAM_NORMAL = @as(u32, 2);
pub const PHOTO_EXPOSUREPROGRAM_APERTURE = @as(u32, 3);
pub const PHOTO_EXPOSUREPROGRAM_SHUTTER = @as(u32, 4);
pub const PHOTO_EXPOSUREPROGRAM_CREATIVE = @as(u32, 5);
pub const PHOTO_EXPOSUREPROGRAM_ACTION = @as(u32, 6);
pub const PHOTO_EXPOSUREPROGRAM_PORTRAIT = @as(u32, 7);
pub const PHOTO_EXPOSUREPROGRAM_LANDSCAPE = @as(u32, 8);
pub const PKEY_Photo_ExposureProgramText = PROPERTYKEY { .fmtid = Guid.initIntString("4274426039, 24368, 17990, 174, 71, 76, 170, 251, 168, 132, 163"), .pid = 100 };
pub const PKEY_Photo_ExposureTime = PROPERTYKEY { .fmtid = Guid.initIntString("347610529, 309, 19761, 150, 217, 108, 191, 201, 103, 26, 153"), .pid = 33434 };
pub const PKEY_Photo_ExposureTimeDenominator = PROPERTYKEY { .fmtid = Guid.initIntString("1441367447, 44310, 17120, 182, 36, 33, 89, 154, 25, 152, 56"), .pid = 100 };
pub const PKEY_Photo_ExposureTimeNumerator = PROPERTYKEY { .fmtid = Guid.initIntString("629032162, 36913, 17187, 172, 56, 133, 197, 82, 135, 27, 46"), .pid = 100 };
pub const PKEY_Photo_Flash = PROPERTYKEY { .fmtid = Guid.initIntString("347610529, 309, 19761, 150, 217, 108, 191, 201, 103, 26, 153"), .pid = 37385 };
pub const PHOTO_FLASH_NONE = @as(u32, 0);
pub const PHOTO_FLASH_FLASH = @as(u32, 1);
pub const PHOTO_FLASH_WITHOUTSTROBE = @as(u32, 5);
pub const PHOTO_FLASH_WITHSTROBE = @as(u32, 7);
pub const PHOTO_FLASH_FLASH_COMPULSORY = @as(u32, 9);
pub const PHOTO_FLASH_FLASH_COMPULSORY_NORETURNLIGHT = @as(u32, 13);
pub const PHOTO_FLASH_FLASH_COMPULSORY_RETURNLIGHT = @as(u32, 15);
pub const PHOTO_FLASH_NONE_COMPULSORY = @as(u32, 16);
pub const PHOTO_FLASH_NONE_AUTO = @as(u32, 24);
pub const PHOTO_FLASH_FLASH_AUTO = @as(u32, 25);
pub const PHOTO_FLASH_FLASH_AUTO_NORETURNLIGHT = @as(u32, 29);
pub const PHOTO_FLASH_FLASH_AUTO_RETURNLIGHT = @as(u32, 31);
pub const PHOTO_FLASH_NOFUNCTION = @as(u32, 32);
pub const PHOTO_FLASH_FLASH_REDEYE = @as(u32, 65);
pub const PHOTO_FLASH_FLASH_REDEYE_NORETURNLIGHT = @as(u32, 69);
pub const PHOTO_FLASH_FLASH_REDEYE_RETURNLIGHT = @as(u32, 71);
pub const PHOTO_FLASH_FLASH_COMPULSORY_REDEYE = @as(u32, 73);
pub const PHOTO_FLASH_FLASH_COMPULSORY_REDEYE_NORETURNLIGHT = @as(u32, 77);
pub const PHOTO_FLASH_FLASH_COMPULSORY_REDEYE_RETURNLIGHT = @as(u32, 79);
pub const PHOTO_FLASH_FLASH_AUTO_REDEYE = @as(u32, 89);
pub const PHOTO_FLASH_FLASH_AUTO_REDEYE_NORETURNLIGHT = @as(u32, 93);
pub const PHOTO_FLASH_FLASH_AUTO_REDEYE_RETURNLIGHT = @as(u32, 95);
pub const PKEY_Photo_FlashEnergy = PROPERTYKEY { .fmtid = Guid.initIntString("347610529, 309, 19761, 150, 217, 108, 191, 201, 103, 26, 153"), .pid = 41483 };
pub const PKEY_Photo_FlashEnergyDenominator = PROPERTYKEY { .fmtid = Guid.initIntString("3619036272, 25379, 18893, 165, 252, 200, 66, 119, 22, 44, 151"), .pid = 100 };
pub const PKEY_Photo_FlashEnergyNumerator = PROPERTYKEY { .fmtid = Guid.initIntString("4239211837, 2136, 16399, 170, 163, 47, 102, 204, 226, 166, 188"), .pid = 100 };
pub const PKEY_Photo_FlashManufacturer = PROPERTYKEY { .fmtid = Guid.initIntString("2864379593, 57541, 18201, 133, 133, 87, 177, 3, 229, 132, 254"), .pid = 100 };
pub const PKEY_Photo_FlashModel = PROPERTYKEY { .fmtid = Guid.initIntString("4270046005, 19738, 17122, 145, 107, 6, 243, 225, 175, 113, 158"), .pid = 100 };
pub const PKEY_Photo_FlashText = PROPERTYKEY { .fmtid = Guid.initIntString("1804298486, 8203, 18410, 141, 37, 216, 5, 15, 87, 51, 159"), .pid = 100 };
pub const PKEY_Photo_FNumber = PROPERTYKEY { .fmtid = Guid.initIntString("347610529, 309, 19761, 150, 217, 108, 191, 201, 103, 26, 153"), .pid = 33437 };
pub const PKEY_Photo_FNumberDenominator = PROPERTYKEY { .fmtid = Guid.initIntString("3911853206, 8763, 17507, 164, 227, 48, 234, 187, 167, 157, 128"), .pid = 100 };
pub const PKEY_Photo_FNumberNumerator = PROPERTYKEY { .fmtid = Guid.initIntString("462910346, 65020, 17967, 157, 147, 25, 87, 224, 139, 233, 12"), .pid = 100 };
pub const PKEY_Photo_FocalLength = PROPERTYKEY { .fmtid = Guid.initIntString("347610529, 309, 19761, 150, 217, 108, 191, 201, 103, 26, 153"), .pid = 37386 };
pub const PKEY_Photo_FocalLengthDenominator = PROPERTYKEY { .fmtid = Guid.initIntString("811320853, 56481, 17573, 159, 212, 16, 192, 186, 121, 65, 46"), .pid = 100 };
pub const PKEY_Photo_FocalLengthInFilm = PROPERTYKEY { .fmtid = Guid.initIntString("2699511305, 47181, 20297, 184, 96, 70, 43, 217, 151, 31, 152"), .pid = 100 };
pub const PKEY_Photo_FocalLengthNumerator = PROPERTYKEY { .fmtid = Guid.initIntString("2003528507, 7741, 19212, 154, 14, 143, 186, 242, 168, 73, 42"), .pid = 100 };
pub const PKEY_Photo_FocalPlaneXResolution = PROPERTYKEY { .fmtid = Guid.initIntString("3485502871, 50935, 17540, 137, 221, 235, 239, 67, 86, 254, 118"), .pid = 100 };
pub const PKEY_Photo_FocalPlaneXResolutionDenominator = PROPERTYKEY { .fmtid = Guid.initIntString("154399733, 18310, 20294, 168, 232, 214, 77, 211, 127, 165, 33"), .pid = 100 };
pub const PKEY_Photo_FocalPlaneXResolutionNumerator = PROPERTYKEY { .fmtid = Guid.initIntString("3704295599, 46306, 19336, 149, 249, 3, 27, 77, 90, 180, 144"), .pid = 100 };
pub const PKEY_Photo_FocalPlaneYResolution = PROPERTYKEY { .fmtid = Guid.initIntString("1342170320, 37199, 19140, 141, 111, 201, 198, 29, 225, 105, 177"), .pid = 100 };
pub const PKEY_Photo_FocalPlaneYResolutionDenominator = PROPERTYKEY { .fmtid = Guid.initIntString("492927398, 43126, 16433, 176, 19, 51, 71, 178, 182, 77, 200"), .pid = 100 };
pub const PKEY_Photo_FocalPlaneYResolutionNumerator = PROPERTYKEY { .fmtid = Guid.initIntString("2732933573, 17472, 19368, 134, 126, 117, 207, 192, 104, 40, 205"), .pid = 100 };
pub const PKEY_Photo_GainControl = PROPERTYKEY { .fmtid = Guid.initIntString("4197468041, 199, 19840, 144, 74, 30, 77, 204, 114, 101, 170"), .pid = 100 };
pub const PHOTO_GAINCONTROL_NONE = @as(f64, 0);
pub const PHOTO_GAINCONTROL_LOWGAINUP = @as(f64, 1);
pub const PHOTO_GAINCONTROL_HIGHGAINUP = @as(f64, 2);
pub const PHOTO_GAINCONTROL_LOWGAINDOWN = @as(f64, 3);
pub const PHOTO_GAINCONTROL_HIGHGAINDOWN = @as(f64, 4);
pub const PKEY_Photo_GainControlDenominator = PROPERTYKEY { .fmtid = Guid.initIntString("1116098045, 40356, 20343, 189, 237, 74, 173, 123, 37, 103, 53"), .pid = 100 };
pub const PKEY_Photo_GainControlNumerator = PROPERTYKEY { .fmtid = Guid.initIntString("2391723900, 47032, 20152, 166, 63, 14, 231, 21, 201, 111, 158"), .pid = 100 };
pub const PKEY_Photo_GainControlText = PROPERTYKEY { .fmtid = Guid.initIntString("3227662514, 3065, 17017, 167, 35, 37, 133, 103, 21, 203, 157"), .pid = 100 };
pub const PKEY_Photo_ISOSpeed = PROPERTYKEY { .fmtid = Guid.initIntString("347610529, 309, 19761, 150, 217, 108, 191, 201, 103, 26, 153"), .pid = 34855 };
pub const PKEY_Photo_LensManufacturer = PROPERTYKEY { .fmtid = Guid.initIntString("3873295095, 10693, 20234, 154, 104, 209, 148, 18, 236, 112, 144"), .pid = 100 };
pub const PKEY_Photo_LensModel = PROPERTYKEY { .fmtid = Guid.initIntString("3777459478, 11103, 18537, 137, 177, 46, 88, 91, 211, 139, 122"), .pid = 100 };
pub const PKEY_Photo_LightSource = PROPERTYKEY { .fmtid = Guid.initIntString("347610529, 309, 19761, 150, 217, 108, 191, 201, 103, 26, 153"), .pid = 37384 };
pub const PHOTO_LIGHTSOURCE_UNKNOWN = @as(u32, 0);
pub const PHOTO_LIGHTSOURCE_DAYLIGHT = @as(u32, 1);
pub const PHOTO_LIGHTSOURCE_FLUORESCENT = @as(u32, 2);
pub const PHOTO_LIGHTSOURCE_TUNGSTEN = @as(u32, 3);
pub const PHOTO_LIGHTSOURCE_STANDARD_A = @as(u32, 17);
pub const PHOTO_LIGHTSOURCE_STANDARD_B = @as(u32, 18);
pub const PHOTO_LIGHTSOURCE_STANDARD_C = @as(u32, 19);
pub const PHOTO_LIGHTSOURCE_D55 = @as(u32, 20);
pub const PHOTO_LIGHTSOURCE_D65 = @as(u32, 21);
pub const PHOTO_LIGHTSOURCE_D75 = @as(u32, 22);
pub const PKEY_Photo_MakerNote = PROPERTYKEY { .fmtid = Guid.initIntString("4197462867, 46681, 16466, 133, 233, 188, 172, 121, 84, 155, 132"), .pid = 100 };
pub const PKEY_Photo_MakerNoteOffset = PROPERTYKEY { .fmtid = Guid.initIntString("2168406308, 13542, 19735, 171, 62, 107, 31, 60, 34, 71, 161"), .pid = 100 };
pub const PKEY_Photo_MaxAperture = PROPERTYKEY { .fmtid = Guid.initIntString("150394818, 58354, 17660, 175, 30, 90, 165, 200, 26, 45, 62"), .pid = 100 };
pub const PKEY_Photo_MaxApertureDenominator = PROPERTYKEY { .fmtid = Guid.initIntString("3346474196, 24607, 18117, 155, 137, 197, 63, 147, 188, 235, 119"), .pid = 100 };
pub const PKEY_Photo_MaxApertureNumerator = PROPERTYKEY { .fmtid = Guid.initIntString("3238519185, 42073, 17605, 154, 230, 185, 82, 173, 75, 144, 109"), .pid = 100 };
pub const PKEY_Photo_MeteringMode = PROPERTYKEY { .fmtid = Guid.initIntString("347610529, 309, 19761, 150, 217, 108, 191, 201, 103, 26, 153"), .pid = 37383 };
pub const PKEY_Photo_MeteringModeText = PROPERTYKEY { .fmtid = Guid.initIntString("4129881484, 31656, 18010, 166, 91, 197, 170, 121, 38, 58, 158"), .pid = 100 };
pub const PKEY_Photo_Orientation = PROPERTYKEY { .fmtid = Guid.initIntString("347610529, 309, 19761, 150, 217, 108, 191, 201, 103, 26, 153"), .pid = 274 };
pub const PKEY_Photo_OrientationText = PROPERTYKEY { .fmtid = Guid.initIntString("2850691388, 50449, 18826, 160, 107, 88, 226, 119, 109, 204, 40"), .pid = 100 };
pub const PKEY_Photo_PeopleNames = PROPERTYKEY { .fmtid = Guid.initIntString("3895499630, 2124, 18868, 177, 252, 144, 168, 3, 49, 182, 56"), .pid = 100 };
pub const PKEY_Photo_PhotometricInterpretation = PROPERTYKEY { .fmtid = Guid.initIntString("873961201, 7673, 19228, 165, 100, 145, 189, 239, 164, 56, 119"), .pid = 100 };
pub const PKEY_Photo_PhotometricInterpretationText = PROPERTYKEY { .fmtid = Guid.initIntString("2182363094, 40619, 18277, 165, 137, 59, 28, 187, 210, 42, 97"), .pid = 100 };
pub const PKEY_Photo_ProgramMode = PROPERTYKEY { .fmtid = Guid.initIntString("1830911853, 16234, 18469, 180, 112, 95, 3, 202, 47, 190, 155"), .pid = 100 };
pub const PHOTO_PROGRAMMODE_NOTDEFINED = @as(u32, 0);
pub const PHOTO_PROGRAMMODE_MANUAL = @as(u32, 1);
pub const PHOTO_PROGRAMMODE_NORMAL = @as(u32, 2);
pub const PHOTO_PROGRAMMODE_APERTURE = @as(u32, 3);
pub const PHOTO_PROGRAMMODE_SHUTTER = @as(u32, 4);
pub const PHOTO_PROGRAMMODE_CREATIVE = @as(u32, 5);
pub const PHOTO_PROGRAMMODE_ACTION = @as(u32, 6);
pub const PHOTO_PROGRAMMODE_PORTRAIT = @as(u32, 7);
pub const PHOTO_PROGRAMMODE_LANDSCAPE = @as(u32, 8);
pub const PKEY_Photo_ProgramModeText = PROPERTYKEY { .fmtid = Guid.initIntString("2145626663, 9800, 17139, 137, 176, 69, 78, 92, 177, 80, 195"), .pid = 100 };
pub const PKEY_Photo_RelatedSoundFile = PROPERTYKEY { .fmtid = Guid.initIntString("831155013, 2175, 19906, 184, 204, 5, 53, 149, 81, 252, 158"), .pid = 100 };
pub const PKEY_Photo_Saturation = PROPERTYKEY { .fmtid = Guid.initIntString("1227060005, 43354, 20327, 178, 17, 129, 107, 45, 69, 210, 224"), .pid = 100 };
pub const PHOTO_SATURATION_NORMAL = @as(u32, 0);
pub const PHOTO_SATURATION_LOW = @as(u32, 1);
pub const PHOTO_SATURATION_HIGH = @as(u32, 2);
pub const PKEY_Photo_SaturationText = PROPERTYKEY { .fmtid = Guid.initIntString("1632078856, 46592, 19076, 187, 228, 233, 156, 69, 240, 160, 114"), .pid = 100 };
pub const PKEY_Photo_Sharpness = PROPERTYKEY { .fmtid = Guid.initIntString("4234770139, 33609, 18800, 174, 151, 179, 197, 49, 106, 8, 240"), .pid = 100 };
pub const PHOTO_SHARPNESS_NORMAL = @as(u32, 0);
pub const PHOTO_SHARPNESS_SOFT = @as(u32, 1);
pub const PHOTO_SHARPNESS_HARD = @as(u32, 2);
pub const PKEY_Photo_SharpnessText = PROPERTYKEY { .fmtid = Guid.initIntString("1374437191, 56656, 16925, 135, 105, 51, 79, 80, 66, 75, 30"), .pid = 100 };
pub const PKEY_Photo_ShutterSpeed = PROPERTYKEY { .fmtid = Guid.initIntString("347610529, 309, 19761, 150, 217, 108, 191, 201, 103, 26, 153"), .pid = 37377 };
pub const PKEY_Photo_ShutterSpeedDenominator = PROPERTYKEY { .fmtid = Guid.initIntString("3778906485, 33223, 18760, 174, 63, 55, 202, 225, 30, 143, 247"), .pid = 100 };
pub const PKEY_Photo_ShutterSpeedNumerator = PROPERTYKEY { .fmtid = Guid.initIntString("384450626, 55028, 19402, 131, 73, 124, 120, 211, 15, 179, 51"), .pid = 100 };
pub const PKEY_Photo_SubjectDistance = PROPERTYKEY { .fmtid = Guid.initIntString("347610529, 309, 19761, 150, 217, 108, 191, 201, 103, 26, 153"), .pid = 37382 };
pub const PKEY_Photo_SubjectDistanceDenominator = PROPERTYKEY { .fmtid = Guid.initIntString("209980040, 45123, 18029, 151, 102, 212, 178, 109, 163, 250, 119"), .pid = 100 };
pub const PKEY_Photo_SubjectDistanceNumerator = PROPERTYKEY { .fmtid = Guid.initIntString("2331285020, 62758, 17381, 170, 129, 219, 118, 130, 25, 23, 141"), .pid = 100 };
pub const PKEY_Photo_TagViewAggregate = PROPERTYKEY { .fmtid = Guid.initIntString("3088249181, 49880, 19391, 186, 205, 121, 116, 67, 70, 17, 63"), .pid = 100 };
pub const PKEY_Photo_TranscodedForSync = PROPERTYKEY { .fmtid = Guid.initIntString("2593045365, 25688, 20098, 186, 203, 53, 192, 9, 91, 3, 187"), .pid = 100 };
pub const PKEY_Photo_WhiteBalance = PROPERTYKEY { .fmtid = Guid.initIntString("3996990858, 21377, 19706, 177, 59, 170, 246, 107, 95, 78, 201"), .pid = 100 };
pub const PHOTO_WHITEBALANCE_AUTO = @as(u32, 0);
pub const PHOTO_WHITEBALANCE_MANUAL = @as(u32, 1);
pub const PKEY_Photo_WhiteBalanceText = PROPERTYKEY { .fmtid = Guid.initIntString("1664530782, 51111, 17005, 134, 253, 122, 227, 211, 156, 132, 180"), .pid = 100 };
pub const PKEY_PropGroup_Advanced = PROPERTYKEY { .fmtid = Guid.initIntString("2416590907, 2427, 19349, 138, 226, 7, 31, 218, 238, 177, 24"), .pid = 100 };
pub const PKEY_PropGroup_Audio = PROPERTYKEY { .fmtid = Guid.initIntString("671405161, 30863, 18602, 133, 112, 113, 185, 193, 135, 225, 56"), .pid = 100 };
pub const PKEY_PropGroup_Calendar = PROPERTYKEY { .fmtid = Guid.initIntString("2574504629, 49112, 17290, 186, 148, 83, 73, 178, 147, 24, 26"), .pid = 100 };
pub const PKEY_PropGroup_Camera = PROPERTYKEY { .fmtid = Guid.initIntString("3724598834, 21630, 18817, 173, 75, 84, 47, 46, 144, 7, 216"), .pid = 100 };
pub const PKEY_PropGroup_Contact = PROPERTYKEY { .fmtid = Guid.initIntString("3751239635, 9482, 16388, 133, 143, 52, 226, 154, 62, 55, 170"), .pid = 100 };
pub const PKEY_PropGroup_Content = PROPERTYKEY { .fmtid = Guid.initIntString("3503993018, 13962, 16464, 168, 130, 108, 1, 15, 209, 154, 79"), .pid = 100 };
pub const PKEY_PropGroup_Description = PROPERTYKEY { .fmtid = Guid.initIntString("2305405557, 38005, 19968, 168, 135, 255, 147, 184, 180, 30, 68"), .pid = 100 };
pub const PKEY_PropGroup_FileSystem = PROPERTYKEY { .fmtid = Guid.initIntString("3819426497, 33020, 19264, 143, 52, 48, 234, 17, 27, 220, 46"), .pid = 100 };
pub const PKEY_PropGroup_General = PROPERTYKEY { .fmtid = Guid.initIntString("3425703472, 45458, 19490, 179, 114, 159, 76, 109, 51, 142, 7"), .pid = 100 };
pub const PKEY_PropGroup_GPS = PROPERTYKEY { .fmtid = Guid.initIntString("4084284122, 37091, 19985, 170, 229, 253, 193, 118, 133, 185, 190"), .pid = 100 };
pub const PKEY_PropGroup_Image = PROPERTYKEY { .fmtid = Guid.initIntString("3815312007, 4008, 18986, 154, 159, 252, 232, 130, 112, 85, 172"), .pid = 100 };
pub const PKEY_PropGroup_Media = PROPERTYKEY { .fmtid = Guid.initIntString("1636248823, 27486, 19275, 172, 45, 89, 218, 132, 69, 146, 72"), .pid = 100 };
pub const PKEY_PropGroup_MediaAdvanced = PROPERTYKEY { .fmtid = Guid.initIntString("2287575684, 56958, 17986, 153, 186, 212, 49, 208, 68, 177, 236"), .pid = 100 };
pub const PKEY_PropGroup_Message = PROPERTYKEY { .fmtid = Guid.initIntString("2144806301, 5812, 16693, 159, 151, 124, 150, 236, 210, 250, 158"), .pid = 100 };
pub const PKEY_PropGroup_Music = PROPERTYKEY { .fmtid = Guid.initIntString("1759338644, 29206, 16625, 160, 41, 67, 254, 113, 39, 4, 63"), .pid = 100 };
pub const PKEY_PropGroup_Origin = PROPERTYKEY { .fmtid = Guid.initIntString("630772475, 21865, 17255, 149, 223, 92, 211, 161, 119, 225, 165"), .pid = 100 };
pub const PKEY_PropGroup_PhotoAdvanced = PROPERTYKEY { .fmtid = Guid.initIntString("213040986, 40679, 19078, 130, 34, 240, 30, 7, 253, 173, 175"), .pid = 100 };
pub const PKEY_PropGroup_RecordedTV = PROPERTYKEY { .fmtid = Guid.initIntString("3887280696, 25988, 16752, 165, 192, 172, 37, 239, 217, 218, 86"), .pid = 100 };
pub const PKEY_PropGroup_Video = PROPERTYKEY { .fmtid = Guid.initIntString("3200125216, 30321, 19540, 163, 235, 73, 253, 223, 193, 145, 238"), .pid = 100 };
pub const PKEY_InfoTipText = PROPERTYKEY { .fmtid = Guid.initIntString("3381938721, 41990, 18686, 130, 37, 174, 199, 226, 76, 33, 27"), .pid = 17 };
pub const PKEY_PropList_ConflictPrompt = PROPERTYKEY { .fmtid = Guid.initIntString("3381938721, 41990, 18686, 130, 37, 174, 199, 226, 76, 33, 27"), .pid = 11 };
pub const PKEY_PropList_ContentViewModeForBrowse = PROPERTYKEY { .fmtid = Guid.initIntString("3381938721, 41990, 18686, 130, 37, 174, 199, 226, 76, 33, 27"), .pid = 13 };
pub const PKEY_PropList_ContentViewModeForSearch = PROPERTYKEY { .fmtid = Guid.initIntString("3381938721, 41990, 18686, 130, 37, 174, 199, 226, 76, 33, 27"), .pid = 14 };
pub const PKEY_PropList_ExtendedTileInfo = PROPERTYKEY { .fmtid = Guid.initIntString("3381938721, 41990, 18686, 130, 37, 174, 199, 226, 76, 33, 27"), .pid = 9 };
pub const PKEY_PropList_FileOperationPrompt = PROPERTYKEY { .fmtid = Guid.initIntString("3381938721, 41990, 18686, 130, 37, 174, 199, 226, 76, 33, 27"), .pid = 10 };
pub const PKEY_PropList_FullDetails = PROPERTYKEY { .fmtid = Guid.initIntString("3381938721, 41990, 18686, 130, 37, 174, 199, 226, 76, 33, 27"), .pid = 2 };
pub const PKEY_PropList_InfoTip = PROPERTYKEY { .fmtid = Guid.initIntString("3381938721, 41990, 18686, 130, 37, 174, 199, 226, 76, 33, 27"), .pid = 4 };
pub const PKEY_PropList_NonPersonal = PROPERTYKEY { .fmtid = Guid.initIntString("1238436127, 2094, 18751, 178, 63, 210, 48, 138, 169, 102, 140"), .pid = 100 };
pub const PKEY_PropList_PreviewDetails = PROPERTYKEY { .fmtid = Guid.initIntString("3381938721, 41990, 18686, 130, 37, 174, 199, 226, 76, 33, 27"), .pid = 8 };
pub const PKEY_PropList_PreviewTitle = PROPERTYKEY { .fmtid = Guid.initIntString("3381938721, 41990, 18686, 130, 37, 174, 199, 226, 76, 33, 27"), .pid = 6 };
pub const PKEY_PropList_QuickTip = PROPERTYKEY { .fmtid = Guid.initIntString("3381938721, 41990, 18686, 130, 37, 174, 199, 226, 76, 33, 27"), .pid = 5 };
pub const PKEY_PropList_TileInfo = PROPERTYKEY { .fmtid = Guid.initIntString("3381938721, 41990, 18686, 130, 37, 174, 199, 226, 76, 33, 27"), .pid = 3 };
pub const PKEY_PropList_XPDetailsPanel = PROPERTYKEY { .fmtid = Guid.initIntString("4062663808, 63362, 17041, 189, 148, 241, 54, 147, 81, 58, 236"), .pid = 0 };
pub const PKEY_RecordedTV_ChannelNumber = PROPERTYKEY { .fmtid = Guid.initIntString("1836355042, 36152, 19651, 172, 96, 240, 9, 176, 87, 197, 87"), .pid = 7 };
pub const PKEY_RecordedTV_Credits = PROPERTYKEY { .fmtid = Guid.initIntString("1836355042, 36152, 19651, 172, 96, 240, 9, 176, 87, 197, 87"), .pid = 4 };
pub const PKEY_RecordedTV_DateContentExpires = PROPERTYKEY { .fmtid = Guid.initIntString("1836355042, 36152, 19651, 172, 96, 240, 9, 176, 87, 197, 87"), .pid = 15 };
pub const PKEY_RecordedTV_EpisodeName = PROPERTYKEY { .fmtid = Guid.initIntString("1836355042, 36152, 19651, 172, 96, 240, 9, 176, 87, 197, 87"), .pid = 2 };
pub const PKEY_RecordedTV_IsATSCContent = PROPERTYKEY { .fmtid = Guid.initIntString("1836355042, 36152, 19651, 172, 96, 240, 9, 176, 87, 197, 87"), .pid = 16 };
pub const PKEY_RecordedTV_IsClosedCaptioningAvailable = PROPERTYKEY { .fmtid = Guid.initIntString("1836355042, 36152, 19651, 172, 96, 240, 9, 176, 87, 197, 87"), .pid = 12 };
pub const PKEY_RecordedTV_IsDTVContent = PROPERTYKEY { .fmtid = Guid.initIntString("1836355042, 36152, 19651, 172, 96, 240, 9, 176, 87, 197, 87"), .pid = 17 };
pub const PKEY_RecordedTV_IsHDContent = PROPERTYKEY { .fmtid = Guid.initIntString("1836355042, 36152, 19651, 172, 96, 240, 9, 176, 87, 197, 87"), .pid = 18 };
pub const PKEY_RecordedTV_IsRepeatBroadcast = PROPERTYKEY { .fmtid = Guid.initIntString("1836355042, 36152, 19651, 172, 96, 240, 9, 176, 87, 197, 87"), .pid = 13 };
pub const PKEY_RecordedTV_IsSAP = PROPERTYKEY { .fmtid = Guid.initIntString("1836355042, 36152, 19651, 172, 96, 240, 9, 176, 87, 197, 87"), .pid = 14 };
pub const PKEY_RecordedTV_NetworkAffiliation = PROPERTYKEY { .fmtid = Guid.initIntString("743688211, 64355, 20002, 161, 171, 11, 51, 28, 161, 226, 115"), .pid = 100 };
pub const PKEY_RecordedTV_OriginalBroadcastDate = PROPERTYKEY { .fmtid = Guid.initIntString("1183121047, 34661, 18498, 156, 19, 240, 6, 68, 123, 23, 140"), .pid = 100 };
pub const PKEY_RecordedTV_ProgramDescription = PROPERTYKEY { .fmtid = Guid.initIntString("1836355042, 36152, 19651, 172, 96, 240, 9, 176, 87, 197, 87"), .pid = 3 };
pub const PKEY_RecordedTV_RecordingTime = PROPERTYKEY { .fmtid = Guid.initIntString("2772926305, 31362, 20170, 157, 222, 152, 182, 155, 36, 121, 179"), .pid = 100 };
pub const PKEY_RecordedTV_StationCallSign = PROPERTYKEY { .fmtid = Guid.initIntString("1836355042, 36152, 19651, 172, 96, 240, 9, 176, 87, 197, 87"), .pid = 5 };
pub const PKEY_RecordedTV_StationName = PROPERTYKEY { .fmtid = Guid.initIntString("458504679, 60321, 19192, 189, 215, 122, 241, 212, 84, 148, 147"), .pid = 100 };
pub const PKEY_Search_AutoSummary = PROPERTYKEY { .fmtid = Guid.initIntString("1443641024, 20538, 4559, 186, 161, 0, 0, 76, 117, 42, 154"), .pid = 2 };
pub const PKEY_Search_ContainerHash = PROPERTYKEY { .fmtid = Guid.initIntString("3169772163, 13791, 19795, 130, 106, 243, 106, 62, 239, 198, 190"), .pid = 100 };
pub const PKEY_Search_Contents = PROPERTYKEY { .fmtid = Guid.initIntString("3072717104, 18415, 4122, 165, 241, 2, 96, 140, 158, 235, 172"), .pid = 19 };
pub const PKEY_Search_EntryID = PROPERTYKEY { .fmtid = Guid.initIntString("1231625360, 32279, 4122, 169, 28, 8, 0, 43, 46, 205, 169"), .pid = 5 };
pub const PKEY_Search_ExtendedProperties = PROPERTYKEY { .fmtid = Guid.initIntString("2063840582, 64079, 19026, 162, 254, 3, 213, 49, 30, 88, 101"), .pid = 100 };
pub const PKEY_Search_GatherTime = PROPERTYKEY { .fmtid = Guid.initIntString("191095632, 40140, 4560, 188, 219, 0, 128, 95, 204, 206, 4"), .pid = 8 };
pub const PKEY_Search_HitCount = PROPERTYKEY { .fmtid = Guid.initIntString("1231625360, 32279, 4122, 169, 28, 8, 0, 43, 46, 205, 169"), .pid = 4 };
pub const PKEY_Search_IsClosedDirectory = PROPERTYKEY { .fmtid = Guid.initIntString("191095619, 40140, 4560, 188, 219, 0, 128, 95, 204, 206, 4"), .pid = 23 };
pub const PKEY_Search_IsFullyContained = PROPERTYKEY { .fmtid = Guid.initIntString("191095619, 40140, 4560, 188, 219, 0, 128, 95, 204, 206, 4"), .pid = 24 };
pub const PKEY_Search_QueryFocusedSummary = PROPERTYKEY { .fmtid = Guid.initIntString("1443641024, 20538, 4559, 186, 161, 0, 0, 76, 117, 42, 154"), .pid = 3 };
pub const PKEY_Search_QueryFocusedSummaryWithFallback = PROPERTYKEY { .fmtid = Guid.initIntString("1443641024, 20538, 4559, 186, 161, 0, 0, 76, 117, 42, 154"), .pid = 4 };
pub const PKEY_Search_QueryPropertyHits = PROPERTYKEY { .fmtid = Guid.initIntString("1231625360, 32279, 4122, 169, 28, 8, 0, 43, 46, 205, 169"), .pid = 21 };
pub const PKEY_Search_Rank = PROPERTYKEY { .fmtid = Guid.initIntString("1231625360, 32279, 4122, 169, 28, 8, 0, 43, 46, 205, 169"), .pid = 3 };
pub const PKEY_Search_Store = PROPERTYKEY { .fmtid = Guid.initIntString("2691273395, 36015, 20183, 165, 71, 178, 89, 227, 42, 201, 252"), .pid = 100 };
pub const PKEY_Search_UrlToIndex = PROPERTYKEY { .fmtid = Guid.initIntString("191095619, 40140, 4560, 188, 219, 0, 128, 95, 204, 206, 4"), .pid = 2 };
pub const PKEY_Search_UrlToIndexWithModificationTime = PROPERTYKEY { .fmtid = Guid.initIntString("191095619, 40140, 4560, 188, 219, 0, 128, 95, 204, 206, 4"), .pid = 12 };
pub const PKEY_Supplemental_Album = PROPERTYKEY { .fmtid = Guid.initIntString("208908609, 14806, 18003, 166, 131, 202, 178, 145, 234, 249, 91"), .pid = 6 };
pub const PKEY_Supplemental_AlbumID = PROPERTYKEY { .fmtid = Guid.initIntString("208908609, 14806, 18003, 166, 131, 202, 178, 145, 234, 249, 91"), .pid = 2 };
pub const PKEY_Supplemental_Location = PROPERTYKEY { .fmtid = Guid.initIntString("208908609, 14806, 18003, 166, 131, 202, 178, 145, 234, 249, 91"), .pid = 5 };
pub const PKEY_Supplemental_Person = PROPERTYKEY { .fmtid = Guid.initIntString("208908609, 14806, 18003, 166, 131, 202, 178, 145, 234, 249, 91"), .pid = 7 };
pub const PKEY_Supplemental_ResourceId = PROPERTYKEY { .fmtid = Guid.initIntString("208908609, 14806, 18003, 166, 131, 202, 178, 145, 234, 249, 91"), .pid = 3 };
pub const PKEY_Supplemental_Tag = PROPERTYKEY { .fmtid = Guid.initIntString("208908609, 14806, 18003, 166, 131, 202, 178, 145, 234, 249, 91"), .pid = 4 };
pub const PKEY_DescriptionID = PROPERTYKEY { .fmtid = Guid.initIntString("677604006, 38205, 4562, 181, 214, 0, 192, 79, 217, 24, 208"), .pid = 2 };
pub const PKEY_InternalName = PROPERTYKEY { .fmtid = Guid.initIntString("217021779, 64100, 4561, 162, 3, 0, 0, 248, 31, 237, 238"), .pid = 5 };
pub const PKEY_LibraryLocationsCount = PROPERTYKEY { .fmtid = Guid.initIntString("2424739527, 36743, 17650, 128, 237, 168, 193, 198, 137, 69, 117"), .pid = 2 };
pub const PKEY_Link_TargetSFGAOFlagsStrings = PROPERTYKEY { .fmtid = Guid.initIntString("3600031873, 54587, 17469, 173, 71, 94, 5, 157, 156, 210, 122"), .pid = 3 };
pub const PKEY_Link_TargetUrl = PROPERTYKEY { .fmtid = Guid.initIntString("1556031367, 18639, 16904, 185, 14, 238, 94, 93, 66, 2, 148"), .pid = 2 };
pub const PKEY_NamespaceCLSID = PROPERTYKEY { .fmtid = Guid.initIntString("677604006, 38205, 4562, 181, 214, 0, 192, 79, 217, 24, 208"), .pid = 6 };
pub const PKEY_Shell_SFGAOFlagsStrings = PROPERTYKEY { .fmtid = Guid.initIntString("3600031873, 54587, 17469, 173, 71, 94, 5, 157, 156, 210, 122"), .pid = 2 };
pub const SFGAOSTR_FILESYS = "filesys";
pub const SFGAOSTR_FILEANC = "fileanc";
pub const SFGAOSTR_STORAGEANC = "storageanc";
pub const SFGAOSTR_STREAM = "stream";
pub const SFGAOSTR_LINK = "link";
pub const SFGAOSTR_HIDDEN = "hidden";
pub const SFGAOSTR_SUPERHIDDEN = "superhidden";
pub const SFGAOSTR_FOLDER = "folder";
pub const SFGAOSTR_NONENUM = "nonenum";
pub const SFGAOSTR_BROWSABLE = "browsable";
pub const SFGAOSTR_SYSTEM = "system";
pub const SFGAOSTR_PLACEHOLDER = "placeholder";
pub const PKEY_StatusBarSelectedItemCount = PROPERTYKEY { .fmtid = Guid.initIntString("651962492, 28221, 19411, 178, 176, 106, 38, 186, 46, 52, 109"), .pid = 3 };
pub const PKEY_StatusBarViewItemCount = PROPERTYKEY { .fmtid = Guid.initIntString("651962492, 28221, 19411, 178, 176, 106, 38, 186, 46, 52, 109"), .pid = 2 };
pub const PKEY_AppUserModel_ExcludeFromShowInNewInstall = PROPERTYKEY { .fmtid = Guid.initIntString("2672568405, 40825, 19257, 168, 208, 225, 212, 45, 225, 213, 243"), .pid = 8 };
pub const PKEY_AppUserModel_ID = PROPERTYKEY { .fmtid = Guid.initIntString("2672568405, 40825, 19257, 168, 208, 225, 212, 45, 225, 213, 243"), .pid = 5 };
pub const PKEY_AppUserModel_IsDestListSeparator = PROPERTYKEY { .fmtid = Guid.initIntString("2672568405, 40825, 19257, 168, 208, 225, 212, 45, 225, 213, 243"), .pid = 6 };
pub const PKEY_AppUserModel_IsDualMode = PROPERTYKEY { .fmtid = Guid.initIntString("2672568405, 40825, 19257, 168, 208, 225, 212, 45, 225, 213, 243"), .pid = 11 };
pub const PKEY_AppUserModel_PreventPinning = PROPERTYKEY { .fmtid = Guid.initIntString("2672568405, 40825, 19257, 168, 208, 225, 212, 45, 225, 213, 243"), .pid = 9 };
pub const PKEY_AppUserModel_RelaunchCommand = PROPERTYKEY { .fmtid = Guid.initIntString("2672568405, 40825, 19257, 168, 208, 225, 212, 45, 225, 213, 243"), .pid = 2 };
pub const PKEY_AppUserModel_RelaunchDisplayNameResource = PROPERTYKEY { .fmtid = Guid.initIntString("2672568405, 40825, 19257, 168, 208, 225, 212, 45, 225, 213, 243"), .pid = 4 };
pub const PKEY_AppUserModel_RelaunchIconResource = PROPERTYKEY { .fmtid = Guid.initIntString("2672568405, 40825, 19257, 168, 208, 225, 212, 45, 225, 213, 243"), .pid = 3 };
pub const PKEY_AppUserModel_SettingsCommand = PROPERTYKEY { .fmtid = Guid.initIntString("2672568405, 40825, 19257, 168, 208, 225, 212, 45, 225, 213, 243"), .pid = 38 };
pub const PKEY_AppUserModel_StartPinOption = PROPERTYKEY { .fmtid = Guid.initIntString("2672568405, 40825, 19257, 168, 208, 225, 212, 45, 225, 213, 243"), .pid = 12 };
pub const APPUSERMODEL_STARTPINOPTION_DEFAULT = @as(u32, 0);
pub const APPUSERMODEL_STARTPINOPTION_NOPINONINSTALL = @as(u32, 1);
pub const APPUSERMODEL_STARTPINOPTION_USERPINNED = @as(u32, 2);
pub const PKEY_AppUserModel_ToastActivatorCLSID = PROPERTYKEY { .fmtid = Guid.initIntString("2672568405, 40825, 19257, 168, 208, 225, 212, 45, 225, 213, 243"), .pid = 26 };
pub const PKEY_AppUserModel_UninstallCommand = PROPERTYKEY { .fmtid = Guid.initIntString("2672568405, 40825, 19257, 168, 208, 225, 212, 45, 225, 213, 243"), .pid = 37 };
pub const PKEY_AppUserModel_VisualElementsManifestHintPath = PROPERTYKEY { .fmtid = Guid.initIntString("2672568405, 40825, 19257, 168, 208, 225, 212, 45, 225, 213, 243"), .pid = 31 };
pub const PKEY_EdgeGesture_DisableTouchWhenFullscreen = PROPERTYKEY { .fmtid = Guid.initIntString("852375730, 11418, 16817, 155, 197, 179, 120, 67, 148, 170, 68"), .pid = 2 };
pub const PKEY_Software_DateLastUsed = PROPERTYKEY { .fmtid = Guid.initIntString("2216578960, 65369, 19734, 137, 71, 232, 27, 191, 250, 179, 109"), .pid = 16 };
pub const PKEY_Software_ProductName = PROPERTYKEY { .fmtid = Guid.initIntString("217021779, 64100, 4561, 162, 3, 0, 0, 248, 31, 237, 238"), .pid = 7 };
pub const PKEY_Sync_Comments = PROPERTYKEY { .fmtid = Guid.initIntString("2077578046, 44821, 17627, 184, 200, 189, 102, 36, 225, 208, 50"), .pid = 13 };
pub const PKEY_Sync_ConflictDescription = PROPERTYKEY { .fmtid = Guid.initIntString("3461398873, 12216, 16893, 190, 104, 211, 224, 66, 226, 116, 188"), .pid = 4 };
pub const PKEY_Sync_ConflictFirstLocation = PROPERTYKEY { .fmtid = Guid.initIntString("3461398873, 12216, 16893, 190, 104, 211, 224, 66, 226, 116, 188"), .pid = 6 };
pub const PKEY_Sync_ConflictSecondLocation = PROPERTYKEY { .fmtid = Guid.initIntString("3461398873, 12216, 16893, 190, 104, 211, 224, 66, 226, 116, 188"), .pid = 7 };
pub const PKEY_Sync_HandlerCollectionID = PROPERTYKEY { .fmtid = Guid.initIntString("2077578046, 44821, 17627, 184, 200, 189, 102, 36, 225, 208, 50"), .pid = 2 };
pub const PKEY_Sync_HandlerID = PROPERTYKEY { .fmtid = Guid.initIntString("2077578046, 44821, 17627, 184, 200, 189, 102, 36, 225, 208, 50"), .pid = 3 };
pub const PKEY_Sync_HandlerName = PROPERTYKEY { .fmtid = Guid.initIntString("3461398873, 12216, 16893, 190, 104, 211, 224, 66, 226, 116, 188"), .pid = 2 };
pub const PKEY_Sync_HandlerType = PROPERTYKEY { .fmtid = Guid.initIntString("2077578046, 44821, 17627, 184, 200, 189, 102, 36, 225, 208, 50"), .pid = 8 };
pub const SYNC_HANDLERTYPE_OTHER = @as(u32, 0);
pub const SYNC_HANDLERTYPE_PROGRAMS = @as(u32, 1);
pub const SYNC_HANDLERTYPE_DEVICES = @as(u32, 2);
pub const SYNC_HANDLERTYPE_FOLDERS = @as(u32, 3);
pub const SYNC_HANDLERTYPE_WEBSERVICES = @as(u32, 4);
pub const SYNC_HANDLERTYPE_COMPUTERS = @as(u32, 5);
pub const PKEY_Sync_HandlerTypeLabel = PROPERTYKEY { .fmtid = Guid.initIntString("2077578046, 44821, 17627, 184, 200, 189, 102, 36, 225, 208, 50"), .pid = 9 };
pub const PKEY_Sync_ItemID = PROPERTYKEY { .fmtid = Guid.initIntString("2077578046, 44821, 17627, 184, 200, 189, 102, 36, 225, 208, 50"), .pid = 6 };
pub const PKEY_Sync_ItemName = PROPERTYKEY { .fmtid = Guid.initIntString("3461398873, 12216, 16893, 190, 104, 211, 224, 66, 226, 116, 188"), .pid = 3 };
pub const PKEY_Sync_ProgressPercentage = PROPERTYKEY { .fmtid = Guid.initIntString("2077578046, 44821, 17627, 184, 200, 189, 102, 36, 225, 208, 50"), .pid = 23 };
pub const PKEY_Sync_State = PROPERTYKEY { .fmtid = Guid.initIntString("2077578046, 44821, 17627, 184, 200, 189, 102, 36, 225, 208, 50"), .pid = 24 };
pub const SYNC_STATE_NOTSETUP = @as(u32, 0);
pub const SYNC_STATE_SYNCNOTRUN = @as(u32, 1);
pub const SYNC_STATE_IDLE = @as(u32, 2);
pub const SYNC_STATE_ERROR = @as(u32, 3);
pub const SYNC_STATE_PENDING = @as(u32, 4);
pub const SYNC_STATE_SYNCING = @as(u32, 5);
pub const PKEY_Sync_Status = PROPERTYKEY { .fmtid = Guid.initIntString("2077578046, 44821, 17627, 184, 200, 189, 102, 36, 225, 208, 50"), .pid = 10 };
pub const PKEY_Task_BillingInformation = PROPERTYKEY { .fmtid = Guid.initIntString("3548205766, 9756, 17155, 130, 179, 8, 185, 38, 172, 111, 18"), .pid = 100 };
pub const PKEY_Task_CompletionStatus = PROPERTYKEY { .fmtid = Guid.initIntString("139299338, 59093, 16606, 191, 31, 200, 130, 14, 124, 135, 124"), .pid = 100 };
pub const PKEY_Task_Owner = PROPERTYKEY { .fmtid = Guid.initIntString("147311711, 24818, 17556, 173, 117, 85, 227, 224, 181, 173, 208"), .pid = 100 };
pub const PKEY_Video_Compression = PROPERTYKEY { .fmtid = Guid.initIntString("1682179217, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 10 };
pub const PKEY_Video_Director = PROPERTYKEY { .fmtid = Guid.initIntString("1682179218, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 20 };
pub const PKEY_Video_EncodingBitrate = PROPERTYKEY { .fmtid = Guid.initIntString("1682179217, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 8 };
pub const PKEY_Video_FourCC = PROPERTYKEY { .fmtid = Guid.initIntString("1682179217, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 44 };
pub const PKEY_Video_FrameHeight = PROPERTYKEY { .fmtid = Guid.initIntString("1682179217, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 4 };
pub const PKEY_Video_FrameRate = PROPERTYKEY { .fmtid = Guid.initIntString("1682179217, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 6 };
pub const PKEY_Video_FrameWidth = PROPERTYKEY { .fmtid = Guid.initIntString("1682179217, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 3 };
pub const PKEY_Video_HorizontalAspectRatio = PROPERTYKEY { .fmtid = Guid.initIntString("1682179217, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 42 };
pub const PKEY_Video_IsSpherical = PROPERTYKEY { .fmtid = Guid.initIntString("1682179217, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 100 };
pub const PKEY_Video_IsStereo = PROPERTYKEY { .fmtid = Guid.initIntString("1682179217, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 98 };
pub const PKEY_Video_Orientation = PROPERTYKEY { .fmtid = Guid.initIntString("1682179217, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 99 };
pub const PKEY_Video_SampleSize = PROPERTYKEY { .fmtid = Guid.initIntString("1682179217, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 9 };
pub const PKEY_Video_StreamName = PROPERTYKEY { .fmtid = Guid.initIntString("1682179217, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 2 };
pub const PKEY_Video_StreamNumber = PROPERTYKEY { .fmtid = Guid.initIntString("1682179217, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 11 };
pub const PKEY_Video_TotalBitrate = PROPERTYKEY { .fmtid = Guid.initIntString("1682179217, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 43 };
pub const PKEY_Video_TranscodedForSync = PROPERTYKEY { .fmtid = Guid.initIntString("1682179217, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 46 };
pub const PKEY_Video_VerticalAspectRatio = PROPERTYKEY { .fmtid = Guid.initIntString("1682179217, 19595, 4561, 139, 112, 8, 0, 54, 177, 26, 3"), .pid = 45 };
pub const PKEY_Volume_FileSystem = PROPERTYKEY { .fmtid = Guid.initIntString("2601995061, 16639, 4562, 162, 126, 0, 192, 79, 195, 8, 113"), .pid = 4 };
pub const PKEY_Volume_IsMappedDrive = PROPERTYKEY { .fmtid = Guid.initIntString("345770857, 11309, 18684, 128, 143, 211, 24, 215, 140, 70, 54"), .pid = 2 };
pub const PKEY_Volume_IsRoot = PROPERTYKEY { .fmtid = Guid.initIntString("2601995061, 16639, 4562, 162, 126, 0, 192, 79, 195, 8, 113"), .pid = 10 };
pub const ACT_AUTHORIZE_ON_RESUME = @as(u32, 1);
pub const ACT_AUTHORIZE_ON_SESSION_UNLOCK = @as(u32, 2);
pub const ACT_UNAUTHORIZE_ON_SUSPEND = @as(u32, 1);
pub const ACT_UNAUTHORIZE_ON_SESSION_LOCK = @as(u32, 2);
pub const ES_RESERVED_COM_ERROR_START = @as(u32, 0);
pub const ES_RESERVED_COM_ERROR_END = @as(u32, 511);
pub const ES_GENERAL_ERROR_START = @as(u32, 512);
pub const ES_GENERAL_ERROR_END = @as(u32, 1023);
pub const ES_AUTHN_ERROR_START = @as(u32, 1024);
pub const ES_AUTHN_ERROR_END = @as(u32, 1279);
pub const ES_RESERVED_SILO_ERROR_START = @as(u32, 1280);
pub const ES_RESERVED_SILO_ERROR_END = @as(u32, 4095);
pub const ES_PW_SILO_ERROR_START = @as(u32, 4352);
pub const ES_PW_SILO_ERROR_END = @as(u32, 4607);
pub const ES_RESERVED_SILO_SPECIFIC_ERROR_START = @as(u32, 4608);
pub const ES_RESERVED_SILO_SPECIFIC_ERROR_END = @as(u32, 49151);
pub const ES_VENDOR_ERROR_START = @as(u32, 49152);
pub const ES_VENDOR_ERROR_END = @as(u32, 65535);
pub const FACILITY_ENHANCED_STORAGE = @as(u32, 4);
pub const ES_E_INVALID_RESPONSE = @as(u32, 3221488128);
pub const ES_E_UNPROVISIONED_HARDWARE = @as(u32, 3221488132);
pub const ES_E_UNSUPPORTED_HARDWARE = @as(u32, 3221488133);
pub const ES_E_INCOMPLETE_COMMAND = @as(u32, 3221488134);
pub const ES_E_BAD_SEQUENCE = @as(u32, 3221488135);
pub const ES_E_NO_PROBE = @as(u32, 3221488136);
pub const ES_E_INVALID_SILO = @as(u32, 3221488137);
pub const ES_E_INVALID_CAPABILITY = @as(u32, 3221488138);
pub const ES_E_GROUP_POLICY_FORBIDDEN_USE = @as(u32, 3221488139);
pub const ES_E_GROUP_POLICY_FORBIDDEN_OPERATION = @as(u32, 3221488140);
pub const ES_E_INVALID_PARAM_COMBINATION = @as(u32, 3221488141);
pub const ES_E_INVALID_PARAM_LENGTH = @as(u32, 3221488142);
pub const ES_E_INCONSISTENT_PARAM_LENGTH = @as(u32, 3221488143);
pub const ES_E_NO_AUTHENTICATION_REQUIRED = @as(u32, 3221488640);
pub const ES_E_INVALID_FIELD_IDENTIFIER = @as(u32, 3221491968);
pub const ES_E_CHALLENGE_MISMATCH = @as(u32, 3221491969);
pub const ES_E_CHALLENGE_SIZE_MISMATCH = @as(u32, 3221491970);
pub const ES_E_FRIENDLY_NAME_TOO_LONG = @as(u32, 3221491971);
pub const ES_E_SILO_NAME_TOO_LONG = @as(u32, 3221491972);
pub const ES_E_PASSWORD_TOO_LONG = @as(u32, 3221491973);
pub const ES_E_PASSWORD_HINT_TOO_LONG = @as(u32, 3221491974);
pub const ES_E_OTHER_SECURITY_PROTOCOL_ACTIVE = @as(u32, 3221491975);
pub const ES_E_DEVICE_DIGEST_MISSING = @as(u32, 3221491976);
pub const ES_E_NOT_AUTHORIZED_UNEXPECTED = @as(u32, 3221491977);
pub const ES_E_AUTHORIZED_UNEXPECTED = @as(u32, 3221491978);
pub const ES_E_PROVISIONED_UNEXPECTED = @as(u32, 3221491979);
pub const ES_E_UNKNOWN_DIGEST_ALGORITHM = @as(u32, 3221491980);

//--------------------------------------------------------------------------------
// Section: Types (14)
//--------------------------------------------------------------------------------
pub const ENHANCED_STORAGE_PASSWORD_SILO_INFORMATION = extern struct {
    CurrentAdminFailures: u8,
    CurrentUserFailures: u8,
    TotalUserAuthenticationCount: u32,
    TotalAdminAuthenticationCount: u32,
    FipsCompliant: BOOL,
    SecurityIDAvailable: BOOL,
    InitializeInProgress: BOOL,
    ITMSArmed: BOOL,
    ITMSArmable: BOOL,
    UserCreated: BOOL,
    ResetOnPORDefault: BOOL,
    ResetOnPORCurrent: BOOL,
    MaxAdminFailures: u8,
    MaxUserFailures: u8,
    TimeToCompleteInitialization: u32,
    TimeRemainingToCompleteInitialization: u32,
    MinTimeToAuthenticate: u32,
    MaxAdminPasswordSize: u8,
    MinAdminPasswordSize: u8,
    MaxAdminHintSize: u8,
    MaxUserPasswordSize: u8,
    MinUserPasswordSize: u8,
    MaxUserHintSize: u8,
    MaxUserNameSize: u8,
    MaxSiloNameSize: u8,
    MaxChallengeSize: u16,
};

pub const ACT_AUTHORIZATION_STATE = extern struct {
    ulState: u32,
};

pub const SILO_INFO = extern struct {
    ulSTID: u32,
    SpecificationMajor: u8,
    SpecificationMinor: u8,
    ImplementationMajor: u8,
    ImplementationMinor: u8,
    type: u8,
    capabilities: u8,
};

pub const ACT_AUTHORIZATION_STATE_VALUE = enum(i32) {
    UNAUTHORIZED = 0,
    AUTHORIZED = 1,
};
pub const ACT_UNAUTHORIZED = ACT_AUTHORIZATION_STATE_VALUE.UNAUTHORIZED;
pub const ACT_AUTHORIZED = ACT_AUTHORIZATION_STATE_VALUE.AUTHORIZED;

// TODO: this type is limited to platform 'windows6.0.6000'
const IID_IEnumEnhancedStorageACT_Value = Guid.initString("09b224bd-1335-4631-a7ff-cfd3a92646d7");
pub const IID_IEnumEnhancedStorageACT = &IID_IEnumEnhancedStorageACT_Value;
pub const IEnumEnhancedStorageACT = extern struct {
    pub const VTable = extern struct {
        base: IUnknown.VTable,
        GetACTs: switch (@import("builtin").zig_backend) {
            .stage1 => fn(
                self: *const IEnumEnhancedStorageACT,
                pppIEnhancedStorageACTs: [*]?*?*IEnhancedStorageACT,
                pcEnhancedStorageACTs: ?*u32,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
            else => *const fn(
                self: *const IEnumEnhancedStorageACT,
                pppIEnhancedStorageACTs: [*]?*?*IEnhancedStorageACT,
                pcEnhancedStorageACTs: ?*u32,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
        },
        GetMatchingACT: switch (@import("builtin").zig_backend) {
            .stage1 => fn(
                self: *const IEnumEnhancedStorageACT,
                szVolume: ?[*:0]align(1) const u16,
                ppIEnhancedStorageACT: ?*?*IEnhancedStorageACT,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
            else => *const fn(
                self: *const IEnumEnhancedStorageACT,
                szVolume: ?[*:0]align(1) const u16,
                ppIEnhancedStorageACT: ?*?*IEnhancedStorageACT,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
        },
    };
    vtable: *const VTable,
    pub fn MethodMixin(comptime T: type) type { return struct {
        pub usingnamespace IUnknown.MethodMixin(T);
        // NOTE: method is namespaced with interface name to avoid conflicts for now
        pub fn IEnumEnhancedStorageACT_GetACTs(self: *const T, pppIEnhancedStorageACTs: [*]?*?*IEnhancedStorageACT, pcEnhancedStorageACTs: ?*u32) callconv(.Inline) HRESULT {
            return @as(*const IEnumEnhancedStorageACT.VTable, @ptrCast(self.vtable)).GetACTs(@as(*const IEnumEnhancedStorageACT, @ptrCast(self)), pppIEnhancedStorageACTs, pcEnhancedStorageACTs);
        }
        // NOTE: method is namespaced with interface name to avoid conflicts for now
        pub fn IEnumEnhancedStorageACT_GetMatchingACT(self: *const T, szVolume: ?[*:0]align(1) const u16, ppIEnhancedStorageACT: ?*?*IEnhancedStorageACT) callconv(.Inline) HRESULT {
            return @as(*const IEnumEnhancedStorageACT.VTable, @ptrCast(self.vtable)).GetMatchingACT(@as(*const IEnumEnhancedStorageACT, @ptrCast(self)), szVolume, ppIEnhancedStorageACT);
        }
    };}
    pub usingnamespace MethodMixin(@This());
};

// TODO: this type is limited to platform 'windows6.0.6000'
const IID_IEnhancedStorageACT_Value = Guid.initString("6e7781f4-e0f2-4239-b976-a01abab52930");
pub const IID_IEnhancedStorageACT = &IID_IEnhancedStorageACT_Value;
pub const IEnhancedStorageACT = extern struct {
    pub const VTable = extern struct {
        base: IUnknown.VTable,
        Authorize: switch (@import("builtin").zig_backend) {
            .stage1 => fn(
                self: *const IEnhancedStorageACT,
                hwndParent: u32,
                dwFlags: u32,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
            else => *const fn(
                self: *const IEnhancedStorageACT,
                hwndParent: u32,
                dwFlags: u32,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
        },
        Unauthorize: switch (@import("builtin").zig_backend) {
            .stage1 => fn(
                self: *const IEnhancedStorageACT,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
            else => *const fn(
                self: *const IEnhancedStorageACT,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
        },
        GetAuthorizationState: switch (@import("builtin").zig_backend) {
            .stage1 => fn(
                self: *const IEnhancedStorageACT,
                pState: ?*ACT_AUTHORIZATION_STATE,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
            else => *const fn(
                self: *const IEnhancedStorageACT,
                pState: ?*ACT_AUTHORIZATION_STATE,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
        },
        GetMatchingVolume: switch (@import("builtin").zig_backend) {
            .stage1 => fn(
                self: *const IEnhancedStorageACT,
                ppwszVolume: ?*?PWSTR,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
            else => *const fn(
                self: *const IEnhancedStorageACT,
                ppwszVolume: ?*?PWSTR,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
        },
        GetUniqueIdentity: switch (@import("builtin").zig_backend) {
            .stage1 => fn(
                self: *const IEnhancedStorageACT,
                ppwszIdentity: ?*?PWSTR,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
            else => *const fn(
                self: *const IEnhancedStorageACT,
                ppwszIdentity: ?*?PWSTR,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
        },
        GetSilos: switch (@import("builtin").zig_backend) {
            .stage1 => fn(
                self: *const IEnhancedStorageACT,
                pppIEnhancedStorageSilos: [*]?*?*IEnhancedStorageSilo,
                pcEnhancedStorageSilos: ?*u32,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
            else => *const fn(
                self: *const IEnhancedStorageACT,
                pppIEnhancedStorageSilos: [*]?*?*IEnhancedStorageSilo,
                pcEnhancedStorageSilos: ?*u32,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
        },
    };
    vtable: *const VTable,
    pub fn MethodMixin(comptime T: type) type { return struct {
        pub usingnamespace IUnknown.MethodMixin(T);
        // NOTE: method is namespaced with interface name to avoid conflicts for now
        pub fn IEnhancedStorageACT_Authorize(self: *const T, hwndParent: u32, dwFlags: u32) callconv(.Inline) HRESULT {
            return @as(*const IEnhancedStorageACT.VTable, @ptrCast(self.vtable)).Authorize(@as(*const IEnhancedStorageACT, @ptrCast(self)), hwndParent, dwFlags);
        }
        // NOTE: method is namespaced with interface name to avoid conflicts for now
        pub fn IEnhancedStorageACT_Unauthorize(self: *const T) callconv(.Inline) HRESULT {
            return @as(*const IEnhancedStorageACT.VTable, @ptrCast(self.vtable)).Unauthorize(@as(*const IEnhancedStorageACT, @ptrCast(self)));
        }
        // NOTE: method is namespaced with interface name to avoid conflicts for now
        pub fn IEnhancedStorageACT_GetAuthorizationState(self: *const T, pState: ?*ACT_AUTHORIZATION_STATE) callconv(.Inline) HRESULT {
            return @as(*const IEnhancedStorageACT.VTable, @ptrCast(self.vtable)).GetAuthorizationState(@as(*const IEnhancedStorageACT, @ptrCast(self)), pState);
        }
        // NOTE: method is namespaced with interface name to avoid conflicts for now
        pub fn IEnhancedStorageACT_GetMatchingVolume(self: *const T, ppwszVolume: ?*?PWSTR) callconv(.Inline) HRESULT {
            return @as(*const IEnhancedStorageACT.VTable, @ptrCast(self.vtable)).GetMatchingVolume(@as(*const IEnhancedStorageACT, @ptrCast(self)), ppwszVolume);
        }
        // NOTE: method is namespaced with interface name to avoid conflicts for now
        pub fn IEnhancedStorageACT_GetUniqueIdentity(self: *const T, ppwszIdentity: ?*?PWSTR) callconv(.Inline) HRESULT {
            return @as(*const IEnhancedStorageACT.VTable, @ptrCast(self.vtable)).GetUniqueIdentity(@as(*const IEnhancedStorageACT, @ptrCast(self)), ppwszIdentity);
        }
        // NOTE: method is namespaced with interface name to avoid conflicts for now
        pub fn IEnhancedStorageACT_GetSilos(self: *const T, pppIEnhancedStorageSilos: [*]?*?*IEnhancedStorageSilo, pcEnhancedStorageSilos: ?*u32) callconv(.Inline) HRESULT {
            return @as(*const IEnhancedStorageACT.VTable, @ptrCast(self.vtable)).GetSilos(@as(*const IEnhancedStorageACT, @ptrCast(self)), pppIEnhancedStorageSilos, pcEnhancedStorageSilos);
        }
    };}
    pub usingnamespace MethodMixin(@This());
};

// TODO: this type is limited to platform 'windows6.1'
const IID_IEnhancedStorageACT2_Value = Guid.initString("4da57d2e-8eb3-41f6-a07e-98b52b88242b");
pub const IID_IEnhancedStorageACT2 = &IID_IEnhancedStorageACT2_Value;
pub const IEnhancedStorageACT2 = extern struct {
    pub const VTable = extern struct {
        base: IEnhancedStorageACT.VTable,
        GetDeviceName: switch (@import("builtin").zig_backend) {
            .stage1 => fn(
                self: *const IEnhancedStorageACT2,
                ppwszDeviceName: ?*?PWSTR,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
            else => *const fn(
                self: *const IEnhancedStorageACT2,
                ppwszDeviceName: ?*?PWSTR,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
        },
        IsDeviceRemovable: switch (@import("builtin").zig_backend) {
            .stage1 => fn(
                self: *const IEnhancedStorageACT2,
                pIsDeviceRemovable: ?*BOOL,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
            else => *const fn(
                self: *const IEnhancedStorageACT2,
                pIsDeviceRemovable: ?*BOOL,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
        },
    };
    vtable: *const VTable,
    pub fn MethodMixin(comptime T: type) type { return struct {
        pub usingnamespace IEnhancedStorageACT.MethodMixin(T);
        // NOTE: method is namespaced with interface name to avoid conflicts for now
        pub fn IEnhancedStorageACT2_GetDeviceName(self: *const T, ppwszDeviceName: ?*?PWSTR) callconv(.Inline) HRESULT {
            return @as(*const IEnhancedStorageACT2.VTable, @ptrCast(self.vtable)).GetDeviceName(@as(*const IEnhancedStorageACT2, @ptrCast(self)), ppwszDeviceName);
        }
        // NOTE: method is namespaced with interface name to avoid conflicts for now
        pub fn IEnhancedStorageACT2_IsDeviceRemovable(self: *const T, pIsDeviceRemovable: ?*BOOL) callconv(.Inline) HRESULT {
            return @as(*const IEnhancedStorageACT2.VTable, @ptrCast(self.vtable)).IsDeviceRemovable(@as(*const IEnhancedStorageACT2, @ptrCast(self)), pIsDeviceRemovable);
        }
    };}
    pub usingnamespace MethodMixin(@This());
};

const IID_IEnhancedStorageACT3_Value = Guid.initString("022150a1-113d-11df-bb61-001aa01bbc58");
pub const IID_IEnhancedStorageACT3 = &IID_IEnhancedStorageACT3_Value;
pub const IEnhancedStorageACT3 = extern struct {
    pub const VTable = extern struct {
        base: IEnhancedStorageACT2.VTable,
        UnauthorizeEx: switch (@import("builtin").zig_backend) {
            .stage1 => fn(
                self: *const IEnhancedStorageACT3,
                dwFlags: u32,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
            else => *const fn(
                self: *const IEnhancedStorageACT3,
                dwFlags: u32,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
        },
        IsQueueFrozen: switch (@import("builtin").zig_backend) {
            .stage1 => fn(
                self: *const IEnhancedStorageACT3,
                pIsQueueFrozen: ?*BOOL,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
            else => *const fn(
                self: *const IEnhancedStorageACT3,
                pIsQueueFrozen: ?*BOOL,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
        },
        GetShellExtSupport: switch (@import("builtin").zig_backend) {
            .stage1 => fn(
                self: *const IEnhancedStorageACT3,
                pShellExtSupport: ?*BOOL,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
            else => *const fn(
                self: *const IEnhancedStorageACT3,
                pShellExtSupport: ?*BOOL,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
        },
    };
    vtable: *const VTable,
    pub fn MethodMixin(comptime T: type) type { return struct {
        pub usingnamespace IEnhancedStorageACT2.MethodMixin(T);
        // NOTE: method is namespaced with interface name to avoid conflicts for now
        pub fn IEnhancedStorageACT3_UnauthorizeEx(self: *const T, dwFlags: u32) callconv(.Inline) HRESULT {
            return @as(*const IEnhancedStorageACT3.VTable, @ptrCast(self.vtable)).UnauthorizeEx(@as(*const IEnhancedStorageACT3, @ptrCast(self)), dwFlags);
        }
        // NOTE: method is namespaced with interface name to avoid conflicts for now
        pub fn IEnhancedStorageACT3_IsQueueFrozen(self: *const T, pIsQueueFrozen: ?*BOOL) callconv(.Inline) HRESULT {
            return @as(*const IEnhancedStorageACT3.VTable, @ptrCast(self.vtable)).IsQueueFrozen(@as(*const IEnhancedStorageACT3, @ptrCast(self)), pIsQueueFrozen);
        }
        // NOTE: method is namespaced with interface name to avoid conflicts for now
        pub fn IEnhancedStorageACT3_GetShellExtSupport(self: *const T, pShellExtSupport: ?*BOOL) callconv(.Inline) HRESULT {
            return @as(*const IEnhancedStorageACT3.VTable, @ptrCast(self.vtable)).GetShellExtSupport(@as(*const IEnhancedStorageACT3, @ptrCast(self)), pShellExtSupport);
        }
    };}
    pub usingnamespace MethodMixin(@This());
};

// TODO: this type is limited to platform 'windows6.0.6000'
const IID_IEnhancedStorageSilo_Value = Guid.initString("5aef78c6-2242-4703-bf49-44b29357a359");
pub const IID_IEnhancedStorageSilo = &IID_IEnhancedStorageSilo_Value;
pub const IEnhancedStorageSilo = extern struct {
    pub const VTable = extern struct {
        base: IUnknown.VTable,
        GetInfo: switch (@import("builtin").zig_backend) {
            .stage1 => fn(
                self: *const IEnhancedStorageSilo,
                pSiloInfo: ?*SILO_INFO,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
            else => *const fn(
                self: *const IEnhancedStorageSilo,
                pSiloInfo: ?*SILO_INFO,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
        },
        GetActions: switch (@import("builtin").zig_backend) {
            .stage1 => fn(
                self: *const IEnhancedStorageSilo,
                pppIEnhancedStorageSiloActions: [*]?*?*IEnhancedStorageSiloAction,
                pcEnhancedStorageSiloActions: ?*u32,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
            else => *const fn(
                self: *const IEnhancedStorageSilo,
                pppIEnhancedStorageSiloActions: [*]?*?*IEnhancedStorageSiloAction,
                pcEnhancedStorageSiloActions: ?*u32,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
        },
        SendCommand: switch (@import("builtin").zig_backend) {
            .stage1 => fn(
                self: *const IEnhancedStorageSilo,
                Command: u8,
                pbCommandBuffer: [*:0]u8,
                cbCommandBuffer: u32,
                pbResponseBuffer: [*:0]u8,
                pcbResponseBuffer: ?*u32,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
            else => *const fn(
                self: *const IEnhancedStorageSilo,
                Command: u8,
                pbCommandBuffer: [*:0]u8,
                cbCommandBuffer: u32,
                pbResponseBuffer: [*:0]u8,
                pcbResponseBuffer: ?*u32,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
        },
        GetPortableDevice: switch (@import("builtin").zig_backend) {
            .stage1 => fn(
                self: *const IEnhancedStorageSilo,
                ppIPortableDevice: ?*?*IPortableDevice,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
            else => *const fn(
                self: *const IEnhancedStorageSilo,
                ppIPortableDevice: ?*?*IPortableDevice,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
        },
        GetDevicePath: switch (@import("builtin").zig_backend) {
            .stage1 => fn(
                self: *const IEnhancedStorageSilo,
                ppwszSiloDevicePath: ?*?PWSTR,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
            else => *const fn(
                self: *const IEnhancedStorageSilo,
                ppwszSiloDevicePath: ?*?PWSTR,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
        },
    };
    vtable: *const VTable,
    pub fn MethodMixin(comptime T: type) type { return struct {
        pub usingnamespace IUnknown.MethodMixin(T);
        // NOTE: method is namespaced with interface name to avoid conflicts for now
        pub fn IEnhancedStorageSilo_GetInfo(self: *const T, pSiloInfo: ?*SILO_INFO) callconv(.Inline) HRESULT {
            return @as(*const IEnhancedStorageSilo.VTable, @ptrCast(self.vtable)).GetInfo(@as(*const IEnhancedStorageSilo, @ptrCast(self)), pSiloInfo);
        }
        // NOTE: method is namespaced with interface name to avoid conflicts for now
        pub fn IEnhancedStorageSilo_GetActions(self: *const T, pppIEnhancedStorageSiloActions: [*]?*?*IEnhancedStorageSiloAction, pcEnhancedStorageSiloActions: ?*u32) callconv(.Inline) HRESULT {
            return @as(*const IEnhancedStorageSilo.VTable, @ptrCast(self.vtable)).GetActions(@as(*const IEnhancedStorageSilo, @ptrCast(self)), pppIEnhancedStorageSiloActions, pcEnhancedStorageSiloActions);
        }
        // NOTE: method is namespaced with interface name to avoid conflicts for now
        pub fn IEnhancedStorageSilo_SendCommand(self: *const T, Command: u8, pbCommandBuffer: [*:0]u8, cbCommandBuffer: u32, pbResponseBuffer: [*:0]u8, pcbResponseBuffer: ?*u32) callconv(.Inline) HRESULT {
            return @as(*const IEnhancedStorageSilo.VTable, @ptrCast(self.vtable)).SendCommand(@as(*const IEnhancedStorageSilo, @ptrCast(self)), Command, pbCommandBuffer, cbCommandBuffer, pbResponseBuffer, pcbResponseBuffer);
        }
        // NOTE: method is namespaced with interface name to avoid conflicts for now
        pub fn IEnhancedStorageSilo_GetPortableDevice(self: *const T, ppIPortableDevice: ?*?*IPortableDevice) callconv(.Inline) HRESULT {
            return @as(*const IEnhancedStorageSilo.VTable, @ptrCast(self.vtable)).GetPortableDevice(@as(*const IEnhancedStorageSilo, @ptrCast(self)), ppIPortableDevice);
        }
        // NOTE: method is namespaced with interface name to avoid conflicts for now
        pub fn IEnhancedStorageSilo_GetDevicePath(self: *const T, ppwszSiloDevicePath: ?*?PWSTR) callconv(.Inline) HRESULT {
            return @as(*const IEnhancedStorageSilo.VTable, @ptrCast(self.vtable)).GetDevicePath(@as(*const IEnhancedStorageSilo, @ptrCast(self)), ppwszSiloDevicePath);
        }
    };}
    pub usingnamespace MethodMixin(@This());
};

// TODO: this type is limited to platform 'windows6.0.6000'
const IID_IEnhancedStorageSiloAction_Value = Guid.initString("b6f7f311-206f-4ff8-9c4b-27efee77a86f");
pub const IID_IEnhancedStorageSiloAction = &IID_IEnhancedStorageSiloAction_Value;
pub const IEnhancedStorageSiloAction = extern struct {
    pub const VTable = extern struct {
        base: IUnknown.VTable,
        GetName: switch (@import("builtin").zig_backend) {
            .stage1 => fn(
                self: *const IEnhancedStorageSiloAction,
                ppwszActionName: ?*?PWSTR,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
            else => *const fn(
                self: *const IEnhancedStorageSiloAction,
                ppwszActionName: ?*?PWSTR,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
        },
        GetDescription: switch (@import("builtin").zig_backend) {
            .stage1 => fn(
                self: *const IEnhancedStorageSiloAction,
                ppwszActionDescription: ?*?PWSTR,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
            else => *const fn(
                self: *const IEnhancedStorageSiloAction,
                ppwszActionDescription: ?*?PWSTR,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
        },
        Invoke: switch (@import("builtin").zig_backend) {
            .stage1 => fn(
                self: *const IEnhancedStorageSiloAction,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
            else => *const fn(
                self: *const IEnhancedStorageSiloAction,
            ) callconv(@import("std").os.windows.WINAPI) HRESULT,
        },
    };
    vtable: *const VTable,
    pub fn MethodMixin(comptime T: type) type { return struct {
        pub usingnamespace IUnknown.MethodMixin(T);
        // NOTE: method is namespaced with interface name to avoid conflicts for now
        pub fn IEnhancedStorageSiloAction_GetName(self: *const T, ppwszActionName: ?*?PWSTR) callconv(.Inline) HRESULT {
            return @as(*const IEnhancedStorageSiloAction.VTable, @ptrCast(self.vtable)).GetName(@as(*const IEnhancedStorageSiloAction, @ptrCast(self)), ppwszActionName);
        }
        // NOTE: method is namespaced with interface name to avoid conflicts for now
        pub fn IEnhancedStorageSiloAction_GetDescription(self: *const T, ppwszActionDescription: ?*?PWSTR) callconv(.Inline) HRESULT {
            return @as(*const IEnhancedStorageSiloAction.VTable, @ptrCast(self.vtable)).GetDescription(@as(*const IEnhancedStorageSiloAction, @ptrCast(self)), ppwszActionDescription);
        }
        // NOTE: method is namespaced with interface name to avoid conflicts for now
        pub fn IEnhancedStorageSiloAction_Invoke(self: *const T) callconv(.Inline) HRESULT {
            return @as(*const IEnhancedStorageSiloAction.VTable, @ptrCast(self.vtable)).Invoke(@as(*const IEnhancedStorageSiloAction, @ptrCast(self)));
        }
    };}
    pub usingnamespace MethodMixin(@This());
};

const CLSID_EnumEnhancedStorageACT_Value = Guid.initString("fe841493-835c-4fa3-b6cc-b4b2d4719848");
pub const CLSID_EnumEnhancedStorageACT = &CLSID_EnumEnhancedStorageACT_Value;

const CLSID_EnhancedStorageACT_Value = Guid.initString("af076a15-2ece-4ad4-bb21-29f040e176d8");
pub const CLSID_EnhancedStorageACT = &CLSID_EnhancedStorageACT_Value;

const CLSID_EnhancedStorageSilo_Value = Guid.initString("cb25220c-76c7-4fee-842b-f3383cd022bc");
pub const CLSID_EnhancedStorageSilo = &CLSID_EnhancedStorageSilo_Value;

const CLSID_EnhancedStorageSiloAction_Value = Guid.initString("886d29dd-b506-466b-9fbf-b44ff383fb3f");
pub const CLSID_EnhancedStorageSiloAction = &CLSID_EnhancedStorageSiloAction_Value;


//--------------------------------------------------------------------------------
// Section: Functions (0)
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
// Section: Unicode Aliases (0)
//--------------------------------------------------------------------------------
const thismodule = @This();
pub usingnamespace switch (@import("../../../zig.zig").unicode_mode) {
    .ansi => struct {
    },
    .wide => struct {
    },
    .unspecified => if (@import("builtin").is_test) struct {
    } else struct {
    },
};
//--------------------------------------------------------------------------------
// Section: Imports (7)
//--------------------------------------------------------------------------------
const Guid = @import("../../../zig.zig").Guid;
const BOOL = @import("../../../windows/win32/foundation.zig").BOOL;
const HRESULT = @import("../../../windows/win32/foundation.zig").HRESULT;
const IPortableDevice = @import("../../../windows/win32/devices/portable_devices.zig").IPortableDevice;
const IUnknown = @import("../../../windows/win32/system/com.zig").IUnknown;
const PROPERTYKEY = @import("../../../windows/win32/ui/shell/properties_system.zig").PROPERTYKEY;
const PWSTR = @import("../../../windows/win32/foundation.zig").PWSTR;

test {
    @setEvalBranchQuota(
        comptime @import("std").meta.declarations(@This()).len * 3
    );

    // reference all the pub declarations
    if (!@import("builtin").is_test) return;
    inline for (comptime @import("std").meta.declarations(@This())) |decl| {
        _ = @field(@This(), decl.name);
    }
}
